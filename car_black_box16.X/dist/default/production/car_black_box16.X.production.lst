

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Jan 06 23:01:12 2025

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60   000000                     
    61                           ; Version 2.20
    62                           ; Generated 12/02/2020 GMT
    63                           ; 
    64                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F4580 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95   000000                     
    96                           	psect	idataCOMRAM
    97   00156F                     __pidataCOMRAM:
    98                           	callstack 0
    99                           
   100                           ;initializer for _menu
   101   00156F  0B                 	db	low STR_10
   102   001570  2F                 	db	high STR_10
   103   001571  1F                 	db	low STR_11
   104   001572  2F                 	db	high STR_11
   105   001573  F5                 	db	low STR_12
   106   001574  2E                 	db	high STR_12
   107   001575  44                 	db	low STR_13
   108   001576  2F                 	db	high STR_13
   109                           
   110                           ;initializer for _select_index
   111   001577  0001               	dw	1
   112                           
   113                           ;initializer for read_switches@once
   114   001579  01                 	db	1
   115                           
   116                           	psect	idataBANK0
   117   0015D8                     __pidataBANK0:
   118                           	callstack 0
   119                           
   120                           ;initializer for _gear
   121   0015D8  F8                 	db	low STR_1
   122   0015D9  2F                 	db	high STR_1
   123   0015DA  F5                 	db	low STR_2
   124   0015DB  2F                 	db	high STR_2
   125   0015DC  E6                 	db	low STR_3
   126   0015DD  2F                 	db	high STR_3
   127   0015DE  E9                 	db	low STR_4
   128   0015DF  2F                 	db	high STR_4
   129   0015E0  EC                 	db	low STR_5
   130   0015E1  2F                 	db	high STR_5
   131   0015E2  EF                 	db	low STR_6
   132   0015E3  2F                 	db	high STR_6
   133   0015E4  F2                 	db	low STR_7
   134   0015E5  2F                 	db	high STR_7
   135   0015E6  FB                 	db	low STR_8
   136   0015E7  2F                 	db	high STR_8
   137   0015E8  E3                 	db	low STR_9
   138   0015E9  2F                 	db	high STR_9
   139   000000                     _RCREG	set	4014
   140   000000                     _TXREG	set	4013
   141   000000                     _SPBRG	set	4015
   142   000000                     _SSPADD	set	4040
   143   000000                     _SSPCON1	set	4038
   144   000000                     _ADRESL	set	4035
   145   000000                     _ADRESH	set	4036
   146   000000                     _TRISC	set	3988
   147   000000                     _BRG16	set	32195
   148   000000                     _ACKSTAT	set	32302
   149   000000                     _CKE	set	32318
   150   000000                     _CHS3	set	32277
   151   000000                     _RBPU	set	32655
   152   000000                     _TRISD7	set	31919
   153   000000                     _PORTBbits	set	3969
   154   000000                     _TRISD	set	3989
   155   000000                     _RCIF	set	31989
   156   000000                     _TXIF	set	31988
   157   000000                     _CREN	set	32092
   158   000000                     _RX9	set	32094
   159   000000                     _BRGH	set	32098
   160   000000                     _SENDB	set	32099
   161   000000                     _SYNC	set	32100
   162   000000                     _TXEN	set	32101
   163   000000                     _ACKEN	set	32300
   164   000000                     _ACKDT	set	32301
   165   000000                     _RCEN	set	32299
   166   000000                     _RSEN	set	32297
   167   000000                     _PEN	set	32298
   168   000000                     _SEN	set	32296
   169   000000                     _TRISC4	set	31908
   170   000000                     _TRISC3	set	31907
   171   000000                     _GO	set	32273
   172   000000                     _ACQT0	set	32259
   173   000000                     _ACQT1	set	32260
   174   000000                     _ACQT2	set	32261
   175   000000                     _ADCS0	set	32256
   176   000000                     _ADCS1	set	32257
   177   000000                     _ADCS2	set	32258
   178   000000                     _VCFG0	set	32268
   179   000000                     _VCFG1	set	32269
   180   000000                     _PCFG0	set	32264
   181   000000                     _PCFG1	set	32265
   182   000000                     _PCFG2	set	32266
   183   000000                     _PCFG3	set	32267
   184   000000                     _ADON	set	32272
   185   000000                     _CHS0	set	32274
   186   000000                     _CHS1	set	32275
   187   000000                     _CHS2	set	32276
   188   000000                     _RD7	set	31775
   189   000000                     _RC0	set	31760
   190   000000                     _RC2	set	31762
   191   000000                     _PORTB	set	3969
   192   000000                     _TRISB	set	3987
   193   000000                     _RC1	set	31761
   194   000000                     _PORTD	set	3971
   195   000000                     _ADCON1	set	4033
   196   000000                     _SSPIF	set	31987
   197   000000                     _ADFM	set	32263
   198   000000                     _SSPBUF	set	4041
   199   000000                     _SPEN	set	32095
   200   000000                     _TX9	set	32102
   201                           
   202                           	psect	mediumconst
   203   002EDE                     __pmediumconst:
   204                           	callstack 0
   205   002EDE  00                 	db	0
   206   002EDF                     STR_15:
   207   002EDF  4E                 	db	78	;'N'
   208   002EE0  4F                 	db	79	;'O'
   209   002EE1  20                 	db	32
   210   002EE2  4C                 	db	76	;'L'
   211   002EE3  4F                 	db	79	;'O'
   212   002EE4  47                 	db	71	;'G'
   213   002EE5  53                 	db	83	;'S'
   214   002EE6  20                 	db	32
   215   002EE7  54                 	db	84	;'T'
   216   002EE8  4F                 	db	79	;'O'
   217   002EE9  20                 	db	32
   218   002EEA  44                 	db	68	;'D'
   219   002EEB  4F                 	db	79	;'O'
   220   002EEC  57                 	db	87	;'W'
   221   002EED  4E                 	db	78	;'N'
   222   002EEE  4C                 	db	76	;'L'
   223   002EEF  4F                 	db	79	;'O'
   224   002EF0  41                 	db	65	;'A'
   225   002EF1  44                 	db	68	;'D'
   226   002EF2  0A                 	db	10
   227   002EF3  0D                 	db	13
   228   002EF4  00                 	db	0
   229   002EF5                     STR_12:
   230   002EF5  44                 	db	68	;'D'
   231   002EF6  4F                 	db	79	;'O'
   232   002EF7  57                 	db	87	;'W'
   233   002EF8  4E                 	db	78	;'N'
   234   002EF9  4C                 	db	76	;'L'
   235   002EFA  4F                 	db	79	;'O'
   236   002EFB  41                 	db	65	;'A'
   237   002EFC  44                 	db	68	;'D'
   238   002EFD  20                 	db	32
   239   002EFE  4C                 	db	76	;'L'
   240   002EFF  4F                 	db	79	;'O'
   241   002F00  47                 	db	71	;'G'
   242   002F01  20                 	db	32
   243   002F02  20                 	db	32
   244   002F03  20                 	db	32
   245   002F04  20                 	db	32
   246   002F05  20                 	db	32
   247   002F06  20                 	db	32
   248   002F07  20                 	db	32
   249   002F08  20                 	db	32
   250   002F09  20                 	db	32
   251   002F0A  00                 	db	0
   252   002F0B                     STR_10:
   253   002F0B  56                 	db	86	;'V'
   254   002F0C  49                 	db	73	;'I'
   255   002F0D  45                 	db	69	;'E'
   256   002F0E  57                 	db	87	;'W'
   257   002F0F  20                 	db	32
   258   002F10  4C                 	db	76	;'L'
   259   002F11  4F                 	db	79	;'O'
   260   002F12  47                 	db	71	;'G'
   261   002F13  20                 	db	32
   262   002F14  20                 	db	32
   263   002F15  20                 	db	32
   264   002F16  20                 	db	32
   265   002F17  20                 	db	32
   266   002F18  20                 	db	32
   267   002F19  20                 	db	32
   268   002F1A  20                 	db	32
   269   002F1B  20                 	db	32
   270   002F1C  20                 	db	32
   271   002F1D  20                 	db	32
   272   002F1E  00                 	db	0
   273   002F1F                     STR_11:
   274   002F1F  43                 	db	67	;'C'
   275   002F20  4C                 	db	76	;'L'
   276   002F21  45                 	db	69	;'E'
   277   002F22  41                 	db	65	;'A'
   278   002F23  52                 	db	82	;'R'
   279   002F24  20                 	db	32
   280   002F25  4C                 	db	76	;'L'
   281   002F26  4F                 	db	79	;'O'
   282   002F27  47                 	db	71	;'G'
   283   002F28  20                 	db	32
   284   002F29  20                 	db	32
   285   002F2A  20                 	db	32
   286   002F2B  20                 	db	32
   287   002F2C  20                 	db	32
   288   002F2D  20                 	db	32
   289   002F2E  20                 	db	32
   290   002F2F  20                 	db	32
   291   002F30  20                 	db	32
   292   002F31  00                 	db	0
   293   002F32                     STR_29:
   294   002F32  23                 	db	35
   295   002F33  20                 	db	32
   296   002F34  20                 	db	32
   297   002F35  54                 	db	84	;'T'
   298   002F36  49                 	db	73	;'I'
   299   002F37  4D                 	db	77	;'M'
   300   002F38  45                 	db	69	;'E'
   301   002F39  20                 	db	32
   302   002F3A  20                 	db	32
   303   002F3B  20                 	db	32
   304   002F3C  20                 	db	32
   305   002F3D  47                 	db	71	;'G'
   306   002F3E  52                 	db	82	;'R'
   307   002F3F  20                 	db	32
   308   002F40  20                 	db	32
   309   002F41  53                 	db	83	;'S'
   310   002F42  50                 	db	80	;'P'
   311   002F43  00                 	db	0
   312   002F44                     STR_13:
   313   002F44  53                 	db	83	;'S'
   314   002F45  45                 	db	69	;'E'
   315   002F46  54                 	db	84	;'T'
   316   002F47  20                 	db	32
   317   002F48  54                 	db	84	;'T'
   318   002F49  49                 	db	73	;'I'
   319   002F4A  4D                 	db	77	;'M'
   320   002F4B  45                 	db	69	;'E'
   321   002F4C  20                 	db	32
   322   002F4D  20                 	db	32
   323   002F4E  20                 	db	32
   324   002F4F  20                 	db	32
   325   002F50  20                 	db	32
   326   002F51  20                 	db	32
   327   002F52  20                 	db	32
   328   002F53  20                 	db	32
   329   002F54  20                 	db	32
   330   002F55  00                 	db	0
   331   002F56                     STR_14:
   332   002F56  20                 	db	32
   333   002F57  20                 	db	32
   334   002F58  54                 	db	84	;'T'
   335   002F59  49                 	db	73	;'I'
   336   002F5A  4D                 	db	77	;'M'
   337   002F5B  45                 	db	69	;'E'
   338   002F5C  20                 	db	32
   339   002F5D  20                 	db	32
   340   002F5E  47                 	db	71	;'G'
   341   002F5F  45                 	db	69	;'E'
   342   002F60  41                 	db	65	;'A'
   343   002F61  52                 	db	82	;'R'
   344   002F62  20                 	db	32
   345   002F63  20                 	db	32
   346   002F64  53                 	db	83	;'S'
   347   002F65  44                 	db	68	;'D'
   348   002F66  00                 	db	0
   349   002F67                     STR_18:
   350   002F67  23                 	db	35
   351   002F68  20                 	db	32
   352   002F69  20                 	db	32
   353   002F6A  20                 	db	32
   354   002F6B  54                 	db	84	;'T'
   355   002F6C  49                 	db	73	;'I'
   356   002F6D  4D                 	db	77	;'M'
   357   002F6E  45                 	db	69	;'E'
   358   002F6F  20                 	db	32
   359   002F70  20                 	db	32
   360   002F71  20                 	db	32
   361   002F72  47                 	db	71	;'G'
   362   002F73  52                 	db	82	;'R'
   363   002F74  20                 	db	32
   364   002F75  53                 	db	83	;'S'
   365   002F76  50                 	db	80	;'P'
   366   002F77  00                 	db	0
   367   002F78                     STR_31:
   368   002F78  65                 	db	101	;'e'
   369   002F79  76                 	db	118	;'v'
   370   002F7A  65                 	db	101	;'e'
   371   002F7B  6E                 	db	110	;'n'
   372   002F7C  74                 	db	116	;'t'
   373   002F7D  5F                 	db	95	;'_'
   374   002F7E  63                 	db	99	;'c'
   375   002F7F  6F                 	db	111	;'o'
   376   002F80  75                 	db	117	;'u'
   377   002F81  6E                 	db	110	;'n'
   378   002F82  74                 	db	116	;'t'
   379   002F83  3D                 	db	61	;'='
   380   002F84  30                 	db	48	;'0'
   381   002F85  00                 	db	0
   382   002F86                     STR_21:
   383   002F86  44                 	db	68	;'D'
   384   002F87  4F                 	db	79	;'O'
   385   002F88  57                 	db	87	;'W'
   386   002F89  4E                 	db	78	;'N'
   387   002F8A  4C                 	db	76	;'L'
   388   002F8B  4F                 	db	79	;'O'
   389   002F8C  41                 	db	65	;'A'
   390   002F8D  44                 	db	68	;'D'
   391   002F8E  49                 	db	73	;'I'
   392   002F8F  4E                 	db	78	;'N'
   393   002F90  47                 	db	71	;'G'
   394   002F91  2E                 	db	46
   395   002F92  2E                 	db	46
   396   002F93  00                 	db	0
   397   002F94                     STR_30:
   398   002F94  4C                 	db	76	;'L'
   399   002F95  6F                 	db	111	;'o'
   400   002F96  67                 	db	103	;'g'
   401   002F97  73                 	db	115	;'s'
   402   002F98  20                 	db	32
   403   002F99  43                 	db	67	;'C'
   404   002F9A  6C                 	db	108	;'l'
   405   002F9B  65                 	db	101	;'e'
   406   002F9C  61                 	db	97	;'a'
   407   002F9D  72                 	db	114	;'r'
   408   002F9E  65                 	db	101	;'e'
   409   002F9F  64                 	db	100	;'d'
   410   002FA0  00                 	db	0
   411   002FA1                     STR_22:
   412   002FA1  54                 	db	84	;'T'
   413   002FA2  48                 	db	72	;'H'
   414   002FA3  52                 	db	82	;'R'
   415   002FA4  4F                 	db	79	;'O'
   416   002FA5  55                 	db	85	;'U'
   417   002FA6  47                 	db	71	;'G'
   418   002FA7  48                 	db	72	;'H'
   419   002FA8  20                 	db	32
   420   002FA9  55                 	db	85	;'U'
   421   002FAA  41                 	db	65	;'A'
   422   002FAB  52                 	db	82	;'R'
   423   002FAC  54                 	db	84	;'T'
   424   002FAD  00                 	db	0
   425   002FAE                     STR_17:
   426   002FAE  54                 	db	84	;'T'
   427   002FAF  4F                 	db	79	;'O'
   428   002FB0  20                 	db	32
   429   002FB1  44                 	db	68	;'D'
   430   002FB2  4F                 	db	79	;'O'
   431   002FB3  57                 	db	87	;'W'
   432   002FB4  4E                 	db	78	;'N'
   433   002FB5  4C                 	db	76	;'L'
   434   002FB6  4F                 	db	79	;'O'
   435   002FB7  41                 	db	65	;'A'
   436   002FB8  44                 	db	68	;'D'
   437   002FB9  00                 	db	0
   438   002FBA                     STR_28:
   439   002FBA  54                 	db	84	;'T'
   440   002FBB  4F                 	db	79	;'O'
   441   002FBC  20                 	db	32
   442   002FBD  44                 	db	68	;'D'
   443   002FBE  49                 	db	73	;'I'
   444   002FBF  53                 	db	83	;'S'
   445   002FC0  50                 	db	80	;'P'
   446   002FC1  4C                 	db	76	;'L'
   447   002FC2  41                 	db	65	;'A'
   448   002FC3  59                 	db	89	;'Y'
   449   002FC4  00                 	db	0
   450   002FC5                     STR_27:
   451   002FC5  4E                 	db	78	;'N'
   452   002FC6  4F                 	db	79	;'O'
   453   002FC7  20                 	db	32
   454   002FC8  4C                 	db	76	;'L'
   455   002FC9  4F                 	db	79	;'O'
   456   002FCA  47                 	db	71	;'G'
   457   002FCB  53                 	db	83	;'S'
   458   002FCC  20                 	db	32
   459   002FCD  00                 	db	0
   460   002FCE                     STR_23:
   461   002FCE  48                 	db	72	;'H'
   462   002FCF  48                 	db	72	;'H'
   463   002FD0  3A                 	db	58	;':'
   464   002FD1  4D                 	db	77	;'M'
   465   002FD2  4D                 	db	77	;'M'
   466   002FD3  3A                 	db	58	;':'
   467   002FD4  53                 	db	83	;'S'
   468   002FD5  53                 	db	83	;'S'
   469   002FD6  00                 	db	0
   470   002FD7                     STR_16:
   471   002FD7  4E                 	db	78	;'N'
   472   002FD8  4F                 	db	79	;'O'
   473   002FD9  20                 	db	32
   474   002FDA  4C                 	db	76	;'L'
   475   002FDB  4F                 	db	79	;'O'
   476   002FDC  47                 	db	71	;'G'
   477   002FDD  53                 	db	83	;'S'
   478   002FDE  00                 	db	0
   479   002FDF                     STR_19:
   480   002FDF  0A                 	db	10
   481   002FE0  0A                 	db	10
   482   002FE1  0D                 	db	13
   483   002FE2  00                 	db	0
   484   002FE3                     STR_9:
   485   002FE3  43                 	db	67	;'C'
   486   002FE4  20                 	db	32
   487   002FE5  00                 	db	0
   488   002FE6                     STR_3:
   489   002FE6  47                 	db	71	;'G'
   490   002FE7  31                 	db	49	;'1'
   491   002FE8  00                 	db	0
   492   002FE9                     STR_4:
   493   002FE9  47                 	db	71	;'G'
   494   002FEA  32                 	db	50	;'2'
   495   002FEB  00                 	db	0
   496   002FEC                     STR_5:
   497   002FEC  47                 	db	71	;'G'
   498   002FED  33                 	db	51	;'3'
   499   002FEE  00                 	db	0
   500   002FEF                     STR_6:
   501   002FEF  47                 	db	71	;'G'
   502   002FF0  34                 	db	52	;'4'
   503   002FF1  00                 	db	0
   504   002FF2                     STR_7:
   505   002FF2  47                 	db	71	;'G'
   506   002FF3  35                 	db	53	;'5'
   507   002FF4  00                 	db	0
   508   002FF5                     STR_2:
   509   002FF5  47                 	db	71	;'G'
   510   002FF6  4E                 	db	78	;'N'
   511   002FF7  00                 	db	0
   512   002FF8                     STR_1:
   513   002FF8  4F                 	db	79	;'O'
   514   002FF9  4E                 	db	78	;'N'
   515   002FFA  00                 	db	0
   516   002FFB                     STR_8:
   517   002FFB  47                 	db	71	;'G'
   518   002FFC  52                 	db	82	;'R'
   519   002FFD  00                 	db	0
   520   002FFE  00                 	db	0	; dummy byte at the end
   521   000000                     
   522                           ; #config settings
   523                           
   524                           	psect	cinit
   525   001888                     __pcinit:
   526                           	callstack 0
   527   001888                     start_initialization:
   528                           	callstack 0
   529   001888                     __initialization:
   530                           	callstack 0
   531                           
   532                           ; Initialize objects allocated to BANK0 (18 bytes)
   533                           ; load TBLPTR registers with __pidataBANK0
   534   001888  0ED8               	movlw	low __pidataBANK0
   535   00188A  6EF6               	movwf	tblptrl,c
   536   00188C  0E15               	movlw	high __pidataBANK0
   537   00188E  6EF7               	movwf	tblptrh,c
   538   001890  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   539   001892  6EF8               	movwf	tblptru,c
   540   001894  EE00  F0CE         	lfsr	0,__pdataBANK0
   541   001898  EE10 F012          	lfsr	1,18
   542   00189C                     copy_data0:
   543   00189C  0009               	tblrd		*+
   544   00189E  CFF5 FFEE          	movff	tablat,postinc0
   545   0018A2  50E5               	movf	postdec1,w,c
   546   0018A4  50E1               	movf	fsr1l,w,c
   547   0018A6  E1FA               	bnz	copy_data0
   548                           
   549                           ; Initialize objects allocated to COMRAM (11 bytes)
   550                           ; load TBLPTR registers with __pidataCOMRAM
   551   0018A8  0E6F               	movlw	low __pidataCOMRAM
   552   0018AA  6EF6               	movwf	tblptrl,c
   553   0018AC  0E15               	movlw	high __pidataCOMRAM
   554   0018AE  6EF7               	movwf	tblptrh,c
   555   0018B0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   556   0018B2  6EF8               	movwf	tblptru,c
   557   0018B4  EE00  F047         	lfsr	0,__pdataCOMRAM
   558   0018B8  EE10 F00B          	lfsr	1,11
   559   0018BC                     copy_data1:
   560   0018BC  0009               	tblrd		*+
   561   0018BE  CFF5 FFEE          	movff	tablat,postinc0
   562   0018C2  50E5               	movf	postdec1,w,c
   563   0018C4  50E1               	movf	fsr1l,w,c
   564   0018C6  E1FA               	bnz	copy_data1
   565                           
   566                           ; Clear objects allocated to BANK0 (110 bytes)
   567   0018C8  EE00  F060         	lfsr	0,__pbssBANK0
   568   0018CC  0E6E               	movlw	110
   569   0018CE                     clear_0:
   570   0018CE  6AEE               	clrf	postinc0,c
   571   0018D0  06E8               	decf	wreg,f,c
   572   0018D2  E1FD               	bnz	clear_0
   573                           
   574                           ; Clear objects allocated to COMRAM (39 bytes)
   575   0018D4  EE00  F001         	lfsr	0,__pbssCOMRAM
   576   0018D8  0E27               	movlw	39
   577   0018DA                     clear_1:
   578   0018DA  6AEE               	clrf	postinc0,c
   579   0018DC  06E8               	decf	wreg,f,c
   580   0018DE  E1FD               	bnz	clear_1
   581   0018E0                     end_of_initialization:
   582                           	callstack 0
   583   0018E0                     __end_of__initialization:
   584                           	callstack 0
   585   0018E0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   586   0018E2  6EF8               	movwf	tblptru,c
   587   0018E4  0100               	movlb	0
   588   0018E6  EF24  F00F         	goto	_main	;jump to C main() function
   589                           
   590                           	psect	bssCOMRAM
   591   000001                     __pbssCOMRAM:
   592                           	callstack 0
   593   000001                     _clock_reg:
   594                           	callstack 0
   595   000001                     	ds	3
   596   000004                     set_time@wait:
   597                           	callstack 0
   598   000004                     	ds	2
   599   000006                     _menu_index:
   600                           	callstack 0
   601   000006                     	ds	2
   602   000008                     _gear_index:
   603                           	callstack 0
   604   000008                     	ds	2
   605   00000A                     _speed:
   606                           	callstack 0
   607   00000A                     	ds	2
   608   00000C                     _flag:
   609                           	callstack 0
   610   00000C                     	ds	2
   611   00000E                     _change:
   612                           	callstack 0
   613   00000E                     	ds	2
   614   000010                     _Jay:
   615                           	callstack 0
   616   000010                     	ds	2
   617   000012                     _field:
   618                           	callstack 0
   619   000012                     	ds	2
   620   000014                     _event_count:
   621                           	callstack 0
   622   000014                     	ds	2
   623   000016                     view_log@count:
   624                           	callstack 0
   625   000016                     	ds	1
   626   000017                     view_log@flag:
   627                           	callstack 0
   628   000017                     	ds	1
   629   000018                     read_switches@key:
   630                           	callstack 0
   631   000018                     	ds	1
   632   000019                     _state:
   633                           	callstack 0
   634   000019                     	ds	1
   635   00001A                     _key:
   636                           	callstack 0
   637   00001A                     	ds	1
   638   00001B                     _write_addr:
   639                           	callstack 0
   640   00001B                     	ds	1
   641   00001C                     _second:
   642                           	callstack 0
   643   00001C                     	ds	1
   644   00001D                     _hour:
   645                           	callstack 0
   646   00001D                     	ds	1
   647   00001E                     _minute:
   648                           	callstack 0
   649   00001E                     	ds	1
   650   00001F                     _time:
   651                           	callstack 0
   652   00001F                     	ds	9
   653                           
   654                           	psect	dataCOMRAM
   655   000047                     __pdataCOMRAM:
   656                           	callstack 0
   657   000047                     _menu:
   658                           	callstack 0
   659   000047                     	ds	8
   660   00004F                     _select_index:
   661                           	callstack 0
   662   00004F                     	ds	2
   663   000051                     read_switches@once:
   664                           	callstack 0
   665   000051                     	ds	1
   666                           
   667                           	psect	bssBANK0
   668   000060                     __pbssBANK0:
   669                           	callstack 0
   670   000060                     _events:
   671                           	callstack 0
   672   000060                     	ds	110
   673                           
   674                           	psect	dataBANK0
   675   0000CE                     __pdataBANK0:
   676                           	callstack 0
   677   0000CE                     _gear:
   678                           	callstack 0
   679   0000CE                     	ds	18
   680                           
   681                           	psect	cstackCOMRAM
   682   000028                     __pcstackCOMRAM:
   683                           	callstack 0
   684   000028                     ?_read_adc:
   685                           	callstack 0
   686   000028                     ?___wmul:
   687                           	callstack 0
   688   000028                     ?___awdiv:
   689                           	callstack 0
   690   000028                     ?___awmod:
   691                           	callstack 0
   692   000028                     ?___lwmod:
   693                           	callstack 0
   694   000028                     clcd_write@control_bit:
   695                           	callstack 0
   696   000028                     read_switches@detection_type:
   697                           	callstack 0
   698   000028                     i2c_write@data:
   699                           	callstack 0
   700   000028                     putch@byte:
   701                           	callstack 0
   702   000028                     ___wmul@multiplier:
   703                           	callstack 0
   704   000028                     ___awdiv@dividend:
   705                           	callstack 0
   706   000028                     ___awmod@dividend:
   707                           	callstack 0
   708   000028                     ___lwmod@dividend:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x0
   712   000028                     	ds	1
   713   000029                     clcd_write@byte:
   714                           	callstack 0
   715   000029                     read_external_eeprom@address:
   716                           	callstack 0
   717   000029                     write_DS1307@data:
   718                           	callstack 0
   719   000029                     read_DS1307@address:
   720                           	callstack 0
   721   000029                     puts@s:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x1
   725   000029                     	ds	1
   726   00002A                     ??_init_clcd:
   727   00002A                     ??_read_adc:
   728   00002A                     read_external_eeprom@data:
   729                           	callstack 0
   730   00002A                     write_DS1307@address:
   731                           	callstack 0
   732   00002A                     read_DS1307@data:
   733                           	callstack 0
   734   00002A                     clcd_print@data:
   735                           	callstack 0
   736   00002A                     ___wmul@multiplicand:
   737                           	callstack 0
   738   00002A                     ___awdiv@divisor:
   739                           	callstack 0
   740   00002A                     ___awmod@divisor:
   741                           	callstack 0
   742   00002A                     ___lwmod@divisor:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x2
   746   00002A                     	ds	1
   747   00002B                     init_DS1307@dummy:
   748                           	callstack 0
   749                           
   750                           ; 1 bytes @ 0x3
   751   00002B                     	ds	1
   752   00002C                     clcd_print@addr:
   753                           	callstack 0
   754   00002C                     ___awdiv@counter:
   755                           	callstack 0
   756   00002C                     ___awmod@counter:
   757                           	callstack 0
   758   00002C                     ___lwmod@counter:
   759                           	callstack 0
   760   00002C                     ___wmul@product:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0x4
   764   00002C                     	ds	1
   765   00002D                     ??_clear_log:
   766   00002D                     ___awdiv@sign:
   767                           	callstack 0
   768   00002D                     ___awmod@sign:
   769                           	callstack 0
   770                           
   771                           ; 1 bytes @ 0x5
   772   00002D                     	ds	1
   773   00002E                     ??_event_reader:
   774   00002E                     ?___lwdiv:
   775                           	callstack 0
   776   00002E                     ___awdiv@quotient:
   777                           	callstack 0
   778   00002E                     ___lwdiv@dividend:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0x6
   782   00002E                     	ds	2
   783   000030                     event_reader@read_addr:
   784                           	callstack 0
   785   000030                     ___lwdiv@divisor:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0x8
   789   000030                     	ds	1
   790   000031                     event_reader@i:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x9
   794   000031                     	ds	1
   795   000032                     ___lwdiv@quotient:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0xA
   799   000032                     	ds	1
   800   000033                     event_reader@j:
   801                           	callstack 0
   802                           
   803                           ; 2 bytes @ 0xB
   804   000033                     	ds	1
   805   000034                     ___lwdiv@counter:
   806                           	callstack 0
   807                           
   808                           ; 1 bytes @ 0xC
   809   000034                     	ds	1
   810   000035                     ??_view_log:
   811   000035                     ??_download_log:
   812   000035                     clcd_putch@addr:
   813                           	callstack 0
   814   000035                     write_external_eeprom@data:
   815                           	callstack 0
   816                           
   817                           ; 1 bytes @ 0xD
   818   000035                     	ds	1
   819   000036                     clcd_putch@data:
   820                           	callstack 0
   821   000036                     write_external_eeprom@i:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0xE
   825   000036                     	ds	1
   826   000037                     ??_set_time:
   827   000037                     download_log@s:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0xF
   831   000037                     	ds	1
   832   000038                     write_external_eeprom@address:
   833                           	callstack 0
   834                           
   835                           ; 1 bytes @ 0x10
   836   000038                     	ds	1
   837   000039                     set_time@hr:
   838                           	callstack 0
   839   000039                     download_log@i:
   840                           	callstack 0
   841   000039                     event_store@time:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x11
   845   000039                     	ds	1
   846   00003A                     set_time@min:
   847                           	callstack 0
   848                           
   849                           ; 1 bytes @ 0x12
   850   00003A                     	ds	1
   851   00003B                     set_time@sec:
   852                           	callstack 0
   853   00003B                     download_log@j:
   854                           	callstack 0
   855   00003B                     event_store@gear:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x13
   859   00003B                     	ds	2
   860   00003D                     event_store@speed:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x15
   864   00003D                     	ds	2
   865   00003F                     ??_event_store:
   866                           
   867                           ; 1 bytes @ 0x17
   868   00003F                     	ds	2
   869   000041                     event_store@j:
   870                           	callstack 0
   871                           
   872                           ; 2 bytes @ 0x19
   873   000041                     	ds	2
   874   000043                     event_store@i:
   875                           	callstack 0
   876                           
   877                           ; 2 bytes @ 0x1B
   878   000043                     	ds	2
   879   000045                     ??_main:
   880                           
   881                           ; 1 bytes @ 0x1D
   882   000045                     	ds	2
   883                           
   884 ;;
   885 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   886 ;;
   887 ;; *************** function _main *****************
   888 ;; Defined at:
   889 ;;		line 25 in file "MAIN.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;		None
   892 ;; Auto vars:     Size  Location     Type
   893 ;;		None
   894 ;; Return value:  Size  Location     Type
   895 ;;                  1    wreg      void 
   896 ;; Registers used:
   897 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   903 ;;      Params:         0       0       0       0       0       0       0
   904 ;;      Locals:         0       0       0       0       0       0       0
   905 ;;      Temps:          2       0       0       0       0       0       0
   906 ;;      Totals:         2       0       0       0       0       0       0
   907 ;;Total ram usage:        2 bytes
   908 ;; Hardware stack levels required when called: 6
   909 ;; This function calls:
   910 ;;		_clcd_write
   911 ;;		_clear_log
   912 ;;		_display_main_menu
   913 ;;		_download_log
   914 ;;		_get_time
   915 ;;		_init_config
   916 ;;		_read_switches
   917 ;;		_set_time
   918 ;;		_view_dashboard
   919 ;;		_view_log
   920 ;; This function is called by:
   921 ;;		Startup code after reset
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           	psect	text0
   926   001E48                     __ptext0:
   927                           	callstack 0
   928   001E48                     _main:
   929                           	callstack 25
   930   001E48                     
   931                           ;MAIN.c: 27:     init_config();
   932   001E48  EC1C  F00B         	call	_init_config	;wreg free
   933   001E4C                     l68:
   934                           
   935                           ;MAIN.c: 30:     {;MAIN.c: 31:         get_time();
   936   001E4C  EC52  F00D         	call	_get_time	;wreg free
   937                           
   938                           ;MAIN.c: 33:         key=read_switches(1);
   939   001E50  0E01               	movlw	1
   940   001E52  EC17  F00D         	call	_read_switches
   941   001E56  6E1A               	movwf	_key^0,c
   942                           
   943                           ;MAIN.c: 34:         switch (state)
   944   001E58  EF96  F00F         	goto	l3322
   945   001E5C                     l3278:
   946                           
   947                           ;MAIN.c: 38:                 view_dashboard();
   948   001E5C  EC9E  F013         	call	_view_dashboard	;wreg free
   949   001E60                     
   950                           ;MAIN.c: 39:                 if(key == 11)
   951   001E60  0E0B               	movlw	11
   952   001E62  181A               	xorwf	_key^0,w,c
   953   001E64  A4D8               	btfss	status,2,c
   954   001E66  EF37  F00F         	goto	u2211
   955   001E6A  EF39  F00F         	goto	u2210
   956   001E6E                     u2211:
   957   001E6E  EF26  F00F         	goto	l68
   958   001E72                     u2210:
   959   001E72                     
   960                           ;MAIN.c: 40:                 {;MAIN.c: 41:                     state = e_main_menu;
   961   001E72  0E01               	movlw	1
   962   001E74  6E19               	movwf	_state^0,c
   963   001E76                     
   964                           ;MAIN.c: 42:                     clcd_write(0x01, 0);
   965   001E76  0E00               	movlw	0
   966   001E78  6E28               	movwf	clcd_write@control_bit^0,c
   967   001E7A  0E01               	movlw	1
   968   001E7C  EC9A  F00B         	call	_clcd_write
   969   001E80  EF26  F00F         	goto	l68
   970   001E84                     l3286:
   971                           
   972                           ;MAIN.c: 47:                 display_main_menu();
   973   001E84  ECA0  F012         	call	_display_main_menu	;wreg free
   974   001E88                     
   975                           ;MAIN.c: 49:                 if(key == 12)
   976   001E88  0E0C               	movlw	12
   977   001E8A  181A               	xorwf	_key^0,w,c
   978   001E8C  A4D8               	btfss	status,2,c
   979   001E8E  EF4B  F00F         	goto	u2221
   980   001E92  EF4D  F00F         	goto	u2220
   981   001E96                     u2221:
   982   001E96  EF26  F00F         	goto	l68
   983   001E9A                     u2220:
   984   001E9A                     
   985                           ;MAIN.c: 50:                 {;MAIN.c: 51:                     state = e_dashboard;
   986   001E9A  0E00               	movlw	0
   987   001E9C  6E19               	movwf	_state^0,c
   988   001E9E                     
   989                           ;MAIN.c: 52:                     clcd_write(0x01, 0);
   990   001E9E  0E00               	movlw	0
   991   001EA0  6E28               	movwf	clcd_write@control_bit^0,c
   992   001EA2  0E01               	movlw	1
   993   001EA4  EC9A  F00B         	call	_clcd_write
   994   001EA8  EF26  F00F         	goto	l68
   995   001EAC                     l3294:
   996                           
   997                           ;MAIN.c: 58:                 view_log();
   998   001EAC  EC64  F010         	call	_view_log	;wreg free
   999   001EB0                     
  1000                           ;MAIN.c: 59:                  if(key == 12)
  1001   001EB0  0E0C               	movlw	12
  1002   001EB2  181A               	xorwf	_key^0,w,c
  1003   001EB4  A4D8               	btfss	status,2,c
  1004   001EB6  EF5F  F00F         	goto	u2231
  1005   001EBA  EF61  F00F         	goto	u2230
  1006   001EBE                     u2231:
  1007   001EBE  EF26  F00F         	goto	l68
  1008   001EC2                     u2230:
  1009   001EC2                     
  1010                           ;MAIN.c: 60:                 {;MAIN.c: 61:                     state = e_dashboard;
  1011   001EC2  0E00               	movlw	0
  1012   001EC4  6E19               	movwf	_state^0,c
  1013   001EC6                     
  1014                           ;MAIN.c: 62:                     clcd_write(0x01, 0);
  1015   001EC6  0E00               	movlw	0
  1016   001EC8  6E28               	movwf	clcd_write@control_bit^0,c
  1017   001ECA  0E01               	movlw	1
  1018   001ECC  EC9A  F00B         	call	_clcd_write
  1019   001ED0  EF26  F00F         	goto	l68
  1020   001ED4                     l3302:
  1021                           
  1022                           ;MAIN.c: 67:                 download_log();
  1023   001ED4  EC0C  F011         	call	_download_log	;wreg free
  1024   001ED8                     
  1025                           ;MAIN.c: 68:                  if(key == 12)
  1026   001ED8  0E0C               	movlw	12
  1027   001EDA  181A               	xorwf	_key^0,w,c
  1028   001EDC  A4D8               	btfss	status,2,c
  1029   001EDE  EF73  F00F         	goto	u2241
  1030   001EE2  EF75  F00F         	goto	u2240
  1031   001EE6                     u2241:
  1032   001EE6  EF26  F00F         	goto	l68
  1033   001EEA                     u2240:
  1034   001EEA                     
  1035                           ;MAIN.c: 69:                 {;MAIN.c: 70:                      clcd_write(0x01, 0);
  1036   001EEA  0E00               	movlw	0
  1037   001EEC  6E28               	movwf	clcd_write@control_bit^0,c
  1038   001EEE  0E01               	movlw	1
  1039   001EF0  EC9A  F00B         	call	_clcd_write
  1040   001EF4                     
  1041                           ;MAIN.c: 71:                     state = e_dashboard;
  1042   001EF4  0E00               	movlw	0
  1043   001EF6  6E19               	movwf	_state^0,c
  1044   001EF8  EF26  F00F         	goto	l68
  1045   001EFC                     l3310:
  1046                           
  1047                           ;MAIN.c: 77:                 clear_log();
  1048   001EFC  EC1B  F00C         	call	_clear_log	;wreg free
  1049   001F00                     
  1050                           ;MAIN.c: 78:                  if(key == 12)
  1051   001F00  0E0C               	movlw	12
  1052   001F02  181A               	xorwf	_key^0,w,c
  1053   001F04  A4D8               	btfss	status,2,c
  1054   001F06  EF87  F00F         	goto	u2251
  1055   001F0A  EF89  F00F         	goto	u2250
  1056   001F0E                     u2251:
  1057   001F0E  EF26  F00F         	goto	l68
  1058   001F12                     u2250:
  1059   001F12                     
  1060                           ;MAIN.c: 79:                 {;MAIN.c: 80:                     state = e_dashboard;
  1061   001F12  0E00               	movlw	0
  1062   001F14  6E19               	movwf	_state^0,c
  1063   001F16                     
  1064                           ;MAIN.c: 81:                     clcd_write(0x01, 0);
  1065   001F16  0E00               	movlw	0
  1066   001F18  6E28               	movwf	clcd_write@control_bit^0,c
  1067   001F1A  0E01               	movlw	1
  1068   001F1C  EC9A  F00B         	call	_clcd_write
  1069   001F20  EF26  F00F         	goto	l68
  1070   001F24                     l3318:
  1071                           
  1072                           ;MAIN.c: 87:                 set_time();
  1073   001F24  ECA8  F014         	call	_set_time	;wreg free
  1074                           
  1075                           ;MAIN.c: 88:                 break;
  1076   001F28  EF26  F00F         	goto	l68
  1077   001F2C                     l3322:
  1078   001F2C  5019               	movf	_state^0,w,c
  1079   001F2E  6E45               	movwf	??_main^0,c
  1080   001F30  6A46               	clrf	(??_main+1)^0,c
  1081                           
  1082                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1083                           ; Switch size 1, requested type "simple"
  1084                           ; Number of cases is 1, Range of values is 0 to 0
  1085                           ; switch strategies available:
  1086                           ; Name         Instructions Cycles
  1087                           ; simple_byte            4     3 (average)
  1088                           ;	Chosen strategy is simple_byte
  1089   001F32  5046               	movf	(??_main+1)^0,w,c
  1090   001F34  0A00               	xorlw	0	; case 0
  1091   001F36  B4D8               	btfsc	status,2,c
  1092   001F38  EFA0  F00F         	goto	l3332
  1093   001F3C  EF26  F00F         	goto	l68
  1094   001F40                     l3332:
  1095                           
  1096                           ; Switch size 1, requested type "simple"
  1097                           ; Number of cases is 6, Range of values is 0 to 5
  1098                           ; switch strategies available:
  1099                           ; Name         Instructions Cycles
  1100                           ; simple_byte           19    10 (average)
  1101                           ;	Chosen strategy is simple_byte
  1102   001F40  5045               	movf	??_main^0,w,c
  1103   001F42  0A00               	xorlw	0	; case 0
  1104   001F44  B4D8               	btfsc	status,2,c
  1105   001F46  EF2E  F00F         	goto	l3278
  1106   001F4A  0A01               	xorlw	1	; case 1
  1107   001F4C  B4D8               	btfsc	status,2,c
  1108   001F4E  EF42  F00F         	goto	l3286
  1109   001F52  0A03               	xorlw	3	; case 2
  1110   001F54  B4D8               	btfsc	status,2,c
  1111   001F56  EF56  F00F         	goto	l3294
  1112   001F5A  0A01               	xorlw	1	; case 3
  1113   001F5C  B4D8               	btfsc	status,2,c
  1114   001F5E  EF92  F00F         	goto	l3318
  1115   001F62  0A07               	xorlw	7	; case 4
  1116   001F64  B4D8               	btfsc	status,2,c
  1117   001F66  EF6A  F00F         	goto	l3302
  1118   001F6A  0A01               	xorlw	1	; case 5
  1119   001F6C  B4D8               	btfsc	status,2,c
  1120   001F6E  EF7E  F00F         	goto	l3310
  1121   001F72  EF26  F00F         	goto	l68
  1122   001F76  EF00  F000         	goto	start
  1123   001F7A                     __end_of_main:
  1124                           	callstack 0
  1125                           
  1126 ;; *************** function _view_log *****************
  1127 ;; Defined at:
  1128 ;;		line 13 in file "view_log.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;		None
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;		None
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  1    wreg      void 
  1135 ;; Registers used:
  1136 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1142 ;;      Params:         0       0       0       0       0       0       0
  1143 ;;      Locals:         0       0       0       0       0       0       0
  1144 ;;      Temps:          4       0       0       0       0       0       0
  1145 ;;      Totals:         4       0       0       0       0       0       0
  1146 ;;Total ram usage:        4 bytes
  1147 ;; Hardware stack levels used: 1
  1148 ;; Hardware stack levels required when called: 5
  1149 ;; This function calls:
  1150 ;;		_clcd_print
  1151 ;;		_clcd_write
  1152 ;;		_event_reader
  1153 ;; This function is called by:
  1154 ;;		_main
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           	psect	text1
  1159   0020C8                     __ptext1:
  1160                           	callstack 0
  1161   0020C8                     _view_log:
  1162                           	callstack 25
  1163   0020C8                     
  1164                           ;view_log.c: 14:     static unsigned char flag = 0, count = 0;;view_log.c: 16:     if (f
      +                          lag == 0) {
  1165   0020C8  5017               	movf	view_log@flag^0,w,c
  1166   0020CA  A4D8               	btfss	status,2,c
  1167   0020CC  EF6A  F010         	goto	u1891
  1168   0020D0  EF6C  F010         	goto	u1890
  1169   0020D4                     u1891:
  1170   0020D4  EF70  F010         	goto	l3010
  1171   0020D8                     u1890:
  1172   0020D8                     
  1173                           ;view_log.c: 17:         event_reader();
  1174   0020D8  ECD3  F011         	call	_event_reader	;wreg free
  1175   0020DC                     
  1176                           ;view_log.c: 18:         flag = 1;
  1177   0020DC  0E01               	movlw	1
  1178   0020DE  6E17               	movwf	view_log@flag^0,c
  1179   0020E0                     l3010:
  1180                           
  1181                           ;view_log.c: 20:     if (event_count == 0) {
  1182   0020E0  5014               	movf	_event_count^0,w,c
  1183   0020E2  1015               	iorwf	(_event_count+1)^0,w,c
  1184   0020E4  A4D8               	btfss	status,2,c
  1185   0020E6  EF77  F010         	goto	u1901
  1186   0020EA  EF79  F010         	goto	u1900
  1187   0020EE                     u1901:
  1188   0020EE  EFA7  F010         	goto	l3030
  1189   0020F2                     u1900:
  1190   0020F2                     
  1191                           ;view_log.c: 21:         clcd_write(0x01, 0);
  1192   0020F2  0E00               	movlw	0
  1193   0020F4  6E28               	movwf	clcd_write@control_bit^0,c
  1194   0020F6  0E01               	movlw	1
  1195   0020F8  EC9A  F00B         	call	_clcd_write
  1196   0020FC                     
  1197                           ;view_log.c: 22:         clcd_print("NO LOGS ", (0x80 + (0)));
  1198   0020FC  0EC5               	movlw	low STR_27
  1199   0020FE  6E2A               	movwf	clcd_print@data^0,c
  1200   002100  0E2F               	movlw	high STR_27
  1201   002102  6E2B               	movwf	(clcd_print@data+1)^0,c
  1202   002104  0E80               	movlw	128
  1203   002106  6E2C               	movwf	clcd_print@addr^0,c
  1204   002108  ECA7  F00C         	call	_clcd_print	;wreg free
  1205   00210C                     
  1206                           ;view_log.c: 23:         clcd_print("TO DISPLAY", (0xC0 + (0)));
  1207   00210C  0EBA               	movlw	low STR_28
  1208   00210E  6E2A               	movwf	clcd_print@data^0,c
  1209   002110  0E2F               	movlw	high STR_28
  1210   002112  6E2B               	movwf	(clcd_print@data+1)^0,c
  1211   002114  0EC0               	movlw	192
  1212   002116  6E2C               	movwf	clcd_print@addr^0,c
  1213   002118  ECA7  F00C         	call	_clcd_print	;wreg free
  1214   00211C                     
  1215                           ;view_log.c: 24:         _delay((unsigned long)((1000)*(20000000/4000.0)));
  1216   00211C  0E1A               	movlw	26
  1217   00211E  6E36               	movwf	(??_view_log+1)^0,c
  1218   002120  0E5E               	movlw	94
  1219   002122  6E35               	movwf	??_view_log^0,c
  1220   002124  0E6E               	movlw	110
  1221   002126                     u2267:
  1222   002126  2EE8               	decfsz	wreg,f,c
  1223   002128  D7FE               	bra	u2267
  1224   00212A  2E35               	decfsz	??_view_log^0,f,c
  1225   00212C  D7FC               	bra	u2267
  1226   00212E  2E36               	decfsz	(??_view_log+1)^0,f,c
  1227   002130  D7FA               	bra	u2267
  1228   002132  D000               	nop2	
  1229   002134                     
  1230                           ;view_log.c: 25:         clcd_write(0x01, 0);
  1231   002134  0E00               	movlw	0
  1232   002136  6E28               	movwf	clcd_write@control_bit^0,c
  1233   002138  0E01               	movlw	1
  1234   00213A  EC9A  F00B         	call	_clcd_write
  1235   00213E                     
  1236                           ;view_log.c: 26:         flag = 0;
  1237   00213E  0E00               	movlw	0
  1238   002140  6E17               	movwf	view_log@flag^0,c
  1239   002142                     
  1240                           ;view_log.c: 27:         count = 0;
  1241   002142  0E00               	movlw	0
  1242   002144  6E16               	movwf	view_log@count^0,c
  1243   002146                     
  1244                           ;view_log.c: 28:         state = e_main_menu;
  1245   002146  0E01               	movlw	1
  1246   002148  6E19               	movwf	_state^0,c
  1247   00214A  EF0B  F011         	goto	l674
  1248   00214E                     l3030:
  1249                           
  1250                           ;view_log.c: 31:     clcd_print("#  TIME    GR  SP", (0x80 + (0)));
  1251   00214E  0E32               	movlw	low STR_29
  1252   002150  6E2A               	movwf	clcd_print@data^0,c
  1253   002152  0E2F               	movlw	high STR_29
  1254   002154  6E2B               	movwf	(clcd_print@data+1)^0,c
  1255   002156  0E80               	movlw	128
  1256   002158  6E2C               	movwf	clcd_print@addr^0,c
  1257   00215A  ECA7  F00C         	call	_clcd_print	;wreg free
  1258   00215E                     
  1259                           ;view_log.c: 32:     events[count][0] = count + '0';
  1260   00215E  5016               	movf	view_log@count^0,w,c
  1261   002160  0D0B               	mullw	11
  1262   002162  0E60               	movlw	low _events
  1263   002164  24F3               	addwf	243,w,c
  1264   002166  6ED9               	movwf	fsr2l,c
  1265   002168  0E00               	movlw	high _events
  1266   00216A  20F4               	addwfc	prodh,w,c
  1267   00216C  6EDA               	movwf	fsr2h,c
  1268   00216E  5016               	movf	view_log@count^0,w,c
  1269   002170  0F30               	addlw	48
  1270   002172  6EDF               	movwf	indf2,c
  1271   002174                     
  1272                           ;view_log.c: 33:     clcd_print(events[count], (0xC0 + (0)));
  1273   002174  5016               	movf	view_log@count^0,w,c
  1274   002176  0D0B               	mullw	11
  1275   002178  0E60               	movlw	low _events
  1276   00217A  24F3               	addwf	243,w,c
  1277   00217C  6E2A               	movwf	clcd_print@data^0,c
  1278   00217E  0E00               	movlw	high _events
  1279   002180  20F4               	addwfc	prodh,w,c
  1280   002182  6E2B               	movwf	(clcd_print@data+1)^0,c
  1281   002184  0EC0               	movlw	192
  1282   002186  6E2C               	movwf	clcd_print@addr^0,c
  1283   002188  ECA7  F00C         	call	_clcd_print	;wreg free
  1284   00218C                     
  1285                           ;view_log.c: 35:     if (key == 1 && count < event_count - 1) {
  1286   00218C  041A               	decf	_key^0,w,c
  1287   00218E  A4D8               	btfss	status,2,c
  1288   002190  EFCC  F010         	goto	u1911
  1289   002194  EFCE  F010         	goto	u1910
  1290   002198                     u1911:
  1291   002198  EFE5  F010         	goto	l3042
  1292   00219C                     u1910:
  1293   00219C  0EFF               	movlw	255
  1294   00219E  2414               	addwf	_event_count^0,w,c
  1295   0021A0  6E35               	movwf	??_view_log^0,c
  1296   0021A2  0EFF               	movlw	255
  1297   0021A4  2015               	addwfc	(_event_count+1)^0,w,c
  1298   0021A6  6E36               	movwf	(??_view_log+1)^0,c
  1299   0021A8  5016               	movf	view_log@count^0,w,c
  1300   0021AA  6E37               	movwf	(??_view_log+2)^0,c
  1301   0021AC  6A38               	clrf	(??_view_log+3)^0,c
  1302   0021AE  5035               	movf	??_view_log^0,w,c
  1303   0021B0  5C37               	subwf	(??_view_log+2)^0,w,c
  1304   0021B2  5036               	movf	(??_view_log+1)^0,w,c
  1305   0021B4  5838               	subwfb	(??_view_log+3)^0,w,c
  1306   0021B6  B0D8               	btfsc	status,0,c
  1307   0021B8  EFE0  F010         	goto	u1921
  1308   0021BC  EFE2  F010         	goto	u1920
  1309   0021C0                     u1921:
  1310   0021C0  EFE5  F010         	goto	l3042
  1311   0021C4                     u1920:
  1312   0021C4                     
  1313                           ;view_log.c: 36:         count++;
  1314   0021C4  2A16               	incf	view_log@count^0,f,c
  1315                           
  1316                           ;view_log.c: 37:     } else if (key == 2 && count > 0) {
  1317   0021C6  EFF7  F010         	goto	l3048
  1318   0021CA                     l3042:
  1319   0021CA  0E02               	movlw	2
  1320   0021CC  181A               	xorwf	_key^0,w,c
  1321   0021CE  A4D8               	btfss	status,2,c
  1322   0021D0  EFEC  F010         	goto	u1931
  1323   0021D4  EFEE  F010         	goto	u1930
  1324   0021D8                     u1931:
  1325   0021D8  EFF7  F010         	goto	l3048
  1326   0021DC                     u1930:
  1327   0021DC  5016               	movf	view_log@count^0,w,c
  1328   0021DE  B4D8               	btfsc	status,2,c
  1329   0021E0  EFF4  F010         	goto	u1941
  1330   0021E4  EFF6  F010         	goto	u1940
  1331   0021E8                     u1941:
  1332   0021E8  EFF7  F010         	goto	l3048
  1333   0021EC                     u1940:
  1334   0021EC                     
  1335                           ;view_log.c: 38:         count--;
  1336   0021EC  0616               	decf	view_log@count^0,f,c
  1337   0021EE                     l3048:
  1338                           
  1339                           ;view_log.c: 41:     if (key == 12) {
  1340   0021EE  0E0C               	movlw	12
  1341   0021F0  181A               	xorwf	_key^0,w,c
  1342   0021F2  A4D8               	btfss	status,2,c
  1343   0021F4  EFFE  F010         	goto	u1951
  1344   0021F8  EF00  F011         	goto	u1950
  1345   0021FC                     u1951:
  1346   0021FC  EF0B  F011         	goto	l674
  1347   002200                     u1950:
  1348   002200                     
  1349                           ;view_log.c: 43:         state = e_main_menu;
  1350   002200  0E01               	movlw	1
  1351   002202  6E19               	movwf	_state^0,c
  1352   002204                     
  1353                           ;view_log.c: 44:         clcd_write(0x01, 0);
  1354   002204  0E00               	movlw	0
  1355   002206  6E28               	movwf	clcd_write@control_bit^0,c
  1356   002208  0E01               	movlw	1
  1357   00220A  EC9A  F00B         	call	_clcd_write
  1358   00220E                     
  1359                           ;view_log.c: 46:         flag = 0;
  1360   00220E  0E00               	movlw	0
  1361   002210  6E17               	movwf	view_log@flag^0,c
  1362   002212                     
  1363                           ;view_log.c: 47:         count = 0;
  1364   002212  0E00               	movlw	0
  1365   002214  6E16               	movwf	view_log@count^0,c
  1366   002216                     l674:
  1367   002216  0012               	return		;funcret
  1368   002218                     __end_of_view_log:
  1369                           	callstack 0
  1370                           
  1371 ;; *************** function _view_dashboard *****************
  1372 ;; Defined at:
  1373 ;;		line 12 in file "dashboard.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;		None
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;		None
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  1    wreg      void 
  1380 ;; Registers used:
  1381 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1387 ;;      Params:         0       0       0       0       0       0       0
  1388 ;;      Locals:         0       0       0       0       0       0       0
  1389 ;;      Temps:          0       0       0       0       0       0       0
  1390 ;;      Totals:         0       0       0       0       0       0       0
  1391 ;;Total ram usage:        0 bytes
  1392 ;; Hardware stack levels used: 1
  1393 ;; Hardware stack levels required when called: 4
  1394 ;; This function calls:
  1395 ;;		___lwdiv
  1396 ;;		___lwmod
  1397 ;;		_clcd_print
  1398 ;;		_clcd_putch
  1399 ;;		_display_time
  1400 ;;		_event_store
  1401 ;;		_read_adc
  1402 ;; This function is called by:
  1403 ;;		_main
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text2
  1408   00273C                     __ptext2:
  1409                           	callstack 0
  1410   00273C                     _view_dashboard:
  1411                           	callstack 26
  1412   00273C                     
  1413                           ;dashboard.c: 13:     display_time();
  1414   00273C  ECE3  F00A         	call	_display_time	;wreg free
  1415   002740                     
  1416                           ;dashboard.c: 14:     speed = read_adc() / 10;
  1417   002740  ECD7  F00B         	call	_read_adc	;wreg free
  1418   002744  C028  F02E         	movff	?_read_adc,___lwdiv@dividend
  1419   002748  C029  F02F         	movff	?_read_adc+1,___lwdiv@dividend+1
  1420   00274C  0E00               	movlw	0
  1421   00274E  6E31               	movwf	(___lwdiv@divisor+1)^0,c
  1422   002750  0E0A               	movlw	10
  1423   002752  6E30               	movwf	___lwdiv@divisor^0,c
  1424   002754  ECDD  F00C         	call	___lwdiv	;wreg free
  1425   002758  C02E  F00A         	movff	?___lwdiv,_speed
  1426   00275C  C02F  F00B         	movff	?___lwdiv+1,_speed+1
  1427   002760                     
  1428                           ;dashboard.c: 15:     if (speed < 100) {
  1429   002760  500B               	movf	(_speed+1)^0,w,c
  1430   002762  E107               	bnz	u1671
  1431   002764  0E64               	movlw	100
  1432   002766  5C0A               	subwf	_speed^0,w,c
  1433   002768  B0D8               	btfsc	status,0,c
  1434   00276A  EFB9  F013         	goto	u1671
  1435   00276E  EFBB  F013         	goto	u1670
  1436   002772                     u1671:
  1437   002772  EFDB  F013         	goto	l2904
  1438   002776                     u1670:
  1439   002776                     
  1440                           ;dashboard.c: 16:         clcd_putch((speed / 10) + '0', (0xC0 + (14)));
  1441   002776  0ECE               	movlw	206
  1442   002778  6E35               	movwf	clcd_putch@addr^0,c
  1443   00277A  C00A  F02E         	movff	_speed,___lwdiv@dividend
  1444   00277E  C00B  F02F         	movff	_speed+1,___lwdiv@dividend+1
  1445   002782  0E00               	movlw	0
  1446   002784  6E31               	movwf	(___lwdiv@divisor+1)^0,c
  1447   002786  0E0A               	movlw	10
  1448   002788  6E30               	movwf	___lwdiv@divisor^0,c
  1449   00278A  ECDD  F00C         	call	___lwdiv	;wreg free
  1450   00278E  502E               	movf	?___lwdiv^0,w,c
  1451   002790  0F30               	addlw	48
  1452   002792  ECF5  F00A         	call	_clcd_putch
  1453                           
  1454                           ;dashboard.c: 17:         clcd_putch((speed % 10) + '0', (0xC0 + (15)));
  1455   002796  0ECF               	movlw	207
  1456   002798  6E35               	movwf	clcd_putch@addr^0,c
  1457   00279A  C00A  F028         	movff	_speed,___lwmod@dividend
  1458   00279E  C00B  F029         	movff	_speed+1,___lwmod@dividend+1
  1459   0027A2  0E00               	movlw	0
  1460   0027A4  6E2B               	movwf	(___lwmod@divisor+1)^0,c
  1461   0027A6  0E0A               	movlw	10
  1462   0027A8  6E2A               	movwf	___lwmod@divisor^0,c
  1463   0027AA  EC75  F00C         	call	___lwmod	;wreg free
  1464   0027AE  5028               	movf	?___lwmod^0,w,c
  1465   0027B0  0F30               	addlw	48
  1466   0027B2  ECF5  F00A         	call	_clcd_putch
  1467   0027B6                     l2904:
  1468                           
  1469                           ;dashboard.c: 19:     if (key == 1) {
  1470   0027B6  041A               	decf	_key^0,w,c
  1471   0027B8  A4D8               	btfss	status,2,c
  1472   0027BA  EFE1  F013         	goto	u1681
  1473   0027BE  EFE3  F013         	goto	u1680
  1474   0027C2                     u1681:
  1475   0027C2  EF2C  F014         	goto	l2920
  1476   0027C6                     u1680:
  1477   0027C6                     
  1478                           ;dashboard.c: 20:         if (gear_index == 8)
  1479   0027C6  0E08               	movlw	8
  1480   0027C8  1808               	xorwf	_gear_index^0,w,c
  1481   0027CA  1009               	iorwf	(_gear_index+1)^0,w,c
  1482   0027CC  A4D8               	btfss	status,2,c
  1483   0027CE  EFEB  F013         	goto	u1691
  1484   0027D2  EFED  F013         	goto	u1690
  1485   0027D6                     u1691:
  1486   0027D6  EFF3  F013         	goto	l2910
  1487   0027DA                     u1690:
  1488   0027DA                     l2908:
  1489                           
  1490                           ;dashboard.c: 21:         {;dashboard.c: 22:             gear_index = 1;
  1491   0027DA  0E00               	movlw	0
  1492   0027DC  6E09               	movwf	(_gear_index+1)^0,c
  1493   0027DE  0E01               	movlw	1
  1494   0027E0  6E08               	movwf	_gear_index^0,c
  1495                           
  1496                           ;dashboard.c: 23:         } else if (gear_index < 7)
  1497   0027E2  EF8E  F014         	goto	l2942
  1498   0027E6                     l2910:
  1499   0027E6  5009               	movf	(_gear_index+1)^0,w,c
  1500   0027E8  E107               	bnz	u1701
  1501   0027EA  0E07               	movlw	7
  1502   0027EC  5C08               	subwf	_gear_index^0,w,c
  1503   0027EE  B0D8               	btfsc	status,0,c
  1504   0027F0  EFFC  F013         	goto	u1701
  1505   0027F4  EFFE  F013         	goto	u1700
  1506   0027F8                     u1701:
  1507   0027F8  EF19  F014         	goto	l2916
  1508   0027FC                     u1700:
  1509   0027FC                     
  1510                           ;dashboard.c: 24:         {;dashboard.c: 25:             gear_index++;
  1511   0027FC  4A08               	infsnz	_gear_index^0,f,c
  1512   0027FE  2A09               	incf	(_gear_index+1)^0,f,c
  1513   002800                     
  1514                           ;dashboard.c: 26:             event_store(time, gear[gear_index], speed);
  1515   002800  0E1F               	movlw	low _time
  1516   002802  6E39               	movwf	event_store@time^0,c
  1517   002804  0E00               	movlw	high _time
  1518   002806  6E3A               	movwf	(event_store@time+1)^0,c
  1519   002808  90D8               	bcf	status,0,c
  1520   00280A  3408               	rlcf	_gear_index^0,w,c
  1521   00280C  6ED9               	movwf	fsr2l,c
  1522   00280E  3409               	rlcf	(_gear_index+1)^0,w,c
  1523   002810  6EDA               	movwf	fsr2h,c
  1524   002812  0ECE               	movlw	low _gear
  1525   002814  26D9               	addwf	fsr2l,f,c
  1526   002816  0E00               	movlw	high _gear
  1527   002818  22DA               	addwfc	fsr2h,f,c
  1528   00281A  CFDE F03B          	movff	postinc2,event_store@gear
  1529   00281E  CFDD F03C          	movff	postdec2,event_store@gear+1
  1530   002822  C00A  F03D         	movff	_speed,event_store@speed
  1531   002826  C00B  F03E         	movff	_speed+1,event_store@speed+1
  1532   00282A  ECBD  F00F         	call	_event_store	;wreg free
  1533                           
  1534                           ;dashboard.c: 28:         } else if (gear_index > 7)
  1535   00282E  EF8E  F014         	goto	l2942
  1536   002832                     l2916:
  1537   002832  5009               	movf	(_gear_index+1)^0,w,c
  1538   002834  E109               	bnz	u1710
  1539   002836  0E08               	movlw	8
  1540   002838  5C08               	subwf	_gear_index^0,w,c
  1541   00283A  A0D8               	btfss	status,0,c
  1542   00283C  EF22  F014         	goto	u1711
  1543   002840  EF24  F014         	goto	u1710
  1544   002844                     u1711:
  1545   002844  EF2A  F014         	goto	l152
  1546   002848                     u1710:
  1547   002848                     
  1548                           ;dashboard.c: 29:         {;dashboard.c: 30:             gear_index = 7;
  1549   002848  0E00               	movlw	0
  1550   00284A  6E09               	movwf	(_gear_index+1)^0,c
  1551   00284C  0E07               	movlw	7
  1552   00284E  6E08               	movwf	_gear_index^0,c
  1553   002850  EF8E  F014         	goto	l2942
  1554   002854                     l152:
  1555                           
  1556                           ;dashboard.c: 32:     }
  1557   002854  EF8E  F014         	goto	l2942
  1558   002858                     l2920:
  1559   002858  0E02               	movlw	2
  1560   00285A  181A               	xorwf	_key^0,w,c
  1561   00285C  A4D8               	btfss	status,2,c
  1562   00285E  EF33  F014         	goto	u1721
  1563   002862  EF35  F014         	goto	u1720
  1564   002866                     u1721:
  1565   002866  EF73  F014         	goto	l2936
  1566   00286A                     u1720:
  1567   00286A                     
  1568                           ;dashboard.c: 34:         {;dashboard.c: 35:             if (gear_index == 8)
  1569   00286A  0E08               	movlw	8
  1570   00286C  1808               	xorwf	_gear_index^0,w,c
  1571   00286E  1009               	iorwf	(_gear_index+1)^0,w,c
  1572   002870  A4D8               	btfss	status,2,c
  1573   002872  EF3D  F014         	goto	u1731
  1574   002876  EF3F  F014         	goto	u1730
  1575   00287A                     u1731:
  1576   00287A  EF41  F014         	goto	l2926
  1577   00287E                     u1730:
  1578   00287E  EFED  F013         	goto	l2908
  1579   002882                     l2926:
  1580   002882  5009               	movf	(_gear_index+1)^0,w,c
  1581   002884  E109               	bnz	u1740
  1582   002886  0E02               	movlw	2
  1583   002888  5C08               	subwf	_gear_index^0,w,c
  1584   00288A  A0D8               	btfss	status,0,c
  1585   00288C  EF4A  F014         	goto	u1741
  1586   002890  EF4C  F014         	goto	u1740
  1587   002894                     u1741:
  1588   002894  EF68  F014         	goto	l2932
  1589   002898                     u1740:
  1590   002898                     
  1591                           ;dashboard.c: 40:             {;dashboard.c: 41:                 gear_index--;
  1592   002898  0608               	decf	_gear_index^0,f,c
  1593   00289A  A0D8               	btfss	status,0,c
  1594   00289C  0609               	decf	(_gear_index+1)^0,f,c
  1595   00289E                     
  1596                           ;dashboard.c: 42:             event_store(time, gear[gear_index], speed);
  1597   00289E  0E1F               	movlw	low _time
  1598   0028A0  6E39               	movwf	event_store@time^0,c
  1599   0028A2  0E00               	movlw	high _time
  1600   0028A4  6E3A               	movwf	(event_store@time+1)^0,c
  1601   0028A6  90D8               	bcf	status,0,c
  1602   0028A8  3408               	rlcf	_gear_index^0,w,c
  1603   0028AA  6ED9               	movwf	fsr2l,c
  1604   0028AC  3409               	rlcf	(_gear_index+1)^0,w,c
  1605   0028AE  6EDA               	movwf	fsr2h,c
  1606   0028B0  0ECE               	movlw	low _gear
  1607   0028B2  26D9               	addwf	fsr2l,f,c
  1608   0028B4  0E00               	movlw	high _gear
  1609   0028B6  22DA               	addwfc	fsr2h,f,c
  1610   0028B8  CFDE F03B          	movff	postinc2,event_store@gear
  1611   0028BC  CFDD F03C          	movff	postdec2,event_store@gear+1
  1612   0028C0  C00A  F03D         	movff	_speed,event_store@speed
  1613   0028C4  C00B  F03E         	movff	_speed+1,event_store@speed+1
  1614   0028C8  ECBD  F00F         	call	_event_store	;wreg free
  1615                           
  1616                           ;dashboard.c: 43:         }
  1617   0028CC  EF8E  F014         	goto	l2942
  1618   0028D0                     l2932:
  1619   0028D0  5008               	movf	_gear_index^0,w,c
  1620   0028D2  1009               	iorwf	(_gear_index+1)^0,w,c
  1621   0028D4  A4D8               	btfss	status,2,c
  1622   0028D6  EF6F  F014         	goto	u1751
  1623   0028DA  EF71  F014         	goto	u1750
  1624   0028DE                     u1751:
  1625   0028DE  EF2A  F014         	goto	l152
  1626   0028E2                     u1750:
  1627   0028E2  EFED  F013         	goto	l2908
  1628   0028E6                     l2936:
  1629   0028E6  0E03               	movlw	3
  1630   0028E8  181A               	xorwf	_key^0,w,c
  1631   0028EA  A4D8               	btfss	status,2,c
  1632   0028EC  EF7A  F014         	goto	u1761
  1633   0028F0  EF7C  F014         	goto	u1760
  1634   0028F4                     u1761:
  1635   0028F4  EF8E  F014         	goto	l2942
  1636   0028F8                     u1760:
  1637   0028F8                     
  1638                           ;dashboard.c: 50:             gear_index = 8;
  1639   0028F8  0E00               	movlw	0
  1640   0028FA  6E09               	movwf	(_gear_index+1)^0,c
  1641   0028FC  0E08               	movlw	8
  1642   0028FE  6E08               	movwf	_gear_index^0,c
  1643   002900                     
  1644                           ;dashboard.c: 51:             event_store(time, gear[gear_index], speed);
  1645   002900  0E1F               	movlw	low _time
  1646   002902  6E39               	movwf	event_store@time^0,c
  1647   002904  0E00               	movlw	high _time
  1648   002906  6E3A               	movwf	(event_store@time+1)^0,c
  1649   002908  C0DE  F03B         	movff	_gear+16,event_store@gear
  1650   00290C  C0DF  F03C         	movff	_gear+17,event_store@gear+1
  1651   002910  C00A  F03D         	movff	_speed,event_store@speed
  1652   002914  C00B  F03E         	movff	_speed+1,event_store@speed+1
  1653   002918  ECBD  F00F         	call	_event_store	;wreg free
  1654   00291C                     l2942:
  1655                           
  1656                           ;dashboard.c: 54:         clcd_print("  TIME  GEAR  SD", (0x80 + (0)));
  1657   00291C  0E56               	movlw	low STR_14
  1658   00291E  6E2A               	movwf	clcd_print@data^0,c
  1659   002920  0E2F               	movlw	high STR_14
  1660   002922  6E2B               	movwf	(clcd_print@data+1)^0,c
  1661   002924  0E80               	movlw	128
  1662   002926  6E2C               	movwf	clcd_print@addr^0,c
  1663   002928  ECA7  F00C         	call	_clcd_print	;wreg free
  1664   00292C                     
  1665                           ;dashboard.c: 56:         clcd_print(gear[gear_index], (0xC0 + (10)));
  1666   00292C  90D8               	bcf	status,0,c
  1667   00292E  3408               	rlcf	_gear_index^0,w,c
  1668   002930  6ED9               	movwf	fsr2l,c
  1669   002932  3409               	rlcf	(_gear_index+1)^0,w,c
  1670   002934  6EDA               	movwf	fsr2h,c
  1671   002936  0ECE               	movlw	low _gear
  1672   002938  26D9               	addwf	fsr2l,f,c
  1673   00293A  0E00               	movlw	high _gear
  1674   00293C  22DA               	addwfc	fsr2h,f,c
  1675   00293E  CFDE F02A          	movff	postinc2,clcd_print@data
  1676   002942  CFDD F02B          	movff	postdec2,clcd_print@data+1
  1677   002946  0ECA               	movlw	202
  1678   002948  6E2C               	movwf	clcd_print@addr^0,c
  1679   00294A  ECA7  F00C         	call	_clcd_print	;wreg free
  1680   00294E  0012               	return		;funcret
  1681   002950                     __end_of_view_dashboard:
  1682                           	callstack 0
  1683                           
  1684 ;; *************** function _read_adc *****************
  1685 ;; Defined at:
  1686 ;;		line 27 in file "adc.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;		None
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;		None
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  2    0[COMRAM] unsigned short 
  1693 ;; Registers used:
  1694 ;;		wreg, status,2, status,0
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1700 ;;      Params:         2       0       0       0       0       0       0
  1701 ;;      Locals:         0       0       0       0       0       0       0
  1702 ;;      Temps:          4       0       0       0       0       0       0
  1703 ;;      Totals:         6       0       0       0       0       0       0
  1704 ;;Total ram usage:        6 bytes
  1705 ;; Hardware stack levels used: 1
  1706 ;; This function calls:
  1707 ;;		Nothing
  1708 ;; This function is called by:
  1709 ;;		_view_dashboard
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713                           	psect	text3
  1714   0017AE                     __ptext3:
  1715                           	callstack 0
  1716   0017AE                     _read_adc:
  1717                           	callstack 29
  1718   0017AE                     
  1719                           ;adc.c: 29:     GO = 1;
  1720   0017AE  82C2               	bsf	4034,1,c	;volatile
  1721   0017B0                     l382:
  1722   0017B0  B2C2               	btfsc	4034,1,c	;volatile
  1723   0017B2  EFDD  F00B         	goto	u1371
  1724   0017B6  EFDF  F00B         	goto	u1370
  1725   0017BA                     u1371:
  1726   0017BA  EFD8  F00B         	goto	l382
  1727   0017BE                     u1370:
  1728   0017BE                     
  1729                           ;adc.c: 31:     return (ADRESH<<2|ADRESL>>6);
  1730   0017BE  CFC3 F02A          	movff	4035,??_read_adc	;volatile
  1731   0017C2  0E06               	movlw	6
  1732   0017C4  6E2B               	movwf	(??_read_adc+1)^0,c
  1733   0017C6                     u1385:
  1734   0017C6  90D8               	bcf	status,0,c
  1735   0017C8  322A               	rrcf	??_read_adc^0,f,c
  1736   0017CA  2E2B               	decfsz	(??_read_adc+1)^0,f,c
  1737   0017CC  EFE3  F00B         	goto	u1385
  1738   0017D0  502A               	movf	??_read_adc^0,w,c
  1739   0017D2  CFC4 F02C          	movff	4036,??_read_adc+2	;volatile
  1740   0017D6  6A2D               	clrf	(??_read_adc+3)^0,c
  1741   0017D8  90D8               	bcf	status,0,c
  1742   0017DA  362C               	rlcf	(??_read_adc+2)^0,f,c
  1743   0017DC  362D               	rlcf	(??_read_adc+3)^0,f,c
  1744   0017DE  90D8               	bcf	status,0,c
  1745   0017E0  362C               	rlcf	(??_read_adc+2)^0,f,c
  1746   0017E2  362D               	rlcf	(??_read_adc+3)^0,f,c
  1747   0017E4  102C               	iorwf	(??_read_adc+2)^0,w,c
  1748   0017E6  6E28               	movwf	?_read_adc^0,c
  1749   0017E8  502D               	movf	(??_read_adc+3)^0,w,c
  1750   0017EA  6E29               	movwf	(?_read_adc+1)^0,c
  1751   0017EC  0012               	return		;funcret
  1752   0017EE                     __end_of_read_adc:
  1753                           	callstack 0
  1754                           
  1755 ;; *************** function _event_store *****************
  1756 ;; Defined at:
  1757 ;;		line 12 in file "store_event.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;  time            2   17[COMRAM] PTR unsigned char 
  1760 ;;		 -> time(9), 
  1761 ;;  gear            2   19[COMRAM] PTR unsigned char 
  1762 ;;		 -> STR_9(3), STR_8(3), STR_7(3), STR_6(3), 
  1763 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(3), 
  1764 ;;		 -> STR_1(3), 
  1765 ;;  speed           2   21[COMRAM] unsigned short 
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;  i               2   27[COMRAM] int 
  1768 ;;  j               2   25[COMRAM] int 
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  1    wreg      void 
  1771 ;; Registers used:
  1772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1778 ;;      Params:         6       0       0       0       0       0       0
  1779 ;;      Locals:         4       0       0       0       0       0       0
  1780 ;;      Temps:          2       0       0       0       0       0       0
  1781 ;;      Totals:        12       0       0       0       0       0       0
  1782 ;;Total ram usage:       12 bytes
  1783 ;; Hardware stack levels used: 1
  1784 ;; Hardware stack levels required when called: 3
  1785 ;; This function calls:
  1786 ;;		___lwdiv
  1787 ;;		___lwmod
  1788 ;;		_write_external_eeprom
  1789 ;; This function is called by:
  1790 ;;		_view_dashboard
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           	psect	text4
  1795   001F7A                     __ptext4:
  1796                           	callstack 0
  1797   001F7A                     _event_store:
  1798                           	callstack 26
  1799   001F7A                     
  1800                           ;store_event.c: 12: void event_store(unsigned char time[], unsigned char gear[], unsigne
      +                          d short speed);store_event.c: 13: {;store_event.c: 15:     int j = 0;
  1801   001F7A  0E00               	movlw	0
  1802   001F7C  6E42               	movwf	(event_store@j+1)^0,c
  1803   001F7E  0E00               	movlw	0
  1804   001F80  6E41               	movwf	event_store@j^0,c
  1805                           
  1806                           ;store_event.c: 16:     for (int i = 0; i < 12; i++)
  1807   001F82  0E00               	movlw	0
  1808   001F84  6E44               	movwf	(event_store@i+1)^0,c
  1809   001F86  0E00               	movlw	0
  1810   001F88  6E43               	movwf	event_store@i^0,c
  1811   001F8A                     l2710:
  1812                           
  1813                           ;store_event.c: 17:     {;store_event.c: 18:         if (i < 8)
  1814   001F8A  BE44               	btfsc	(event_store@i+1)^0,7,c
  1815   001F8C  EFD3  F00F         	goto	u1390
  1816   001F90  5044               	movf	(event_store@i+1)^0,w,c
  1817   001F92  E107               	bnz	u1391
  1818   001F94  0E08               	movlw	8
  1819   001F96  5C43               	subwf	event_store@i^0,w,c
  1820   001F98  B0D8               	btfsc	status,0,c
  1821   001F9A  EFD1  F00F         	goto	u1391
  1822   001F9E  EFD3  F00F         	goto	u1390
  1823   001FA2                     u1391:
  1824   001FA2  EFF6  F00F         	goto	l2718
  1825   001FA6                     u1390:
  1826   001FA6                     
  1827                           ;store_event.c: 19:         {;store_event.c: 20:             if (i == 2 || i == 5)
  1828   001FA6  0E02               	movlw	2
  1829   001FA8  1843               	xorwf	event_store@i^0,w,c
  1830   001FAA  1044               	iorwf	(event_store@i+1)^0,w,c
  1831   001FAC  B4D8               	btfsc	status,2,c
  1832   001FAE  EFDB  F00F         	goto	u1401
  1833   001FB2  EFDD  F00F         	goto	u1400
  1834   001FB6                     u1401:
  1835   001FB6  EF51  F010         	goto	l2734
  1836   001FBA                     u1400:
  1837   001FBA  0E05               	movlw	5
  1838   001FBC  1843               	xorwf	event_store@i^0,w,c
  1839   001FBE  1044               	iorwf	(event_store@i+1)^0,w,c
  1840   001FC0  A4D8               	btfss	status,2,c
  1841   001FC2  EFE5  F00F         	goto	u1411
  1842   001FC6  EFE7  F00F         	goto	u1410
  1843   001FCA                     u1411:
  1844   001FCA  EFE9  F00F         	goto	l2716
  1845   001FCE                     u1410:
  1846   001FCE  EF51  F010         	goto	l2734
  1847   001FD2                     l2716:
  1848                           
  1849                           ;store_event.c: 24:             write_external_eeprom(write_addr, time[i]);
  1850   001FD2  5043               	movf	event_store@i^0,w,c
  1851   001FD4  2439               	addwf	event_store@time^0,w,c
  1852   001FD6  6ED9               	movwf	fsr2l,c
  1853   001FD8  5044               	movf	(event_store@i+1)^0,w,c
  1854   001FDA  203A               	addwfc	(event_store@time+1)^0,w,c
  1855   001FDC  6EDA               	movwf	fsr2h,c
  1856   001FDE  50DF               	movf	indf2,w,c
  1857   001FE0  6E35               	movwf	write_external_eeprom@data^0,c
  1858   001FE2  501B               	movf	_write_addr^0,w,c
  1859   001FE4  ECB7  F00B         	call	_write_external_eeprom
  1860                           
  1861                           ;store_event.c: 25:         }
  1862   001FE8  EF50  F010         	goto	l2732
  1863   001FEC                     l2718:
  1864   001FEC  BE44               	btfsc	(event_store@i+1)^0,7,c
  1865   001FEE  EF04  F010         	goto	u1420
  1866   001FF2  5044               	movf	(event_store@i+1)^0,w,c
  1867   001FF4  E107               	bnz	u1421
  1868   001FF6  0E0A               	movlw	10
  1869   001FF8  5C43               	subwf	event_store@i^0,w,c
  1870   001FFA  B0D8               	btfsc	status,0,c
  1871   001FFC  EF02  F010         	goto	u1421
  1872   002000  EF04  F010         	goto	u1420
  1873   002004                     u1421:
  1874   002004  EF18  F010         	goto	l2724
  1875   002008                     u1420:
  1876   002008                     
  1877                           ;store_event.c: 27:         {;store_event.c: 28:             write_external_eeprom(write
      +                          _addr, gear[j]);
  1878   002008  5041               	movf	event_store@j^0,w,c
  1879   00200A  243B               	addwf	event_store@gear^0,w,c
  1880   00200C  6E3F               	movwf	??_event_store^0,c
  1881   00200E  5042               	movf	(event_store@j+1)^0,w,c
  1882   002010  203C               	addwfc	(event_store@gear+1)^0,w,c
  1883   002012  6E40               	movwf	(??_event_store+1)^0,c
  1884   002014  C03F  FFF6         	movff	??_event_store,tblptrl
  1885   002018  C040  FFF7         	movff	??_event_store+1,tblptrh
  1886   00201C                     	if	0	;tblptru may be non-zero
  1887   00201C                     	endif
  1888   00201C                     	if	0	;tblptru may be non-zero
  1889   00201C                     	endif
  1890   00201C  0008               	tblrd		*
  1891   00201E  CFF5 F035          	movff	tablat,write_external_eeprom@data
  1892   002022  501B               	movf	_write_addr^0,w,c
  1893   002024  ECB7  F00B         	call	_write_external_eeprom
  1894   002028                     
  1895                           ;store_event.c: 29:             j++;
  1896   002028  4A41               	infsnz	event_store@j^0,f,c
  1897   00202A  2A42               	incf	(event_store@j+1)^0,f,c
  1898                           
  1899                           ;store_event.c: 31:         }
  1900   00202C  EF50  F010         	goto	l2732
  1901   002030                     l2724:
  1902   002030  0E0A               	movlw	10
  1903   002032  1843               	xorwf	event_store@i^0,w,c
  1904   002034  1044               	iorwf	(event_store@i+1)^0,w,c
  1905   002036  A4D8               	btfss	status,2,c
  1906   002038  EF20  F010         	goto	u1431
  1907   00203C  EF22  F010         	goto	u1430
  1908   002040                     u1431:
  1909   002040  EF34  F010         	goto	l2728
  1910   002044                     u1430:
  1911   002044                     
  1912                           ;store_event.c: 33:         {;store_event.c: 37:             write_external_eeprom(write
      +                          _addr, ((speed / 10) + '0'));
  1913   002044  C03D  F02E         	movff	event_store@speed,___lwdiv@dividend
  1914   002048  C03E  F02F         	movff	event_store@speed+1,___lwdiv@dividend+1
  1915   00204C  0E00               	movlw	0
  1916   00204E  6E31               	movwf	(___lwdiv@divisor+1)^0,c
  1917   002050  0E0A               	movlw	10
  1918   002052  6E30               	movwf	___lwdiv@divisor^0,c
  1919   002054  ECDD  F00C         	call	___lwdiv	;wreg free
  1920   002058  502E               	movf	?___lwdiv^0,w,c
  1921   00205A  0F30               	addlw	48
  1922   00205C  6E35               	movwf	write_external_eeprom@data^0,c
  1923   00205E  501B               	movf	_write_addr^0,w,c
  1924   002060  ECB7  F00B         	call	_write_external_eeprom
  1925                           
  1926                           ;store_event.c: 41:         }
  1927   002064  EF50  F010         	goto	l2732
  1928   002068                     l2728:
  1929   002068  0E0B               	movlw	11
  1930   00206A  1843               	xorwf	event_store@i^0,w,c
  1931   00206C  1044               	iorwf	(event_store@i+1)^0,w,c
  1932   00206E  A4D8               	btfss	status,2,c
  1933   002070  EF3C  F010         	goto	u1441
  1934   002074  EF3E  F010         	goto	u1440
  1935   002078                     u1441:
  1936   002078  EF50  F010         	goto	l625
  1937   00207C                     u1440:
  1938   00207C                     
  1939                           ;store_event.c: 43:         {;store_event.c: 44:          write_external_eeprom(write_ad
      +                          dr, ((speed % 10) + '0'));
  1940   00207C  C03D  F028         	movff	event_store@speed,___lwmod@dividend
  1941   002080  C03E  F029         	movff	event_store@speed+1,___lwmod@dividend+1
  1942   002084  0E00               	movlw	0
  1943   002086  6E2B               	movwf	(___lwmod@divisor+1)^0,c
  1944   002088  0E0A               	movlw	10
  1945   00208A  6E2A               	movwf	___lwmod@divisor^0,c
  1946   00208C  EC75  F00C         	call	___lwmod	;wreg free
  1947   002090  5028               	movf	?___lwmod^0,w,c
  1948   002092  0F30               	addlw	48
  1949   002094  6E35               	movwf	write_external_eeprom@data^0,c
  1950   002096  501B               	movf	_write_addr^0,w,c
  1951   002098  ECB7  F00B         	call	_write_external_eeprom
  1952   00209C  EF50  F010         	goto	l2732
  1953   0020A0                     l625:
  1954   0020A0                     l2732:
  1955                           
  1956                           ;store_event.c: 46:         write_addr++;
  1957   0020A0  2A1B               	incf	_write_addr^0,f,c
  1958   0020A2                     l2734:
  1959   0020A2  4A43               	infsnz	event_store@i^0,f,c
  1960   0020A4  2A44               	incf	(event_store@i+1)^0,f,c
  1961   0020A6  BE44               	btfsc	(event_store@i+1)^0,7,c
  1962   0020A8  EF5F  F010         	goto	u1451
  1963   0020AC  5044               	movf	(event_store@i+1)^0,w,c
  1964   0020AE  E109               	bnz	u1450
  1965   0020B0  0E0C               	movlw	12
  1966   0020B2  5C43               	subwf	event_store@i^0,w,c
  1967   0020B4  A0D8               	btfss	status,0,c
  1968   0020B6  EF5F  F010         	goto	u1451
  1969   0020BA  EF61  F010         	goto	u1450
  1970   0020BE                     u1451:
  1971   0020BE  EFC5  F00F         	goto	l2710
  1972   0020C2                     u1450:
  1973   0020C2                     
  1974                           ;store_event.c: 49:     event_count++;
  1975   0020C2  4A14               	infsnz	_event_count^0,f,c
  1976   0020C4  2A15               	incf	(_event_count+1)^0,f,c
  1977   0020C6  0012               	return		;funcret
  1978   0020C8                     __end_of_event_store:
  1979                           	callstack 0
  1980                           
  1981 ;; *************** function _write_external_eeprom *****************
  1982 ;; Defined at:
  1983 ;;		line 12 in file "external EEPROM.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;  address         1    wreg     unsigned char 
  1986 ;;  data            1   13[COMRAM] unsigned char 
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;  address         1   16[COMRAM] unsigned char 
  1989 ;;  i               2   14[COMRAM] int 
  1990 ;; Return value:  Size  Location     Type
  1991 ;;                  1    wreg      void 
  1992 ;; Registers used:
  1993 ;;		wreg, status,2, status,0, cstack
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1999 ;;      Params:         1       0       0       0       0       0       0
  2000 ;;      Locals:         3       0       0       0       0       0       0
  2001 ;;      Temps:          0       0       0       0       0       0       0
  2002 ;;      Totals:         4       0       0       0       0       0       0
  2003 ;;Total ram usage:        4 bytes
  2004 ;; Hardware stack levels used: 1
  2005 ;; Hardware stack levels required when called: 2
  2006 ;; This function calls:
  2007 ;;		_i2c_start
  2008 ;;		_i2c_stop
  2009 ;;		_i2c_write
  2010 ;; This function is called by:
  2011 ;;		_event_store
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           	psect	text5
  2016   00176E                     __ptext5:
  2017                           	callstack 0
  2018   00176E                     _write_external_eeprom:
  2019                           	callstack 26
  2020                           
  2021                           ;incstack = 0
  2022                           ;write_external_eeprom@address stored from wreg
  2023   00176E  6E38               	movwf	write_external_eeprom@address^0,c
  2024   001770                     
  2025                           ;external EEPROM.c: 12: void write_external_eeprom(unsigned char address, unsigned char 
      +                          data);external EEPROM.c: 13: {;external EEPROM.c: 14:  i2c_start();
  2026   001770  ECAF  F00A         	call	_i2c_start	;wreg free
  2027   001774                     
  2028                           ;external EEPROM.c: 15:  i2c_write(0xA0);
  2029   001774  0EA0               	movlw	160
  2030   001776  ECC3  F00A         	call	_i2c_write
  2031   00177A                     
  2032                           ;external EEPROM.c: 16:  i2c_write(address);
  2033   00177A  5038               	movf	write_external_eeprom@address^0,w,c
  2034   00177C  ECC3  F00A         	call	_i2c_write
  2035   001780                     
  2036                           ;external EEPROM.c: 17:  i2c_write(data);
  2037   001780  5035               	movf	write_external_eeprom@data^0,w,c
  2038   001782  ECC3  F00A         	call	_i2c_write
  2039   001786                     
  2040                           ;external EEPROM.c: 18:  i2c_stop();
  2041   001786  ECB3  F00A         	call	_i2c_stop	;wreg free
  2042   00178A                     
  2043                           ;external EEPROM.c: 19:     for(int i = 3000;i--;);
  2044   00178A  0E0B               	movlw	11
  2045   00178C  6E37               	movwf	(write_external_eeprom@i+1)^0,c
  2046   00178E  0EB8               	movlw	184
  2047   001790  6E36               	movwf	write_external_eeprom@i^0,c
  2048   001792                     l2574:
  2049   001792  0636               	decf	write_external_eeprom@i^0,f,c
  2050   001794  A0D8               	btfss	status,0,c
  2051   001796  0637               	decf	(write_external_eeprom@i+1)^0,f,c
  2052   001798  2836               	incf	write_external_eeprom@i^0,w,c
  2053   00179A  E106               	bnz	u1301
  2054   00179C  2837               	incf	(write_external_eeprom@i+1)^0,w,c
  2055   00179E  A4D8               	btfss	status,2,c
  2056   0017A0  EFD4  F00B         	goto	u1301
  2057   0017A4  EFD6  F00B         	goto	u1300
  2058   0017A8                     u1301:
  2059   0017A8  EFC9  F00B         	goto	l2574
  2060   0017AC                     u1300:
  2061   0017AC  0012               	return		;funcret
  2062   0017AE                     __end_of_write_external_eeprom:
  2063                           	callstack 0
  2064                           
  2065 ;; *************** function ___lwmod *****************
  2066 ;; Defined at:
  2067 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwmod.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;  dividend        2    0[COMRAM] unsigned int 
  2070 ;;  divisor         2    2[COMRAM] unsigned int 
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;  counter         1    4[COMRAM] unsigned char 
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  2    0[COMRAM] unsigned int 
  2075 ;; Registers used:
  2076 ;;		wreg, status,2, status,0
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2082 ;;      Params:         4       0       0       0       0       0       0
  2083 ;;      Locals:         1       0       0       0       0       0       0
  2084 ;;      Temps:          0       0       0       0       0       0       0
  2085 ;;      Totals:         5       0       0       0       0       0       0
  2086 ;;Total ram usage:        5 bytes
  2087 ;; Hardware stack levels used: 1
  2088 ;; This function calls:
  2089 ;;		Nothing
  2090 ;; This function is called by:
  2091 ;;		_view_dashboard
  2092 ;;		_event_store
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           	psect	text6
  2097   0018EA                     __ptext6:
  2098                           	callstack 0
  2099   0018EA                     ___lwmod:
  2100                           	callstack 28
  2101   0018EA  502A               	movf	___lwmod@divisor^0,w,c
  2102   0018EC  102B               	iorwf	(___lwmod@divisor+1)^0,w,c
  2103   0018EE  B4D8               	btfsc	status,2,c
  2104   0018F0  EF7C  F00C         	goto	u1341
  2105   0018F4  EF7E  F00C         	goto	u1340
  2106   0018F8                     u1341:
  2107   0018F8  EFA2  F00C         	goto	l1346
  2108   0018FC                     u1340:
  2109   0018FC  0E01               	movlw	1
  2110   0018FE  6E2C               	movwf	___lwmod@counter^0,c
  2111   001900  EF86  F00C         	goto	l2638
  2112   001904                     l2636:
  2113   001904  90D8               	bcf	status,0,c
  2114   001906  362A               	rlcf	___lwmod@divisor^0,f,c
  2115   001908  362B               	rlcf	(___lwmod@divisor+1)^0,f,c
  2116   00190A  2A2C               	incf	___lwmod@counter^0,f,c
  2117   00190C                     l2638:
  2118   00190C  AE2B               	btfss	(___lwmod@divisor+1)^0,7,c
  2119   00190E  EF8B  F00C         	goto	u1351
  2120   001912  EF8D  F00C         	goto	u1350
  2121   001916                     u1351:
  2122   001916  EF82  F00C         	goto	l2636
  2123   00191A                     u1350:
  2124   00191A                     l2640:
  2125   00191A  502A               	movf	___lwmod@divisor^0,w,c
  2126   00191C  5C28               	subwf	___lwmod@dividend^0,w,c
  2127   00191E  502B               	movf	(___lwmod@divisor+1)^0,w,c
  2128   001920  5829               	subwfb	(___lwmod@dividend+1)^0,w,c
  2129   001922  A0D8               	btfss	status,0,c
  2130   001924  EF96  F00C         	goto	u1361
  2131   001928  EF98  F00C         	goto	u1360
  2132   00192C                     u1361:
  2133   00192C  EF9C  F00C         	goto	l2644
  2134   001930                     u1360:
  2135   001930  502A               	movf	___lwmod@divisor^0,w,c
  2136   001932  5E28               	subwf	___lwmod@dividend^0,f,c
  2137   001934  502B               	movf	(___lwmod@divisor+1)^0,w,c
  2138   001936  5A29               	subwfb	(___lwmod@dividend+1)^0,f,c
  2139   001938                     l2644:
  2140   001938  90D8               	bcf	status,0,c
  2141   00193A  322B               	rrcf	(___lwmod@divisor+1)^0,f,c
  2142   00193C  322A               	rrcf	___lwmod@divisor^0,f,c
  2143   00193E  2E2C               	decfsz	___lwmod@counter^0,f,c
  2144   001940  EF8D  F00C         	goto	l2640
  2145   001944                     l1346:
  2146   001944  C028  F028         	movff	___lwmod@dividend,?___lwmod
  2147   001948  C029  F029         	movff	___lwmod@dividend+1,?___lwmod+1
  2148   00194C  0012               	return		;funcret
  2149   00194E                     __end_of___lwmod:
  2150                           	callstack 0
  2151                           
  2152 ;; *************** function ___lwdiv *****************
  2153 ;; Defined at:
  2154 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;  dividend        2    6[COMRAM] unsigned int 
  2157 ;;  divisor         2    8[COMRAM] unsigned int 
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;  quotient        2   10[COMRAM] unsigned int 
  2160 ;;  counter         1   12[COMRAM] unsigned char 
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  2    6[COMRAM] unsigned int 
  2163 ;; Registers used:
  2164 ;;		wreg, status,2, status,0
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2170 ;;      Params:         4       0       0       0       0       0       0
  2171 ;;      Locals:         3       0       0       0       0       0       0
  2172 ;;      Temps:          0       0       0       0       0       0       0
  2173 ;;      Totals:         7       0       0       0       0       0       0
  2174 ;;Total ram usage:        7 bytes
  2175 ;; Hardware stack levels used: 1
  2176 ;; This function calls:
  2177 ;;		Nothing
  2178 ;; This function is called by:
  2179 ;;		_view_dashboard
  2180 ;;		_event_store
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           	psect	text7
  2185   0019BA                     __ptext7:
  2186                           	callstack 0
  2187   0019BA                     ___lwdiv:
  2188                           	callstack 28
  2189   0019BA  0E00               	movlw	0
  2190   0019BC  6E33               	movwf	(___lwdiv@quotient+1)^0,c
  2191   0019BE  0E00               	movlw	0
  2192   0019C0  6E32               	movwf	___lwdiv@quotient^0,c
  2193   0019C2  5030               	movf	___lwdiv@divisor^0,w,c
  2194   0019C4  1031               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2195   0019C6  B4D8               	btfsc	status,2,c
  2196   0019C8  EFE8  F00C         	goto	u1311
  2197   0019CC  EFEA  F00C         	goto	u1310
  2198   0019D0                     u1311:
  2199   0019D0  EF12  F00D         	goto	l1336
  2200   0019D4                     u1310:
  2201   0019D4  0E01               	movlw	1
  2202   0019D6  6E34               	movwf	___lwdiv@counter^0,c
  2203   0019D8  EFF2  F00C         	goto	l2618
  2204   0019DC                     l2616:
  2205   0019DC  90D8               	bcf	status,0,c
  2206   0019DE  3630               	rlcf	___lwdiv@divisor^0,f,c
  2207   0019E0  3631               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2208   0019E2  2A34               	incf	___lwdiv@counter^0,f,c
  2209   0019E4                     l2618:
  2210   0019E4  AE31               	btfss	(___lwdiv@divisor+1)^0,7,c
  2211   0019E6  EFF7  F00C         	goto	u1321
  2212   0019EA  EFF9  F00C         	goto	u1320
  2213   0019EE                     u1321:
  2214   0019EE  EFEE  F00C         	goto	l2616
  2215   0019F2                     u1320:
  2216   0019F2                     l2620:
  2217   0019F2  90D8               	bcf	status,0,c
  2218   0019F4  3632               	rlcf	___lwdiv@quotient^0,f,c
  2219   0019F6  3633               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2220   0019F8  5030               	movf	___lwdiv@divisor^0,w,c
  2221   0019FA  5C2E               	subwf	___lwdiv@dividend^0,w,c
  2222   0019FC  5031               	movf	(___lwdiv@divisor+1)^0,w,c
  2223   0019FE  582F               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2224   001A00  A0D8               	btfss	status,0,c
  2225   001A02  EF05  F00D         	goto	u1331
  2226   001A06  EF07  F00D         	goto	u1330
  2227   001A0A                     u1331:
  2228   001A0A  EF0C  F00D         	goto	l2628
  2229   001A0E                     u1330:
  2230   001A0E  5030               	movf	___lwdiv@divisor^0,w,c
  2231   001A10  5E2E               	subwf	___lwdiv@dividend^0,f,c
  2232   001A12  5031               	movf	(___lwdiv@divisor+1)^0,w,c
  2233   001A14  5A2F               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2234   001A16  8032               	bsf	___lwdiv@quotient^0,0,c
  2235   001A18                     l2628:
  2236   001A18  90D8               	bcf	status,0,c
  2237   001A1A  3231               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2238   001A1C  3230               	rrcf	___lwdiv@divisor^0,f,c
  2239   001A1E  2E34               	decfsz	___lwdiv@counter^0,f,c
  2240   001A20  EFF9  F00C         	goto	l2620
  2241   001A24                     l1336:
  2242   001A24  C032  F02E         	movff	___lwdiv@quotient,?___lwdiv
  2243   001A28  C033  F02F         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2244   001A2C  0012               	return		;funcret
  2245   001A2E                     __end_of___lwdiv:
  2246                           	callstack 0
  2247                           
  2248 ;; *************** function _display_time *****************
  2249 ;; Defined at:
  2250 ;;		line 106 in file "DS1307.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;		None
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;		None
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  1    wreg      void 
  2257 ;; Registers used:
  2258 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2264 ;;      Params:         0       0       0       0       0       0       0
  2265 ;;      Locals:         0       0       0       0       0       0       0
  2266 ;;      Temps:          0       0       0       0       0       0       0
  2267 ;;      Totals:         0       0       0       0       0       0       0
  2268 ;;Total ram usage:        0 bytes
  2269 ;; Hardware stack levels used: 1
  2270 ;; Hardware stack levels required when called: 2
  2271 ;; This function calls:
  2272 ;;		_clcd_print
  2273 ;; This function is called by:
  2274 ;;		_view_dashboard
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           	psect	text8
  2279   0015C6                     __ptext8:
  2280                           	callstack 0
  2281   0015C6                     _display_time:
  2282                           	callstack 27
  2283   0015C6                     
  2284                           ;DS1307.c: 108:  clcd_print(time, (0xC0 + (0)));
  2285   0015C6  0E1F               	movlw	low _time
  2286   0015C8  6E2A               	movwf	clcd_print@data^0,c
  2287   0015CA  0E00               	movlw	high _time
  2288   0015CC  6E2B               	movwf	(clcd_print@data+1)^0,c
  2289   0015CE  0EC0               	movlw	192
  2290   0015D0  6E2C               	movwf	clcd_print@addr^0,c
  2291   0015D2  ECA7  F00C         	call	_clcd_print	;wreg free
  2292   0015D6  0012               	return		;funcret
  2293   0015D8                     __end_of_display_time:
  2294                           	callstack 0
  2295                           
  2296 ;; *************** function _set_time *****************
  2297 ;; Defined at:
  2298 ;;		line 150 in file "dashboard.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;		None
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;  sec             1   19[COMRAM] unsigned char 
  2303 ;;  min             1   18[COMRAM] unsigned char 
  2304 ;;  hr              1   17[COMRAM] unsigned char 
  2305 ;; Return value:  Size  Location     Type
  2306 ;;                  1    wreg      void 
  2307 ;; Registers used:
  2308 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2309 ;; Tracked objects:
  2310 ;;		On entry : 0/0
  2311 ;;		On exit  : 0/0
  2312 ;;		Unchanged: 0/0
  2313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2314 ;;      Params:         0       0       0       0       0       0       0
  2315 ;;      Locals:         3       0       0       0       0       0       0
  2316 ;;      Temps:          2       0       0       0       0       0       0
  2317 ;;      Totals:         5       0       0       0       0       0       0
  2318 ;;Total ram usage:        5 bytes
  2319 ;; Hardware stack levels used: 1
  2320 ;; Hardware stack levels required when called: 3
  2321 ;; This function calls:
  2322 ;;		___awdiv
  2323 ;;		___awmod
  2324 ;;		_clcd_print
  2325 ;;		_clcd_putch
  2326 ;;		_clcd_write
  2327 ;;		_write_DS1307
  2328 ;; This function is called by:
  2329 ;;		_main
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332                           
  2333                           	psect	text9
  2334   002950                     __ptext9:
  2335                           	callstack 0
  2336   002950                     _set_time:
  2337                           	callstack 27
  2338   002950                     
  2339                           ;dashboard.c: 152:     clcd_print("HH:MM:SS", (0x80 + (0)));
  2340   002950  0ECE               	movlw	low STR_23
  2341   002952  6E2A               	movwf	clcd_print@data^0,c
  2342   002954  0E2F               	movlw	high STR_23
  2343   002956  6E2B               	movwf	(clcd_print@data+1)^0,c
  2344   002958  0E80               	movlw	128
  2345   00295A  6E2C               	movwf	clcd_print@addr^0,c
  2346   00295C  ECA7  F00C         	call	_clcd_print	;wreg free
  2347   002960                     
  2348                           ;dashboard.c: 153:     if (flag == 0) {
  2349   002960  500C               	movf	_flag^0,w,c
  2350   002962  100D               	iorwf	(_flag+1)^0,w,c
  2351   002964  A4D8               	btfss	status,2,c
  2352   002966  EFB7  F014         	goto	u2011
  2353   00296A  EFB9  F014         	goto	u2010
  2354   00296E                     u2011:
  2355   00296E  EFD3  F014         	goto	l3144
  2356   002972                     u2010:
  2357   002972                     
  2358                           ;dashboard.c: 154:         hour = (time[0] - '0')*10 + (time[1] - '0');
  2359   002972  501F               	movf	_time^0,w,c
  2360   002974  0D0A               	mullw	10
  2361   002976  50F3               	movf	243,w,c
  2362   002978  2420               	addwf	(_time+1)^0,w,c
  2363   00297A  0FF0               	addlw	240
  2364   00297C  6E1D               	movwf	_hour^0,c
  2365                           
  2366                           ;dashboard.c: 155:         minute = (time[3] - '0')*10 + (time[4] - '0');
  2367   00297E  5022               	movf	(_time+3)^0,w,c
  2368   002980  0D0A               	mullw	10
  2369   002982  50F3               	movf	243,w,c
  2370   002984  2423               	addwf	(_time+4)^0,w,c
  2371   002986  0FF0               	addlw	240
  2372   002988  6E1E               	movwf	_minute^0,c
  2373                           
  2374                           ;dashboard.c: 156:         second = (time[6] - '0')*10 + (time[7] - '0');
  2375   00298A  5025               	movf	(_time+6)^0,w,c
  2376   00298C  0D0A               	mullw	10
  2377   00298E  50F3               	movf	243,w,c
  2378   002990  2426               	addwf	(_time+7)^0,w,c
  2379   002992  0FF0               	addlw	240
  2380   002994  6E1C               	movwf	_second^0,c
  2381   002996                     
  2382                           ;dashboard.c: 157:         flag = 1;
  2383   002996  0E00               	movlw	0
  2384   002998  6E0D               	movwf	(_flag+1)^0,c
  2385   00299A  0E01               	movlw	1
  2386   00299C  6E0C               	movwf	_flag^0,c
  2387   00299E                     
  2388                           ;dashboard.c: 158:         field = 0;
  2389   00299E  0E00               	movlw	0
  2390   0029A0  6E13               	movwf	(_field+1)^0,c
  2391   0029A2  0E00               	movlw	0
  2392   0029A4  6E12               	movwf	_field^0,c
  2393   0029A6                     l3144:
  2394                           
  2395                           ;dashboard.c: 161:     static unsigned int wait = 0;;dashboard.c: 162:     if (key == 2)
      +                           {
  2396   0029A6  0E02               	movlw	2
  2397   0029A8  181A               	xorwf	_key^0,w,c
  2398   0029AA  A4D8               	btfss	status,2,c
  2399   0029AC  EFDA  F014         	goto	u2021
  2400   0029B0  EFDC  F014         	goto	u2020
  2401   0029B4                     u2021:
  2402   0029B4  EFF1  F014         	goto	l3152
  2403   0029B8                     u2020:
  2404   0029B8                     
  2405                           ;dashboard.c: 163:         field++;
  2406   0029B8  4A12               	infsnz	_field^0,f,c
  2407   0029BA  2A13               	incf	(_field+1)^0,f,c
  2408   0029BC                     
  2409                           ;dashboard.c: 164:         if (field > 2) {
  2410   0029BC  5013               	movf	(_field+1)^0,w,c
  2411   0029BE  E109               	bnz	u2030
  2412   0029C0  0E03               	movlw	3
  2413   0029C2  5C12               	subwf	_field^0,w,c
  2414   0029C4  A0D8               	btfss	status,0,c
  2415   0029C6  EFE7  F014         	goto	u2031
  2416   0029CA  EFE9  F014         	goto	u2030
  2417   0029CE                     u2031:
  2418   0029CE  EFED  F014         	goto	l198
  2419   0029D2                     u2030:
  2420   0029D2                     
  2421                           ;dashboard.c: 165:             field = 0;
  2422   0029D2  0E00               	movlw	0
  2423   0029D4  6E13               	movwf	(_field+1)^0,c
  2424   0029D6  0E00               	movlw	0
  2425   0029D8  6E12               	movwf	_field^0,c
  2426   0029DA                     l198:
  2427                           
  2428                           ;dashboard.c: 167:         wait = 0;
  2429   0029DA  0E00               	movlw	0
  2430   0029DC  6E05               	movwf	(set_time@wait+1)^0,c
  2431   0029DE  0E00               	movlw	0
  2432   0029E0  6E04               	movwf	set_time@wait^0,c
  2433   0029E2                     l3152:
  2434                           
  2435                           ;dashboard.c: 169:     if (field == 0) {
  2436   0029E2  5012               	movf	_field^0,w,c
  2437   0029E4  1013               	iorwf	(_field+1)^0,w,c
  2438   0029E6  A4D8               	btfss	status,2,c
  2439   0029E8  EFF8  F014         	goto	u2041
  2440   0029EC  EFFA  F014         	goto	u2040
  2441   0029F0                     u2041:
  2442   0029F0  EF98  F015         	goto	l3184
  2443   0029F4                     u2040:
  2444   0029F4                     
  2445                           ;dashboard.c: 170:         if (key == 1) {
  2446   0029F4  041A               	decf	_key^0,w,c
  2447   0029F6  A4D8               	btfss	status,2,c
  2448   0029F8  EF00  F015         	goto	u2051
  2449   0029FC  EF02  F015         	goto	u2050
  2450   002A00                     u2051:
  2451   002A00  EF0D  F015         	goto	l3162
  2452   002A04                     u2050:
  2453   002A04                     
  2454                           ;dashboard.c: 171:             hour++;
  2455   002A04  2A1D               	incf	_hour^0,f,c
  2456   002A06                     
  2457                           ;dashboard.c: 172:             if (hour > 23) {
  2458   002A06  0E17               	movlw	23
  2459   002A08  641D               	cpfsgt	_hour^0,c
  2460   002A0A  EF09  F015         	goto	u2061
  2461   002A0E  EF0B  F015         	goto	u2060
  2462   002A12                     u2061:
  2463   002A12  EF0D  F015         	goto	l3162
  2464   002A16                     u2060:
  2465   002A16                     
  2466                           ;dashboard.c: 173:                 hour = 0;
  2467   002A16  0E00               	movlw	0
  2468   002A18  6E1D               	movwf	_hour^0,c
  2469   002A1A                     l3162:
  2470                           
  2471                           ;dashboard.c: 176:         if (wait++ == 100) {
  2472   002A1A  4A04               	infsnz	set_time@wait^0,f,c
  2473   002A1C  2A05               	incf	(set_time@wait+1)^0,f,c
  2474   002A1E  0E65               	movlw	101
  2475   002A20  1804               	xorwf	set_time@wait^0,w,c
  2476   002A22  1005               	iorwf	(set_time@wait+1)^0,w,c
  2477   002A24  A4D8               	btfss	status,2,c
  2478   002A26  EF17  F015         	goto	u2071
  2479   002A2A  EF19  F015         	goto	u2070
  2480   002A2E                     u2071:
  2481   002A2E  EF39  F015         	goto	l3166
  2482   002A32                     u2070:
  2483   002A32                     
  2484                           ;dashboard.c: 177:             clcd_putch((hour / 10) + '0', (0xC0 + (0)));
  2485   002A32  0EC0               	movlw	192
  2486   002A34  6E35               	movwf	clcd_putch@addr^0,c
  2487   002A36  C01D  F028         	movff	_hour,___awdiv@dividend
  2488   002A3A  6A29               	clrf	(___awdiv@dividend+1)^0,c
  2489   002A3C  0E00               	movlw	0
  2490   002A3E  6E2B               	movwf	(___awdiv@divisor+1)^0,c
  2491   002A40  0E0A               	movlw	10
  2492   002A42  6E2A               	movwf	___awdiv@divisor^0,c
  2493   002A44  EC3E  F00E         	call	___awdiv	;wreg free
  2494   002A48  5028               	movf	?___awdiv^0,w,c
  2495   002A4A  0F30               	addlw	48
  2496   002A4C  ECF5  F00A         	call	_clcd_putch
  2497                           
  2498                           ;dashboard.c: 178:             clcd_putch((hour % 10) + '0', (0xC0 + (1)));
  2499   002A50  0EC1               	movlw	193
  2500   002A52  6E35               	movwf	clcd_putch@addr^0,c
  2501   002A54  C01D  F028         	movff	_hour,___awmod@dividend
  2502   002A58  6A29               	clrf	(___awmod@dividend+1)^0,c
  2503   002A5A  0E00               	movlw	0
  2504   002A5C  6E2B               	movwf	(___awmod@divisor+1)^0,c
  2505   002A5E  0E0A               	movlw	10
  2506   002A60  6E2A               	movwf	___awmod@divisor^0,c
  2507   002A62  ECE6  F00D         	call	___awmod	;wreg free
  2508   002A66  5028               	movf	?___awmod^0,w,c
  2509   002A68  0F30               	addlw	48
  2510   002A6A  ECF5  F00A         	call	_clcd_putch
  2511                           
  2512                           ;dashboard.c: 179:         } else if (wait >= 200) {
  2513   002A6E  EF50  F015         	goto	l3172
  2514   002A72                     l3166:
  2515   002A72  5005               	movf	(set_time@wait+1)^0,w,c
  2516   002A74  E109               	bnz	u2080
  2517   002A76  0EC8               	movlw	200
  2518   002A78  5C04               	subwf	set_time@wait^0,w,c
  2519   002A7A  A0D8               	btfss	status,0,c
  2520   002A7C  EF42  F015         	goto	u2081
  2521   002A80  EF44  F015         	goto	u2080
  2522   002A84                     u2081:
  2523   002A84  EF50  F015         	goto	l3172
  2524   002A88                     u2080:
  2525   002A88                     
  2526                           ;dashboard.c: 180:             clcd_print("  ", (0xC0 + (0)));
  2527   002A88  0E1C               	movlw	low (STR_10+17)
  2528   002A8A  6E2A               	movwf	clcd_print@data^0,c
  2529   002A8C  0E2F               	movlw	high (STR_10+17)
  2530   002A8E  6E2B               	movwf	(clcd_print@data+1)^0,c
  2531   002A90  0EC0               	movlw	192
  2532   002A92  6E2C               	movwf	clcd_print@addr^0,c
  2533   002A94  ECA7  F00C         	call	_clcd_print	;wreg free
  2534   002A98                     
  2535                           ;dashboard.c: 181:             wait = 0;
  2536   002A98  0E00               	movlw	0
  2537   002A9A  6E05               	movwf	(set_time@wait+1)^0,c
  2538   002A9C  0E00               	movlw	0
  2539   002A9E  6E04               	movwf	set_time@wait^0,c
  2540   002AA0                     l3172:
  2541                           
  2542                           ;dashboard.c: 183:         clcd_putch(':', (0xC0 + (2)));
  2543   002AA0  0EC2               	movlw	194
  2544   002AA2  6E35               	movwf	clcd_putch@addr^0,c
  2545   002AA4  0E3A               	movlw	58
  2546   002AA6  ECF5  F00A         	call	_clcd_putch
  2547   002AAA                     
  2548                           ;dashboard.c: 184:         clcd_putch(':', (0xC0 + (5)));
  2549   002AAA  0EC5               	movlw	197
  2550   002AAC  6E35               	movwf	clcd_putch@addr^0,c
  2551   002AAE  0E3A               	movlw	58
  2552   002AB0  ECF5  F00A         	call	_clcd_putch
  2553   002AB4                     
  2554                           ;dashboard.c: 185:         clcd_putch((minute / 10) + '0', (0xC0 + (3)));
  2555   002AB4  0EC3               	movlw	195
  2556   002AB6  6E35               	movwf	clcd_putch@addr^0,c
  2557   002AB8  C01E  F028         	movff	_minute,___awdiv@dividend
  2558   002ABC  6A29               	clrf	(___awdiv@dividend+1)^0,c
  2559   002ABE  0E00               	movlw	0
  2560   002AC0  6E2B               	movwf	(___awdiv@divisor+1)^0,c
  2561   002AC2  0E0A               	movlw	10
  2562   002AC4  6E2A               	movwf	___awdiv@divisor^0,c
  2563   002AC6  EC3E  F00E         	call	___awdiv	;wreg free
  2564   002ACA  5028               	movf	?___awdiv^0,w,c
  2565   002ACC  0F30               	addlw	48
  2566   002ACE  ECF5  F00A         	call	_clcd_putch
  2567   002AD2                     
  2568                           ;dashboard.c: 186:         clcd_putch((minute % 10) + '0', (0xC0 + (4)));
  2569   002AD2  0EC4               	movlw	196
  2570   002AD4  6E35               	movwf	clcd_putch@addr^0,c
  2571   002AD6  C01E  F028         	movff	_minute,___awmod@dividend
  2572   002ADA  6A29               	clrf	(___awmod@dividend+1)^0,c
  2573   002ADC  0E00               	movlw	0
  2574   002ADE  6E2B               	movwf	(___awmod@divisor+1)^0,c
  2575   002AE0  0E0A               	movlw	10
  2576   002AE2  6E2A               	movwf	___awmod@divisor^0,c
  2577   002AE4  ECE6  F00D         	call	___awmod	;wreg free
  2578   002AE8  5028               	movf	?___awmod^0,w,c
  2579   002AEA  0F30               	addlw	48
  2580   002AEC  ECF5  F00A         	call	_clcd_putch
  2581   002AF0                     
  2582                           ;dashboard.c: 187:         clcd_putch((second / 10) + '0', (0xC0 + (6)));
  2583   002AF0  0EC6               	movlw	198
  2584   002AF2  6E35               	movwf	clcd_putch@addr^0,c
  2585   002AF4  C01C  F028         	movff	_second,___awdiv@dividend
  2586   002AF8  6A29               	clrf	(___awdiv@dividend+1)^0,c
  2587   002AFA  0E00               	movlw	0
  2588   002AFC  6E2B               	movwf	(___awdiv@divisor+1)^0,c
  2589   002AFE  0E0A               	movlw	10
  2590   002B00  6E2A               	movwf	___awdiv@divisor^0,c
  2591   002B02  EC3E  F00E         	call	___awdiv	;wreg free
  2592   002B06  5028               	movf	?___awdiv^0,w,c
  2593   002B08  0F30               	addlw	48
  2594   002B0A  ECF5  F00A         	call	_clcd_putch
  2595   002B0E                     
  2596                           ;dashboard.c: 188:         clcd_putch((second % 10) + '0', (0xC0 + (7)));
  2597   002B0E  0EC7               	movlw	199
  2598   002B10  6E35               	movwf	clcd_putch@addr^0,c
  2599   002B12  C01C  F028         	movff	_second,___awmod@dividend
  2600   002B16  6A29               	clrf	(___awmod@dividend+1)^0,c
  2601   002B18  0E00               	movlw	0
  2602   002B1A  6E2B               	movwf	(___awmod@divisor+1)^0,c
  2603   002B1C  0E0A               	movlw	10
  2604   002B1E  6E2A               	movwf	___awmod@divisor^0,c
  2605   002B20  ECE6  F00D         	call	___awmod	;wreg free
  2606   002B24  5028               	movf	?___awmod^0,w,c
  2607   002B26  0F30               	addlw	48
  2608   002B28  ECF5  F00A         	call	_clcd_putch
  2609                           
  2610                           ;dashboard.c: 191:     } else if (field == 1) {
  2611   002B2C  EFE5  F016         	goto	l3248
  2612   002B30                     l3184:
  2613   002B30  0412               	decf	_field^0,w,c
  2614   002B32  1013               	iorwf	(_field+1)^0,w,c
  2615   002B34  A4D8               	btfss	status,2,c
  2616   002B36  EF9F  F015         	goto	u2091
  2617   002B3A  EFA1  F015         	goto	u2090
  2618   002B3E                     u2091:
  2619   002B3E  EF3F  F016         	goto	l3216
  2620   002B42                     u2090:
  2621   002B42                     
  2622                           ;dashboard.c: 192:         if (key == 1) {
  2623   002B42  041A               	decf	_key^0,w,c
  2624   002B44  A4D8               	btfss	status,2,c
  2625   002B46  EFA7  F015         	goto	u2101
  2626   002B4A  EFA9  F015         	goto	u2100
  2627   002B4E                     u2101:
  2628   002B4E  EFB4  F015         	goto	l3194
  2629   002B52                     u2100:
  2630   002B52                     
  2631                           ;dashboard.c: 193:             minute++;
  2632   002B52  2A1E               	incf	_minute^0,f,c
  2633   002B54                     
  2634                           ;dashboard.c: 194:             if (minute > 59)
  2635   002B54  0E3B               	movlw	59
  2636   002B56  641E               	cpfsgt	_minute^0,c
  2637   002B58  EFB0  F015         	goto	u2111
  2638   002B5C  EFB2  F015         	goto	u2110
  2639   002B60                     u2111:
  2640   002B60  EFB4  F015         	goto	l3194
  2641   002B64                     u2110:
  2642   002B64                     
  2643                           ;dashboard.c: 195:                 minute = 0;
  2644   002B64  0E00               	movlw	0
  2645   002B66  6E1E               	movwf	_minute^0,c
  2646   002B68                     l3194:
  2647                           
  2648                           ;dashboard.c: 197:         if (wait++ == 100) {
  2649   002B68  4A04               	infsnz	set_time@wait^0,f,c
  2650   002B6A  2A05               	incf	(set_time@wait+1)^0,f,c
  2651   002B6C  0E65               	movlw	101
  2652   002B6E  1804               	xorwf	set_time@wait^0,w,c
  2653   002B70  1005               	iorwf	(set_time@wait+1)^0,w,c
  2654   002B72  A4D8               	btfss	status,2,c
  2655   002B74  EFBE  F015         	goto	u2121
  2656   002B78  EFC0  F015         	goto	u2120
  2657   002B7C                     u2121:
  2658   002B7C  EFE0  F015         	goto	l3198
  2659   002B80                     u2120:
  2660   002B80                     
  2661                           ;dashboard.c: 198:             clcd_putch((minute / 10) + '0', (0xC0 + (3)));
  2662   002B80  0EC3               	movlw	195
  2663   002B82  6E35               	movwf	clcd_putch@addr^0,c
  2664   002B84  C01E  F028         	movff	_minute,___awdiv@dividend
  2665   002B88  6A29               	clrf	(___awdiv@dividend+1)^0,c
  2666   002B8A  0E00               	movlw	0
  2667   002B8C  6E2B               	movwf	(___awdiv@divisor+1)^0,c
  2668   002B8E  0E0A               	movlw	10
  2669   002B90  6E2A               	movwf	___awdiv@divisor^0,c
  2670   002B92  EC3E  F00E         	call	___awdiv	;wreg free
  2671   002B96  5028               	movf	?___awdiv^0,w,c
  2672   002B98  0F30               	addlw	48
  2673   002B9A  ECF5  F00A         	call	_clcd_putch
  2674                           
  2675                           ;dashboard.c: 199:             clcd_putch((minute % 10) + '0', (0xC0 + (4)));
  2676   002B9E  0EC4               	movlw	196
  2677   002BA0  6E35               	movwf	clcd_putch@addr^0,c
  2678   002BA2  C01E  F028         	movff	_minute,___awmod@dividend
  2679   002BA6  6A29               	clrf	(___awmod@dividend+1)^0,c
  2680   002BA8  0E00               	movlw	0
  2681   002BAA  6E2B               	movwf	(___awmod@divisor+1)^0,c
  2682   002BAC  0E0A               	movlw	10
  2683   002BAE  6E2A               	movwf	___awmod@divisor^0,c
  2684   002BB0  ECE6  F00D         	call	___awmod	;wreg free
  2685   002BB4  5028               	movf	?___awmod^0,w,c
  2686   002BB6  0F30               	addlw	48
  2687   002BB8  ECF5  F00A         	call	_clcd_putch
  2688                           
  2689                           ;dashboard.c: 200:         } else if (wait >= 200) {
  2690   002BBC  EFF7  F015         	goto	l3204
  2691   002BC0                     l3198:
  2692   002BC0  5005               	movf	(set_time@wait+1)^0,w,c
  2693   002BC2  E109               	bnz	u2130
  2694   002BC4  0EC8               	movlw	200
  2695   002BC6  5C04               	subwf	set_time@wait^0,w,c
  2696   002BC8  A0D8               	btfss	status,0,c
  2697   002BCA  EFE9  F015         	goto	u2131
  2698   002BCE  EFEB  F015         	goto	u2130
  2699   002BD2                     u2131:
  2700   002BD2  EFF7  F015         	goto	l3204
  2701   002BD6                     u2130:
  2702   002BD6                     
  2703                           ;dashboard.c: 201:             clcd_print("  ", (0xC0 + (3)));
  2704   002BD6  0E1C               	movlw	low (STR_10+17)
  2705   002BD8  6E2A               	movwf	clcd_print@data^0,c
  2706   002BDA  0E2F               	movlw	high (STR_10+17)
  2707   002BDC  6E2B               	movwf	(clcd_print@data+1)^0,c
  2708   002BDE  0EC3               	movlw	195
  2709   002BE0  6E2C               	movwf	clcd_print@addr^0,c
  2710   002BE2  ECA7  F00C         	call	_clcd_print	;wreg free
  2711   002BE6                     
  2712                           ;dashboard.c: 202:             wait = 0;
  2713   002BE6  0E00               	movlw	0
  2714   002BE8  6E05               	movwf	(set_time@wait+1)^0,c
  2715   002BEA  0E00               	movlw	0
  2716   002BEC  6E04               	movwf	set_time@wait^0,c
  2717   002BEE                     l3204:
  2718                           
  2719                           ;dashboard.c: 204:         clcd_putch(':', (0xC0 + (2)));
  2720   002BEE  0EC2               	movlw	194
  2721   002BF0  6E35               	movwf	clcd_putch@addr^0,c
  2722   002BF2  0E3A               	movlw	58
  2723   002BF4  ECF5  F00A         	call	_clcd_putch
  2724   002BF8                     
  2725                           ;dashboard.c: 205:         clcd_putch(':', (0xC0 + (5)));
  2726   002BF8  0EC5               	movlw	197
  2727   002BFA  6E35               	movwf	clcd_putch@addr^0,c
  2728   002BFC  0E3A               	movlw	58
  2729   002BFE  ECF5  F00A         	call	_clcd_putch
  2730   002C02                     
  2731                           ;dashboard.c: 206:         clcd_putch((hour / 10) + '0', (0xC0 + (0)));
  2732   002C02  0EC0               	movlw	192
  2733   002C04  6E35               	movwf	clcd_putch@addr^0,c
  2734   002C06  C01D  F028         	movff	_hour,___awdiv@dividend
  2735   002C0A  6A29               	clrf	(___awdiv@dividend+1)^0,c
  2736   002C0C  0E00               	movlw	0
  2737   002C0E  6E2B               	movwf	(___awdiv@divisor+1)^0,c
  2738   002C10  0E0A               	movlw	10
  2739   002C12  6E2A               	movwf	___awdiv@divisor^0,c
  2740   002C14  EC3E  F00E         	call	___awdiv	;wreg free
  2741   002C18  5028               	movf	?___awdiv^0,w,c
  2742   002C1A  0F30               	addlw	48
  2743   002C1C  ECF5  F00A         	call	_clcd_putch
  2744   002C20                     
  2745                           ;dashboard.c: 207:         clcd_putch((hour % 10) + '0', (0xC0 + (1)));
  2746   002C20  0EC1               	movlw	193
  2747   002C22  6E35               	movwf	clcd_putch@addr^0,c
  2748   002C24  C01D  F028         	movff	_hour,___awmod@dividend
  2749   002C28  6A29               	clrf	(___awmod@dividend+1)^0,c
  2750   002C2A  0E00               	movlw	0
  2751   002C2C  6E2B               	movwf	(___awmod@divisor+1)^0,c
  2752   002C2E  0E0A               	movlw	10
  2753   002C30  6E2A               	movwf	___awmod@divisor^0,c
  2754   002C32  ECE6  F00D         	call	___awmod	;wreg free
  2755   002C36  5028               	movf	?___awmod^0,w,c
  2756   002C38  0F30               	addlw	48
  2757   002C3A  ECF5  F00A         	call	_clcd_putch
  2758   002C3E                     
  2759                           ;dashboard.c: 208:         clcd_putch((second / 10) + '0', (0xC0 + (6)));
  2760   002C3E  0EC6               	movlw	198
  2761   002C40  6E35               	movwf	clcd_putch@addr^0,c
  2762   002C42  C01C  F028         	movff	_second,___awdiv@dividend
  2763   002C46  6A29               	clrf	(___awdiv@dividend+1)^0,c
  2764   002C48  0E00               	movlw	0
  2765   002C4A  6E2B               	movwf	(___awdiv@divisor+1)^0,c
  2766   002C4C  0E0A               	movlw	10
  2767   002C4E  6E2A               	movwf	___awdiv@divisor^0,c
  2768   002C50  EC3E  F00E         	call	___awdiv	;wreg free
  2769   002C54  5028               	movf	?___awdiv^0,w,c
  2770   002C56  0F30               	addlw	48
  2771   002C58  ECF5  F00A         	call	_clcd_putch
  2772   002C5C                     
  2773                           ;dashboard.c: 209:         clcd_putch((second % 10) + '0', (0xC0 + (7)));
  2774   002C5C  0EC7               	movlw	199
  2775   002C5E  6E35               	movwf	clcd_putch@addr^0,c
  2776   002C60  C01C  F028         	movff	_second,___awmod@dividend
  2777   002C64  6A29               	clrf	(___awmod@dividend+1)^0,c
  2778   002C66  0E00               	movlw	0
  2779   002C68  6E2B               	movwf	(___awmod@divisor+1)^0,c
  2780   002C6A  0E0A               	movlw	10
  2781   002C6C  6E2A               	movwf	___awmod@divisor^0,c
  2782   002C6E  ECE6  F00D         	call	___awmod	;wreg free
  2783   002C72  5028               	movf	?___awmod^0,w,c
  2784   002C74  0F30               	addlw	48
  2785   002C76  ECF5  F00A         	call	_clcd_putch
  2786                           
  2787                           ;dashboard.c: 211:     } else if (field == 2) {
  2788   002C7A  EFE5  F016         	goto	l3248
  2789   002C7E                     l3216:
  2790   002C7E  0E02               	movlw	2
  2791   002C80  1812               	xorwf	_field^0,w,c
  2792   002C82  1013               	iorwf	(_field+1)^0,w,c
  2793   002C84  A4D8               	btfss	status,2,c
  2794   002C86  EF47  F016         	goto	u2141
  2795   002C8A  EF49  F016         	goto	u2140
  2796   002C8E                     u2141:
  2797   002C8E  EFE5  F016         	goto	l3248
  2798   002C92                     u2140:
  2799   002C92                     
  2800                           ;dashboard.c: 212:         if (key == 1) {
  2801   002C92  041A               	decf	_key^0,w,c
  2802   002C94  A4D8               	btfss	status,2,c
  2803   002C96  EF4F  F016         	goto	u2151
  2804   002C9A  EF51  F016         	goto	u2150
  2805   002C9E                     u2151:
  2806   002C9E  EF5C  F016         	goto	l3226
  2807   002CA2                     u2150:
  2808   002CA2                     
  2809                           ;dashboard.c: 213:             second++;
  2810   002CA2  2A1C               	incf	_second^0,f,c
  2811   002CA4                     
  2812                           ;dashboard.c: 214:             if (second > 59)
  2813   002CA4  0E3B               	movlw	59
  2814   002CA6  641C               	cpfsgt	_second^0,c
  2815   002CA8  EF58  F016         	goto	u2161
  2816   002CAC  EF5A  F016         	goto	u2160
  2817   002CB0                     u2161:
  2818   002CB0  EF5C  F016         	goto	l3226
  2819   002CB4                     u2160:
  2820   002CB4                     
  2821                           ;dashboard.c: 215:                 second = 0;
  2822   002CB4  0E00               	movlw	0
  2823   002CB6  6E1C               	movwf	_second^0,c
  2824   002CB8                     l3226:
  2825                           
  2826                           ;dashboard.c: 217:         if (wait++ == 100) {
  2827   002CB8  4A04               	infsnz	set_time@wait^0,f,c
  2828   002CBA  2A05               	incf	(set_time@wait+1)^0,f,c
  2829   002CBC  0E65               	movlw	101
  2830   002CBE  1804               	xorwf	set_time@wait^0,w,c
  2831   002CC0  1005               	iorwf	(set_time@wait+1)^0,w,c
  2832   002CC2  A4D8               	btfss	status,2,c
  2833   002CC4  EF66  F016         	goto	u2171
  2834   002CC8  EF68  F016         	goto	u2170
  2835   002CCC                     u2171:
  2836   002CCC  EF88  F016         	goto	l3230
  2837   002CD0                     u2170:
  2838   002CD0                     
  2839                           ;dashboard.c: 218:             clcd_putch((second / 10) + '0', (0xC0 + (6)));
  2840   002CD0  0EC6               	movlw	198
  2841   002CD2  6E35               	movwf	clcd_putch@addr^0,c
  2842   002CD4  C01C  F028         	movff	_second,___awdiv@dividend
  2843   002CD8  6A29               	clrf	(___awdiv@dividend+1)^0,c
  2844   002CDA  0E00               	movlw	0
  2845   002CDC  6E2B               	movwf	(___awdiv@divisor+1)^0,c
  2846   002CDE  0E0A               	movlw	10
  2847   002CE0  6E2A               	movwf	___awdiv@divisor^0,c
  2848   002CE2  EC3E  F00E         	call	___awdiv	;wreg free
  2849   002CE6  5028               	movf	?___awdiv^0,w,c
  2850   002CE8  0F30               	addlw	48
  2851   002CEA  ECF5  F00A         	call	_clcd_putch
  2852                           
  2853                           ;dashboard.c: 219:             clcd_putch((second % 10) + '0', (0xC0 + (7)));
  2854   002CEE  0EC7               	movlw	199
  2855   002CF0  6E35               	movwf	clcd_putch@addr^0,c
  2856   002CF2  C01C  F028         	movff	_second,___awmod@dividend
  2857   002CF6  6A29               	clrf	(___awmod@dividend+1)^0,c
  2858   002CF8  0E00               	movlw	0
  2859   002CFA  6E2B               	movwf	(___awmod@divisor+1)^0,c
  2860   002CFC  0E0A               	movlw	10
  2861   002CFE  6E2A               	movwf	___awmod@divisor^0,c
  2862   002D00  ECE6  F00D         	call	___awmod	;wreg free
  2863   002D04  5028               	movf	?___awmod^0,w,c
  2864   002D06  0F30               	addlw	48
  2865   002D08  ECF5  F00A         	call	_clcd_putch
  2866                           
  2867                           ;dashboard.c: 220:         } else if (wait >= 200) {
  2868   002D0C  EF9F  F016         	goto	l3236
  2869   002D10                     l3230:
  2870   002D10  5005               	movf	(set_time@wait+1)^0,w,c
  2871   002D12  E109               	bnz	u2180
  2872   002D14  0EC8               	movlw	200
  2873   002D16  5C04               	subwf	set_time@wait^0,w,c
  2874   002D18  A0D8               	btfss	status,0,c
  2875   002D1A  EF91  F016         	goto	u2181
  2876   002D1E  EF93  F016         	goto	u2180
  2877   002D22                     u2181:
  2878   002D22  EF9F  F016         	goto	l3236
  2879   002D26                     u2180:
  2880   002D26                     
  2881                           ;dashboard.c: 221:             clcd_print("  ", (0xC0 + (6)));
  2882   002D26  0E1C               	movlw	low (STR_10+17)
  2883   002D28  6E2A               	movwf	clcd_print@data^0,c
  2884   002D2A  0E2F               	movlw	high (STR_10+17)
  2885   002D2C  6E2B               	movwf	(clcd_print@data+1)^0,c
  2886   002D2E  0EC6               	movlw	198
  2887   002D30  6E2C               	movwf	clcd_print@addr^0,c
  2888   002D32  ECA7  F00C         	call	_clcd_print	;wreg free
  2889   002D36                     
  2890                           ;dashboard.c: 222:             wait = 0;
  2891   002D36  0E00               	movlw	0
  2892   002D38  6E05               	movwf	(set_time@wait+1)^0,c
  2893   002D3A  0E00               	movlw	0
  2894   002D3C  6E04               	movwf	set_time@wait^0,c
  2895   002D3E                     l3236:
  2896                           
  2897                           ;dashboard.c: 224:         clcd_putch(':', (0xC0 + (2)));
  2898   002D3E  0EC2               	movlw	194
  2899   002D40  6E35               	movwf	clcd_putch@addr^0,c
  2900   002D42  0E3A               	movlw	58
  2901   002D44  ECF5  F00A         	call	_clcd_putch
  2902   002D48                     
  2903                           ;dashboard.c: 225:         clcd_putch(':', (0xC0 + (5)));
  2904   002D48  0EC5               	movlw	197
  2905   002D4A  6E35               	movwf	clcd_putch@addr^0,c
  2906   002D4C  0E3A               	movlw	58
  2907   002D4E  ECF5  F00A         	call	_clcd_putch
  2908   002D52                     
  2909                           ;dashboard.c: 226:         clcd_putch((hour / 10) + '0', (0xC0 + (0)));
  2910   002D52  0EC0               	movlw	192
  2911   002D54  6E35               	movwf	clcd_putch@addr^0,c
  2912   002D56  C01D  F028         	movff	_hour,___awdiv@dividend
  2913   002D5A  6A29               	clrf	(___awdiv@dividend+1)^0,c
  2914   002D5C  0E00               	movlw	0
  2915   002D5E  6E2B               	movwf	(___awdiv@divisor+1)^0,c
  2916   002D60  0E0A               	movlw	10
  2917   002D62  6E2A               	movwf	___awdiv@divisor^0,c
  2918   002D64  EC3E  F00E         	call	___awdiv	;wreg free
  2919   002D68  5028               	movf	?___awdiv^0,w,c
  2920   002D6A  0F30               	addlw	48
  2921   002D6C  ECF5  F00A         	call	_clcd_putch
  2922   002D70                     
  2923                           ;dashboard.c: 227:         clcd_putch((hour % 10) + '0', (0xC0 + (1)));
  2924   002D70  0EC1               	movlw	193
  2925   002D72  6E35               	movwf	clcd_putch@addr^0,c
  2926   002D74  C01D  F028         	movff	_hour,___awmod@dividend
  2927   002D78  6A29               	clrf	(___awmod@dividend+1)^0,c
  2928   002D7A  0E00               	movlw	0
  2929   002D7C  6E2B               	movwf	(___awmod@divisor+1)^0,c
  2930   002D7E  0E0A               	movlw	10
  2931   002D80  6E2A               	movwf	___awmod@divisor^0,c
  2932   002D82  ECE6  F00D         	call	___awmod	;wreg free
  2933   002D86  5028               	movf	?___awmod^0,w,c
  2934   002D88  0F30               	addlw	48
  2935   002D8A  ECF5  F00A         	call	_clcd_putch
  2936   002D8E                     
  2937                           ;dashboard.c: 228:         clcd_putch((minute / 10) + '0', (0xC0 + (3)));
  2938   002D8E  0EC3               	movlw	195
  2939   002D90  6E35               	movwf	clcd_putch@addr^0,c
  2940   002D92  C01E  F028         	movff	_minute,___awdiv@dividend
  2941   002D96  6A29               	clrf	(___awdiv@dividend+1)^0,c
  2942   002D98  0E00               	movlw	0
  2943   002D9A  6E2B               	movwf	(___awdiv@divisor+1)^0,c
  2944   002D9C  0E0A               	movlw	10
  2945   002D9E  6E2A               	movwf	___awdiv@divisor^0,c
  2946   002DA0  EC3E  F00E         	call	___awdiv	;wreg free
  2947   002DA4  5028               	movf	?___awdiv^0,w,c
  2948   002DA6  0F30               	addlw	48
  2949   002DA8  ECF5  F00A         	call	_clcd_putch
  2950   002DAC                     
  2951                           ;dashboard.c: 229:         clcd_putch((minute % 10) + '0', (0xC0 + (4)));
  2952   002DAC  0EC4               	movlw	196
  2953   002DAE  6E35               	movwf	clcd_putch@addr^0,c
  2954   002DB0  C01E  F028         	movff	_minute,___awmod@dividend
  2955   002DB4  6A29               	clrf	(___awmod@dividend+1)^0,c
  2956   002DB6  0E00               	movlw	0
  2957   002DB8  6E2B               	movwf	(___awmod@divisor+1)^0,c
  2958   002DBA  0E0A               	movlw	10
  2959   002DBC  6E2A               	movwf	___awmod@divisor^0,c
  2960   002DBE  ECE6  F00D         	call	___awmod	;wreg free
  2961   002DC2  5028               	movf	?___awmod^0,w,c
  2962   002DC4  0F30               	addlw	48
  2963   002DC6  ECF5  F00A         	call	_clcd_putch
  2964   002DCA                     l3248:
  2965                           
  2966                           ;dashboard.c: 232:      if(key == 11)
  2967   002DCA  0E0B               	movlw	11
  2968   002DCC  181A               	xorwf	_key^0,w,c
  2969   002DCE  A4D8               	btfss	status,2,c
  2970   002DD0  EFEC  F016         	goto	u2191
  2971   002DD4  EFEE  F016         	goto	u2190
  2972   002DD8                     u2191:
  2973   002DD8  EFF9  F016         	goto	l3256
  2974   002DDC                     u2190:
  2975   002DDC                     
  2976                           ;dashboard.c: 233:     {;dashboard.c: 234:         Jay =1;
  2977   002DDC  0E00               	movlw	0
  2978   002DDE  6E11               	movwf	(_Jay+1)^0,c
  2979   002DE0  0E01               	movlw	1
  2980   002DE2  6E10               	movwf	_Jay^0,c
  2981   002DE4                     
  2982                           ;dashboard.c: 235:         clcd_write(0x01, 0);
  2983   002DE4  0E00               	movlw	0
  2984   002DE6  6E28               	movwf	clcd_write@control_bit^0,c
  2985   002DE8  0E01               	movlw	1
  2986   002DEA  EC9A  F00B         	call	_clcd_write
  2987   002DEE                     
  2988                           ;dashboard.c: 236:         state = e_main_menu;
  2989   002DEE  0E01               	movlw	1
  2990   002DF0  6E19               	movwf	_state^0,c
  2991   002DF2                     l3256:
  2992                           
  2993                           ;dashboard.c: 238:     if (Jay == 1) {
  2994   002DF2  0410               	decf	_Jay^0,w,c
  2995   002DF4  1011               	iorwf	(_Jay+1)^0,w,c
  2996   002DF6  A4D8               	btfss	status,2,c
  2997   002DF8  EF00  F017         	goto	u2201
  2998   002DFC  EF02  F017         	goto	u2200
  2999   002E00                     u2201:
  3000   002E00  EF6E  F017         	goto	l221
  3001   002E04                     u2200:
  3002   002E04                     
  3003                           ;dashboard.c: 239:         unsigned char hr = ((hour / 10) << 4) | (hour % 10);
  3004   002E04  C01D  F028         	movff	_hour,___awmod@dividend
  3005   002E08  6A29               	clrf	(___awmod@dividend+1)^0,c
  3006   002E0A  0E00               	movlw	0
  3007   002E0C  6E2B               	movwf	(___awmod@divisor+1)^0,c
  3008   002E0E  0E0A               	movlw	10
  3009   002E10  6E2A               	movwf	___awmod@divisor^0,c
  3010   002E12  ECE6  F00D         	call	___awmod	;wreg free
  3011   002E16  C028  F037         	movff	?___awmod,??_set_time
  3012   002E1A  C029  F038         	movff	?___awmod+1,??_set_time+1
  3013   002E1E  C01D  F028         	movff	_hour,___awdiv@dividend
  3014   002E22  6A29               	clrf	(___awdiv@dividend+1)^0,c
  3015   002E24  0E00               	movlw	0
  3016   002E26  6E2B               	movwf	(___awdiv@divisor+1)^0,c
  3017   002E28  0E0A               	movlw	10
  3018   002E2A  6E2A               	movwf	___awdiv@divisor^0,c
  3019   002E2C  EC3E  F00E         	call	___awdiv	;wreg free
  3020   002E30  3828               	swapf	?___awdiv^0,w,c
  3021   002E32  0BF0               	andlw	240
  3022   002E34  1037               	iorwf	??_set_time^0,w,c
  3023   002E36  6E39               	movwf	set_time@hr^0,c
  3024                           
  3025                           ;dashboard.c: 240:         unsigned char min = ((minute / 10) << 4) | (minute % 10);
  3026   002E38  C01E  F028         	movff	_minute,___awmod@dividend
  3027   002E3C  6A29               	clrf	(___awmod@dividend+1)^0,c
  3028   002E3E  0E00               	movlw	0
  3029   002E40  6E2B               	movwf	(___awmod@divisor+1)^0,c
  3030   002E42  0E0A               	movlw	10
  3031   002E44  6E2A               	movwf	___awmod@divisor^0,c
  3032   002E46  ECE6  F00D         	call	___awmod	;wreg free
  3033   002E4A  C028  F037         	movff	?___awmod,??_set_time
  3034   002E4E  C029  F038         	movff	?___awmod+1,??_set_time+1
  3035   002E52  C01E  F028         	movff	_minute,___awdiv@dividend
  3036   002E56  6A29               	clrf	(___awdiv@dividend+1)^0,c
  3037   002E58  0E00               	movlw	0
  3038   002E5A  6E2B               	movwf	(___awdiv@divisor+1)^0,c
  3039   002E5C  0E0A               	movlw	10
  3040   002E5E  6E2A               	movwf	___awdiv@divisor^0,c
  3041   002E60  EC3E  F00E         	call	___awdiv	;wreg free
  3042   002E64  3828               	swapf	?___awdiv^0,w,c
  3043   002E66  0BF0               	andlw	240
  3044   002E68  1037               	iorwf	??_set_time^0,w,c
  3045   002E6A  6E3A               	movwf	set_time@min^0,c
  3046                           
  3047                           ;dashboard.c: 241:         unsigned char sec = ((second / 10) << 4) | (second % 10);
  3048   002E6C  C01C  F028         	movff	_second,___awmod@dividend
  3049   002E70  6A29               	clrf	(___awmod@dividend+1)^0,c
  3050   002E72  0E00               	movlw	0
  3051   002E74  6E2B               	movwf	(___awmod@divisor+1)^0,c
  3052   002E76  0E0A               	movlw	10
  3053   002E78  6E2A               	movwf	___awmod@divisor^0,c
  3054   002E7A  ECE6  F00D         	call	___awmod	;wreg free
  3055   002E7E  C028  F037         	movff	?___awmod,??_set_time
  3056   002E82  C029  F038         	movff	?___awmod+1,??_set_time+1
  3057   002E86  C01C  F028         	movff	_second,___awdiv@dividend
  3058   002E8A  6A29               	clrf	(___awdiv@dividend+1)^0,c
  3059   002E8C  0E00               	movlw	0
  3060   002E8E  6E2B               	movwf	(___awdiv@divisor+1)^0,c
  3061   002E90  0E0A               	movlw	10
  3062   002E92  6E2A               	movwf	___awdiv@divisor^0,c
  3063   002E94  EC3E  F00E         	call	___awdiv	;wreg free
  3064   002E98  3828               	swapf	?___awdiv^0,w,c
  3065   002E9A  0BF0               	andlw	240
  3066   002E9C  1037               	iorwf	??_set_time^0,w,c
  3067   002E9E  6E3B               	movwf	set_time@sec^0,c
  3068   002EA0                     
  3069                           ;dashboard.c: 242:         write_DS1307(0x02, hr);
  3070   002EA0  C039  F029         	movff	set_time@hr,write_DS1307@data
  3071   002EA4  0E02               	movlw	2
  3072   002EA6  EC0D  F00B         	call	_write_DS1307
  3073   002EAA                     
  3074                           ;dashboard.c: 243:         write_DS1307(0x01, min);
  3075   002EAA  C03A  F029         	movff	set_time@min,write_DS1307@data
  3076   002EAE  0E01               	movlw	1
  3077   002EB0  EC0D  F00B         	call	_write_DS1307
  3078   002EB4                     
  3079                           ;dashboard.c: 244:         write_DS1307(0x00, sec);
  3080   002EB4  C03B  F029         	movff	set_time@sec,write_DS1307@data
  3081   002EB8  0E00               	movlw	0
  3082   002EBA  EC0D  F00B         	call	_write_DS1307
  3083   002EBE                     
  3084                           ;dashboard.c: 245:         state = e_dashboard;
  3085   002EBE  0E00               	movlw	0
  3086   002EC0  6E19               	movwf	_state^0,c
  3087   002EC2                     
  3088                           ;dashboard.c: 246:         clcd_write(0x01, 0);
  3089   002EC2  0E00               	movlw	0
  3090   002EC4  6E28               	movwf	clcd_write@control_bit^0,c
  3091   002EC6  0E01               	movlw	1
  3092   002EC8  EC9A  F00B         	call	_clcd_write
  3093   002ECC                     
  3094                           ;dashboard.c: 247:         Jay = 0;
  3095   002ECC  0E00               	movlw	0
  3096   002ECE  6E11               	movwf	(_Jay+1)^0,c
  3097   002ED0  0E00               	movlw	0
  3098   002ED2  6E10               	movwf	_Jay^0,c
  3099   002ED4                     
  3100                           ;dashboard.c: 248:         flag = 0;
  3101   002ED4  0E00               	movlw	0
  3102   002ED6  6E0D               	movwf	(_flag+1)^0,c
  3103   002ED8  0E00               	movlw	0
  3104   002EDA  6E0C               	movwf	_flag^0,c
  3105   002EDC                     l221:
  3106   002EDC  0012               	return		;funcret
  3107   002EDE                     __end_of_set_time:
  3108                           	callstack 0
  3109                           
  3110 ;; *************** function ___awmod *****************
  3111 ;; Defined at:
  3112 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;  dividend        2    0[COMRAM] int 
  3115 ;;  divisor         2    2[COMRAM] int 
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;  sign            1    5[COMRAM] unsigned char 
  3118 ;;  counter         1    4[COMRAM] unsigned char 
  3119 ;; Return value:  Size  Location     Type
  3120 ;;                  2    0[COMRAM] int 
  3121 ;; Registers used:
  3122 ;;		wreg, status,2, status,0
  3123 ;; Tracked objects:
  3124 ;;		On entry : 0/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3128 ;;      Params:         4       0       0       0       0       0       0
  3129 ;;      Locals:         2       0       0       0       0       0       0
  3130 ;;      Temps:          0       0       0       0       0       0       0
  3131 ;;      Totals:         6       0       0       0       0       0       0
  3132 ;;Total ram usage:        6 bytes
  3133 ;; Hardware stack levels used: 1
  3134 ;; This function calls:
  3135 ;;		Nothing
  3136 ;; This function is called by:
  3137 ;;		_set_time
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141                           	psect	text10
  3142   001BCC                     __ptext10:
  3143                           	callstack 0
  3144   001BCC                     ___awmod:
  3145                           	callstack 29
  3146   001BCC  0E00               	movlw	0
  3147   001BCE  6E2D               	movwf	___awmod@sign^0,c
  3148   001BD0  BE29               	btfsc	(___awmod@dividend+1)^0,7,c
  3149   001BD2  EFEF  F00D         	goto	u1600
  3150   001BD6  EFED  F00D         	goto	u1601
  3151   001BDA                     u1601:
  3152   001BDA  EFF5  F00D         	goto	l2838
  3153   001BDE                     u1600:
  3154   001BDE  6C28               	negf	___awmod@dividend^0,c
  3155   001BE0  1E29               	comf	(___awmod@dividend+1)^0,f,c
  3156   001BE2  B0D8               	btfsc	status,0,c
  3157   001BE4  2A29               	incf	(___awmod@dividend+1)^0,f,c
  3158   001BE6  0E01               	movlw	1
  3159   001BE8  6E2D               	movwf	___awmod@sign^0,c
  3160   001BEA                     l2838:
  3161   001BEA  BE2B               	btfsc	(___awmod@divisor+1)^0,7,c
  3162   001BEC  EFFC  F00D         	goto	u1610
  3163   001BF0  EFFA  F00D         	goto	u1611
  3164   001BF4                     u1611:
  3165   001BF4  EF00  F00E         	goto	l2842
  3166   001BF8                     u1610:
  3167   001BF8  6C2A               	negf	___awmod@divisor^0,c
  3168   001BFA  1E2B               	comf	(___awmod@divisor+1)^0,f,c
  3169   001BFC  B0D8               	btfsc	status,0,c
  3170   001BFE  2A2B               	incf	(___awmod@divisor+1)^0,f,c
  3171   001C00                     l2842:
  3172   001C00  502A               	movf	___awmod@divisor^0,w,c
  3173   001C02  102B               	iorwf	(___awmod@divisor+1)^0,w,c
  3174   001C04  B4D8               	btfsc	status,2,c
  3175   001C06  EF07  F00E         	goto	u1621
  3176   001C0A  EF09  F00E         	goto	u1620
  3177   001C0E                     u1621:
  3178   001C0E  EF2D  F00E         	goto	l2858
  3179   001C12                     u1620:
  3180   001C12  0E01               	movlw	1
  3181   001C14  6E2C               	movwf	___awmod@counter^0,c
  3182   001C16  EF11  F00E         	goto	l2848
  3183   001C1A                     l2846:
  3184   001C1A  90D8               	bcf	status,0,c
  3185   001C1C  362A               	rlcf	___awmod@divisor^0,f,c
  3186   001C1E  362B               	rlcf	(___awmod@divisor+1)^0,f,c
  3187   001C20  2A2C               	incf	___awmod@counter^0,f,c
  3188   001C22                     l2848:
  3189   001C22  AE2B               	btfss	(___awmod@divisor+1)^0,7,c
  3190   001C24  EF16  F00E         	goto	u1631
  3191   001C28  EF18  F00E         	goto	u1630
  3192   001C2C                     u1631:
  3193   001C2C  EF0D  F00E         	goto	l2846
  3194   001C30                     u1630:
  3195   001C30                     l2850:
  3196   001C30  502A               	movf	___awmod@divisor^0,w,c
  3197   001C32  5C28               	subwf	___awmod@dividend^0,w,c
  3198   001C34  502B               	movf	(___awmod@divisor+1)^0,w,c
  3199   001C36  5829               	subwfb	(___awmod@dividend+1)^0,w,c
  3200   001C38  A0D8               	btfss	status,0,c
  3201   001C3A  EF21  F00E         	goto	u1641
  3202   001C3E  EF23  F00E         	goto	u1640
  3203   001C42                     u1641:
  3204   001C42  EF27  F00E         	goto	l2854
  3205   001C46                     u1640:
  3206   001C46  502A               	movf	___awmod@divisor^0,w,c
  3207   001C48  5E28               	subwf	___awmod@dividend^0,f,c
  3208   001C4A  502B               	movf	(___awmod@divisor+1)^0,w,c
  3209   001C4C  5A29               	subwfb	(___awmod@dividend+1)^0,f,c
  3210   001C4E                     l2854:
  3211   001C4E  90D8               	bcf	status,0,c
  3212   001C50  322B               	rrcf	(___awmod@divisor+1)^0,f,c
  3213   001C52  322A               	rrcf	___awmod@divisor^0,f,c
  3214   001C54  2E2C               	decfsz	___awmod@counter^0,f,c
  3215   001C56  EF18  F00E         	goto	l2850
  3216   001C5A                     l2858:
  3217   001C5A  502D               	movf	___awmod@sign^0,w,c
  3218   001C5C  B4D8               	btfsc	status,2,c
  3219   001C5E  EF33  F00E         	goto	u1651
  3220   001C62  EF35  F00E         	goto	u1650
  3221   001C66                     u1651:
  3222   001C66  EF39  F00E         	goto	l2862
  3223   001C6A                     u1650:
  3224   001C6A  6C28               	negf	___awmod@dividend^0,c
  3225   001C6C  1E29               	comf	(___awmod@dividend+1)^0,f,c
  3226   001C6E  B0D8               	btfsc	status,0,c
  3227   001C70  2A29               	incf	(___awmod@dividend+1)^0,f,c
  3228   001C72                     l2862:
  3229   001C72  C028  F028         	movff	___awmod@dividend,?___awmod
  3230   001C76  C029  F029         	movff	___awmod@dividend+1,?___awmod+1
  3231   001C7A  0012               	return		;funcret
  3232   001C7C                     __end_of___awmod:
  3233                           	callstack 0
  3234                           
  3235 ;; *************** function ___awdiv *****************
  3236 ;; Defined at:
  3237 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;  dividend        2    0[COMRAM] int 
  3240 ;;  divisor         2    2[COMRAM] int 
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;  quotient        2    6[COMRAM] int 
  3243 ;;  sign            1    5[COMRAM] unsigned char 
  3244 ;;  counter         1    4[COMRAM] unsigned char 
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  2    0[COMRAM] int 
  3247 ;; Registers used:
  3248 ;;		wreg, status,2, status,0
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3254 ;;      Params:         4       0       0       0       0       0       0
  3255 ;;      Locals:         4       0       0       0       0       0       0
  3256 ;;      Temps:          0       0       0       0       0       0       0
  3257 ;;      Totals:         8       0       0       0       0       0       0
  3258 ;;Total ram usage:        8 bytes
  3259 ;; Hardware stack levels used: 1
  3260 ;; This function calls:
  3261 ;;		Nothing
  3262 ;; This function is called by:
  3263 ;;		_set_time
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267                           	psect	text11
  3268   001C7C                     __ptext11:
  3269                           	callstack 0
  3270   001C7C                     ___awdiv:
  3271                           	callstack 29
  3272   001C7C  0E00               	movlw	0
  3273   001C7E  6E2D               	movwf	___awdiv@sign^0,c
  3274   001C80  BE2B               	btfsc	(___awdiv@divisor+1)^0,7,c
  3275   001C82  EF47  F00E         	goto	u1540
  3276   001C86  EF45  F00E         	goto	u1541
  3277   001C8A                     u1541:
  3278   001C8A  EF4D  F00E         	goto	l2794
  3279   001C8E                     u1540:
  3280   001C8E  6C2A               	negf	___awdiv@divisor^0,c
  3281   001C90  1E2B               	comf	(___awdiv@divisor+1)^0,f,c
  3282   001C92  B0D8               	btfsc	status,0,c
  3283   001C94  2A2B               	incf	(___awdiv@divisor+1)^0,f,c
  3284   001C96  0E01               	movlw	1
  3285   001C98  6E2D               	movwf	___awdiv@sign^0,c
  3286   001C9A                     l2794:
  3287   001C9A  BE29               	btfsc	(___awdiv@dividend+1)^0,7,c
  3288   001C9C  EF54  F00E         	goto	u1550
  3289   001CA0  EF52  F00E         	goto	u1551
  3290   001CA4                     u1551:
  3291   001CA4  EF5A  F00E         	goto	l2800
  3292   001CA8                     u1550:
  3293   001CA8  6C28               	negf	___awdiv@dividend^0,c
  3294   001CAA  1E29               	comf	(___awdiv@dividend+1)^0,f,c
  3295   001CAC  B0D8               	btfsc	status,0,c
  3296   001CAE  2A29               	incf	(___awdiv@dividend+1)^0,f,c
  3297   001CB0  0E01               	movlw	1
  3298   001CB2  1A2D               	xorwf	___awdiv@sign^0,f,c
  3299   001CB4                     l2800:
  3300   001CB4  0E00               	movlw	0
  3301   001CB6  6E2F               	movwf	(___awdiv@quotient+1)^0,c
  3302   001CB8  0E00               	movlw	0
  3303   001CBA  6E2E               	movwf	___awdiv@quotient^0,c
  3304   001CBC  502A               	movf	___awdiv@divisor^0,w,c
  3305   001CBE  102B               	iorwf	(___awdiv@divisor+1)^0,w,c
  3306   001CC0  B4D8               	btfsc	status,2,c
  3307   001CC2  EF65  F00E         	goto	u1561
  3308   001CC6  EF67  F00E         	goto	u1560
  3309   001CCA                     u1561:
  3310   001CCA  EF8F  F00E         	goto	l2822
  3311   001CCE                     u1560:
  3312   001CCE  0E01               	movlw	1
  3313   001CD0  6E2C               	movwf	___awdiv@counter^0,c
  3314   001CD2  EF6F  F00E         	goto	l2808
  3315   001CD6                     l2806:
  3316   001CD6  90D8               	bcf	status,0,c
  3317   001CD8  362A               	rlcf	___awdiv@divisor^0,f,c
  3318   001CDA  362B               	rlcf	(___awdiv@divisor+1)^0,f,c
  3319   001CDC  2A2C               	incf	___awdiv@counter^0,f,c
  3320   001CDE                     l2808:
  3321   001CDE  AE2B               	btfss	(___awdiv@divisor+1)^0,7,c
  3322   001CE0  EF74  F00E         	goto	u1571
  3323   001CE4  EF76  F00E         	goto	u1570
  3324   001CE8                     u1571:
  3325   001CE8  EF6B  F00E         	goto	l2806
  3326   001CEC                     u1570:
  3327   001CEC                     l2810:
  3328   001CEC  90D8               	bcf	status,0,c
  3329   001CEE  362E               	rlcf	___awdiv@quotient^0,f,c
  3330   001CF0  362F               	rlcf	(___awdiv@quotient+1)^0,f,c
  3331   001CF2  502A               	movf	___awdiv@divisor^0,w,c
  3332   001CF4  5C28               	subwf	___awdiv@dividend^0,w,c
  3333   001CF6  502B               	movf	(___awdiv@divisor+1)^0,w,c
  3334   001CF8  5829               	subwfb	(___awdiv@dividend+1)^0,w,c
  3335   001CFA  A0D8               	btfss	status,0,c
  3336   001CFC  EF82  F00E         	goto	u1581
  3337   001D00  EF84  F00E         	goto	u1580
  3338   001D04                     u1581:
  3339   001D04  EF89  F00E         	goto	l2818
  3340   001D08                     u1580:
  3341   001D08  502A               	movf	___awdiv@divisor^0,w,c
  3342   001D0A  5E28               	subwf	___awdiv@dividend^0,f,c
  3343   001D0C  502B               	movf	(___awdiv@divisor+1)^0,w,c
  3344   001D0E  5A29               	subwfb	(___awdiv@dividend+1)^0,f,c
  3345   001D10  802E               	bsf	___awdiv@quotient^0,0,c
  3346   001D12                     l2818:
  3347   001D12  90D8               	bcf	status,0,c
  3348   001D14  322B               	rrcf	(___awdiv@divisor+1)^0,f,c
  3349   001D16  322A               	rrcf	___awdiv@divisor^0,f,c
  3350   001D18  2E2C               	decfsz	___awdiv@counter^0,f,c
  3351   001D1A  EF76  F00E         	goto	l2810
  3352   001D1E                     l2822:
  3353   001D1E  502D               	movf	___awdiv@sign^0,w,c
  3354   001D20  B4D8               	btfsc	status,2,c
  3355   001D22  EF95  F00E         	goto	u1591
  3356   001D26  EF97  F00E         	goto	u1590
  3357   001D2A                     u1591:
  3358   001D2A  EF9B  F00E         	goto	l2826
  3359   001D2E                     u1590:
  3360   001D2E  6C2E               	negf	___awdiv@quotient^0,c
  3361   001D30  1E2F               	comf	(___awdiv@quotient+1)^0,f,c
  3362   001D32  B0D8               	btfsc	status,0,c
  3363   001D34  2A2F               	incf	(___awdiv@quotient+1)^0,f,c
  3364   001D36                     l2826:
  3365   001D36  C02E  F028         	movff	___awdiv@quotient,?___awdiv
  3366   001D3A  C02F  F029         	movff	___awdiv@quotient+1,?___awdiv+1
  3367   001D3E  0012               	return		;funcret
  3368   001D40                     __end_of___awdiv:
  3369                           	callstack 0
  3370                           
  3371 ;; *************** function _read_switches *****************
  3372 ;; Defined at:
  3373 ;;		line 88 in file "matrix_keypad.c"
  3374 ;; Parameters:    Size  Location     Type
  3375 ;;  detection_ty    1    wreg     unsigned char 
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;  detection_ty    1    0[COMRAM] unsigned char 
  3378 ;; Return value:  Size  Location     Type
  3379 ;;                  1    wreg      unsigned char 
  3380 ;; Registers used:
  3381 ;;		wreg, status,2, status,0, cstack
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3387 ;;      Params:         0       0       0       0       0       0       0
  3388 ;;      Locals:         1       0       0       0       0       0       0
  3389 ;;      Temps:          0       0       0       0       0       0       0
  3390 ;;      Totals:         1       0       0       0       0       0       0
  3391 ;;Total ram usage:        1 bytes
  3392 ;; Hardware stack levels used: 1
  3393 ;; Hardware stack levels required when called: 1
  3394 ;; This function calls:
  3395 ;;		_scan_key
  3396 ;; This function is called by:
  3397 ;;		_main
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           	psect	text12
  3402   001A2E                     __ptext12:
  3403                           	callstack 0
  3404   001A2E                     _read_switches:
  3405                           	callstack 29
  3406                           
  3407                           ;incstack = 0
  3408                           ;read_switches@detection_type stored from wreg
  3409   001A2E  6E28               	movwf	read_switches@detection_type^0,c
  3410   001A30                     
  3411                           ;matrix_keypad.c: 88: unsigned char read_switches(unsigned char detection_type);matrix_k
      +                          eypad.c: 89: {;matrix_keypad.c: 90:  static unsigned char once = 1, key;;matrix_keypad.c
      +                          : 92:  if (detection_type == 1)
  3412   001A30  0428               	decf	read_switches@detection_type^0,w,c
  3413   001A32  A4D8               	btfss	status,2,c
  3414   001A34  EF1E  F00D         	goto	u581
  3415   001A38  EF20  F00D         	goto	u580
  3416   001A3C                     u581:
  3417   001A3C  EF44  F00D         	goto	l2030
  3418   001A40                     u580:
  3419   001A40                     
  3420                           ;matrix_keypad.c: 93:  {;matrix_keypad.c: 94:   key = scan_key();
  3421   001A40  ECA0  F00E         	call	_scan_key	;wreg free
  3422   001A44  6E18               	movwf	read_switches@key^0,c
  3423   001A46                     
  3424                           ;matrix_keypad.c: 95:   if(key != 0xFF && once )
  3425   001A46  2818               	incf	read_switches@key^0,w,c
  3426   001A48  B4D8               	btfsc	status,2,c
  3427   001A4A  EF29  F00D         	goto	u591
  3428   001A4E  EF2B  F00D         	goto	u590
  3429   001A52                     u591:
  3430   001A52  EF38  F00D         	goto	l2026
  3431   001A56                     u590:
  3432   001A56  5051               	movf	read_switches@once^0,w,c
  3433   001A58  B4D8               	btfsc	status,2,c
  3434   001A5A  EF31  F00D         	goto	u601
  3435   001A5E  EF33  F00D         	goto	u600
  3436   001A62                     u601:
  3437   001A62  EF38  F00D         	goto	l2026
  3438   001A66                     u600:
  3439   001A66                     
  3440                           ;matrix_keypad.c: 96:   {;matrix_keypad.c: 97:    once = 0;
  3441   001A66  0E00               	movlw	0
  3442   001A68  6E51               	movwf	read_switches@once^0,c
  3443                           
  3444                           ;matrix_keypad.c: 98:    return key;
  3445   001A6A  5018               	movf	read_switches@key^0,w,c
  3446   001A6C  EF51  F00D         	goto	l302
  3447   001A70                     l2026:
  3448   001A70  2818               	incf	read_switches@key^0,w,c
  3449   001A72  A4D8               	btfss	status,2,c
  3450   001A74  EF3E  F00D         	goto	u611
  3451   001A78  EF40  F00D         	goto	u610
  3452   001A7C                     u611:
  3453   001A7C  EF50  F00D         	goto	l2036
  3454   001A80                     u610:
  3455   001A80                     
  3456                           ;matrix_keypad.c: 101:   {;matrix_keypad.c: 102:    once = 1;
  3457   001A80  0E01               	movlw	1
  3458   001A82  6E51               	movwf	read_switches@once^0,c
  3459   001A84  EF50  F00D         	goto	l2036
  3460   001A88                     l2030:
  3461   001A88  5028               	movf	read_switches@detection_type^0,w,c
  3462   001A8A  A4D8               	btfss	status,2,c
  3463   001A8C  EF4A  F00D         	goto	u621
  3464   001A90  EF4C  F00D         	goto	u620
  3465   001A94                     u621:
  3466   001A94  EF50  F00D         	goto	l2036
  3467   001A98                     u620:
  3468   001A98                     
  3469                           ;matrix_keypad.c: 106:  {;matrix_keypad.c: 107:   return scan_key();
  3470   001A98  ECA0  F00E         	call	_scan_key	;wreg free
  3471   001A9C  EF51  F00D         	goto	l302
  3472   001AA0                     l2036:
  3473                           
  3474                           ;matrix_keypad.c: 110:  return 0xFF;
  3475   001AA0  0EFF               	movlw	255
  3476   001AA2                     l302:
  3477   001AA2  0012               	return		;funcret
  3478   001AA4                     __end_of_read_switches:
  3479                           	callstack 0
  3480                           
  3481 ;; *************** function _scan_key *****************
  3482 ;; Defined at:
  3483 ;;		line 18 in file "matrix_keypad.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;		None
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;		None
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  1    wreg      unsigned char 
  3490 ;; Registers used:
  3491 ;;		wreg
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3497 ;;      Params:         0       0       0       0       0       0       0
  3498 ;;      Locals:         0       0       0       0       0       0       0
  3499 ;;      Temps:          0       0       0       0       0       0       0
  3500 ;;      Totals:         0       0       0       0       0       0       0
  3501 ;;Total ram usage:        0 bytes
  3502 ;; Hardware stack levels used: 1
  3503 ;; This function calls:
  3504 ;;		Nothing
  3505 ;; This function is called by:
  3506 ;;		_read_switches
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           	psect	text13
  3511   001D40                     __ptext13:
  3512                           	callstack 0
  3513   001D40                     _scan_key:
  3514                           	callstack 29
  3515   001D40                     
  3516                           ;matrix_keypad.c: 20:  PORTBbits.RB5 = 0;
  3517   001D40  9A81               	bcf	129,5,c	;volatile
  3518                           
  3519                           ;matrix_keypad.c: 21:  PORTBbits.RB6 = 1;
  3520   001D42  8C81               	bsf	129,6,c	;volatile
  3521                           
  3522                           ;matrix_keypad.c: 22:  PORTBbits.RB7 = 1;
  3523   001D44  8E81               	bsf	129,7,c	;volatile
  3524                           
  3525                           ;matrix_keypad.c: 24:  if (PORTBbits.RB1 == 0)
  3526   001D46  B281               	btfsc	129,1,c	;volatile
  3527   001D48  EFA8  F00E         	goto	u331
  3528   001D4C  EFAA  F00E         	goto	u330
  3529   001D50                     u331:
  3530   001D50  EFAD  F00E         	goto	l272
  3531   001D54                     u330:
  3532   001D54                     
  3533                           ;matrix_keypad.c: 25:  {;matrix_keypad.c: 26:   return 1;
  3534   001D54  0E01               	movlw	1
  3535   001D56  EF23  F00F         	goto	l273
  3536   001D5A                     l272:
  3537   001D5A  B481               	btfsc	129,2,c	;volatile
  3538   001D5C  EFB2  F00E         	goto	u341
  3539   001D60  EFB4  F00E         	goto	u340
  3540   001D64                     u341:
  3541   001D64  EFB7  F00E         	goto	l275
  3542   001D68                     u340:
  3543   001D68                     
  3544                           ;matrix_keypad.c: 29:  {;matrix_keypad.c: 30:   return 4;
  3545   001D68  0E04               	movlw	4
  3546   001D6A  EF23  F00F         	goto	l273
  3547   001D6E                     l275:
  3548   001D6E  B681               	btfsc	129,3,c	;volatile
  3549   001D70  EFBC  F00E         	goto	u351
  3550   001D74  EFBE  F00E         	goto	u350
  3551   001D78                     u351:
  3552   001D78  EFC1  F00E         	goto	l277
  3553   001D7C                     u350:
  3554   001D7C                     
  3555                           ;matrix_keypad.c: 33:  {;matrix_keypad.c: 34:   return 7;
  3556   001D7C  0E07               	movlw	7
  3557   001D7E  EF23  F00F         	goto	l273
  3558   001D82                     l277:
  3559   001D82  B881               	btfsc	129,4,c	;volatile
  3560   001D84  EFC6  F00E         	goto	u361
  3561   001D88  EFC8  F00E         	goto	u360
  3562   001D8C                     u361:
  3563   001D8C  EFCB  F00E         	goto	l274
  3564   001D90                     u360:
  3565   001D90                     
  3566                           ;matrix_keypad.c: 37:  {;matrix_keypad.c: 38:   return 10;
  3567   001D90  0E0A               	movlw	10
  3568   001D92  EF23  F00F         	goto	l273
  3569   001D96                     l274:
  3570                           
  3571                           ;matrix_keypad.c: 41:  PORTBbits.RB5 = 1;
  3572   001D96  8A81               	bsf	129,5,c	;volatile
  3573                           
  3574                           ;matrix_keypad.c: 42:  PORTBbits.RB6 = 0;
  3575   001D98  9C81               	bcf	129,6,c	;volatile
  3576                           
  3577                           ;matrix_keypad.c: 43:  PORTBbits.RB7 = 1;
  3578   001D9A  8E81               	bsf	129,7,c	;volatile
  3579                           
  3580                           ;matrix_keypad.c: 45:  if (PORTBbits.RB1 == 0)
  3581   001D9C  B281               	btfsc	129,1,c	;volatile
  3582   001D9E  EFD3  F00E         	goto	u371
  3583   001DA2  EFD5  F00E         	goto	u370
  3584   001DA6                     u371:
  3585   001DA6  EFD8  F00E         	goto	l280
  3586   001DAA                     u370:
  3587   001DAA                     
  3588                           ;matrix_keypad.c: 46:  {;matrix_keypad.c: 47:   return 2;
  3589   001DAA  0E02               	movlw	2
  3590   001DAC  EF23  F00F         	goto	l273
  3591   001DB0                     l280:
  3592   001DB0  B481               	btfsc	129,2,c	;volatile
  3593   001DB2  EFDD  F00E         	goto	u381
  3594   001DB6  EFDF  F00E         	goto	u380
  3595   001DBA                     u381:
  3596   001DBA  EFE2  F00E         	goto	l282
  3597   001DBE                     u380:
  3598   001DBE                     
  3599                           ;matrix_keypad.c: 50:  {;matrix_keypad.c: 51:   return 5;
  3600   001DBE  0E05               	movlw	5
  3601   001DC0  EF23  F00F         	goto	l273
  3602   001DC4                     l282:
  3603   001DC4  B681               	btfsc	129,3,c	;volatile
  3604   001DC6  EFE7  F00E         	goto	u391
  3605   001DCA  EFE9  F00E         	goto	u390
  3606   001DCE                     u391:
  3607   001DCE  EFEC  F00E         	goto	l284
  3608   001DD2                     u390:
  3609   001DD2                     
  3610                           ;matrix_keypad.c: 54:  {;matrix_keypad.c: 55:   return 8;
  3611   001DD2  0E08               	movlw	8
  3612   001DD4  EF23  F00F         	goto	l273
  3613   001DD8                     l284:
  3614   001DD8  B881               	btfsc	129,4,c	;volatile
  3615   001DDA  EFF1  F00E         	goto	u401
  3616   001DDE  EFF3  F00E         	goto	u400
  3617   001DE2                     u401:
  3618   001DE2  EFF6  F00E         	goto	l281
  3619   001DE6                     u400:
  3620   001DE6                     
  3621                           ;matrix_keypad.c: 58:  {;matrix_keypad.c: 59:   return 11;
  3622   001DE6  0E0B               	movlw	11
  3623   001DE8  EF23  F00F         	goto	l273
  3624   001DEC                     l281:
  3625                           
  3626                           ;matrix_keypad.c: 62:  PORTBbits.RB5 = 1;
  3627   001DEC  8A81               	bsf	129,5,c	;volatile
  3628                           
  3629                           ;matrix_keypad.c: 63:  PORTBbits.RB6 = 1;
  3630   001DEE  8C81               	bsf	129,6,c	;volatile
  3631                           
  3632                           ;matrix_keypad.c: 64:  PORTBbits.RB7 = 0;
  3633   001DF0  9E81               	bcf	129,7,c	;volatile
  3634                           
  3635                           ;matrix_keypad.c: 66:  PORTBbits.RB7 = 0;
  3636   001DF2  9E81               	bcf	129,7,c	;volatile
  3637                           
  3638                           ;matrix_keypad.c: 68:  if (PORTBbits.RB1 == 0)
  3639   001DF4  B281               	btfsc	129,1,c	;volatile
  3640   001DF6  EFFF  F00E         	goto	u411
  3641   001DFA  EF01  F00F         	goto	u410
  3642   001DFE                     u411:
  3643   001DFE  EF04  F00F         	goto	l287
  3644   001E02                     u410:
  3645   001E02                     
  3646                           ;matrix_keypad.c: 69:  {;matrix_keypad.c: 70:   return 3;
  3647   001E02  0E03               	movlw	3
  3648   001E04  EF23  F00F         	goto	l273
  3649   001E08                     l287:
  3650   001E08  B481               	btfsc	129,2,c	;volatile
  3651   001E0A  EF09  F00F         	goto	u421
  3652   001E0E  EF0B  F00F         	goto	u420
  3653   001E12                     u421:
  3654   001E12  EF0E  F00F         	goto	l289
  3655   001E16                     u420:
  3656   001E16                     
  3657                           ;matrix_keypad.c: 73:  {;matrix_keypad.c: 74:   return 6;
  3658   001E16  0E06               	movlw	6
  3659   001E18  EF23  F00F         	goto	l273
  3660   001E1C                     l289:
  3661   001E1C  B681               	btfsc	129,3,c	;volatile
  3662   001E1E  EF13  F00F         	goto	u431
  3663   001E22  EF15  F00F         	goto	u430
  3664   001E26                     u431:
  3665   001E26  EF18  F00F         	goto	l291
  3666   001E2A                     u430:
  3667   001E2A                     
  3668                           ;matrix_keypad.c: 77:  {;matrix_keypad.c: 78:   return 9;
  3669   001E2A  0E09               	movlw	9
  3670   001E2C  EF23  F00F         	goto	l273
  3671   001E30                     l291:
  3672   001E30  B881               	btfsc	129,4,c	;volatile
  3673   001E32  EF1D  F00F         	goto	u441
  3674   001E36  EF1F  F00F         	goto	u440
  3675   001E3A                     u441:
  3676   001E3A  EF22  F00F         	goto	l290
  3677   001E3E                     u440:
  3678   001E3E                     
  3679                           ;matrix_keypad.c: 81:  {;matrix_keypad.c: 82:   return 12;
  3680   001E3E  0E0C               	movlw	12
  3681   001E40  EF23  F00F         	goto	l273
  3682   001E44                     l290:
  3683   001E44                     
  3684                           ;matrix_keypad.c: 85:  return 0xFF;
  3685   001E44  0EFF               	movlw	255
  3686   001E46                     l273:
  3687   001E46  0012               	return		;funcret
  3688   001E48                     __end_of_scan_key:
  3689                           	callstack 0
  3690                           
  3691 ;; *************** function _init_config *****************
  3692 ;; Defined at:
  3693 ;;		line 12 in file "MAIN.c"
  3694 ;; Parameters:    Size  Location     Type
  3695 ;;		None
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;		None
  3698 ;; Return value:  Size  Location     Type
  3699 ;;                  1    wreg      void 
  3700 ;; Registers used:
  3701 ;;		wreg, status,2, status,0, cstack
  3702 ;; Tracked objects:
  3703 ;;		On entry : 0/0
  3704 ;;		On exit  : 0/0
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3707 ;;      Params:         0       0       0       0       0       0       0
  3708 ;;      Locals:         0       0       0       0       0       0       0
  3709 ;;      Temps:          0       0       0       0       0       0       0
  3710 ;;      Totals:         0       0       0       0       0       0       0
  3711 ;;Total ram usage:        0 bytes
  3712 ;; Hardware stack levels used: 1
  3713 ;; Hardware stack levels required when called: 5
  3714 ;; This function calls:
  3715 ;;		_init_DS1307
  3716 ;;		_init_adc
  3717 ;;		_init_clcd
  3718 ;;		_init_i2c
  3719 ;;		_init_matrix_keypad
  3720 ;; This function is called by:
  3721 ;;		_main
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725                           	psect	text14
  3726   001638                     __ptext14:
  3727                           	callstack 0
  3728   001638                     _init_config:
  3729                           	callstack 25
  3730   001638                     
  3731                           ;MAIN.c: 14:     init_adc();
  3732   001638  EC68  F00B         	call	_init_adc	;wreg free
  3733   00163C                     
  3734                           ;MAIN.c: 15:     init_matrix_keypad();
  3735   00163C  ECDA  F00A         	call	_init_matrix_keypad	;wreg free
  3736   001640                     
  3737                           ;MAIN.c: 16:     init_clcd();
  3738   001640  EC92  F00D         	call	_init_clcd	;wreg free
  3739                           
  3740                           ;MAIN.c: 17:     init_i2c();
  3741   001644  ECC9  F00A         	call	_init_i2c	;wreg free
  3742   001648                     
  3743                           ;MAIN.c: 18:     init_DS1307();
  3744   001648  ECF7  F00B         	call	_init_DS1307	;wreg free
  3745   00164C                     
  3746                           ;MAIN.c: 19:     TRISB = 0X1E;
  3747   00164C  0E1E               	movlw	30
  3748   00164E  6E93               	movwf	147,c	;volatile
  3749   001650                     
  3750                           ;MAIN.c: 21:     state = e_dashboard;
  3751   001650  0E00               	movlw	0
  3752   001652  6E19               	movwf	_state^0,c
  3753   001654  0012               	return		;funcret
  3754   001656                     __end_of_init_config:
  3755                           	callstack 0
  3756                           
  3757 ;; *************** function _init_matrix_keypad *****************
  3758 ;; Defined at:
  3759 ;;		line 4 in file "matrix_keypad.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;		None
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;		None
  3764 ;; Return value:  Size  Location     Type
  3765 ;;                  1    wreg      void 
  3766 ;; Registers used:
  3767 ;;		wreg, status,2, status,0
  3768 ;; Tracked objects:
  3769 ;;		On entry : 0/0
  3770 ;;		On exit  : 0/0
  3771 ;;		Unchanged: 0/0
  3772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3773 ;;      Params:         0       0       0       0       0       0       0
  3774 ;;      Locals:         0       0       0       0       0       0       0
  3775 ;;      Temps:          0       0       0       0       0       0       0
  3776 ;;      Totals:         0       0       0       0       0       0       0
  3777 ;;Total ram usage:        0 bytes
  3778 ;; Hardware stack levels used: 1
  3779 ;; This function calls:
  3780 ;;		Nothing
  3781 ;; This function is called by:
  3782 ;;		_init_config
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           	psect	text15
  3787   0015B4                     __ptext15:
  3788                           	callstack 0
  3789   0015B4                     _init_matrix_keypad:
  3790                           	callstack 29
  3791   0015B4                     
  3792                           ;matrix_keypad.c: 7:  ADCON1 = 0x0F;
  3793   0015B4  0E0F               	movlw	15
  3794   0015B6  6EC1               	movwf	193,c	;volatile
  3795                           
  3796                           ;matrix_keypad.c: 10:  TRISB = 0x1E;
  3797   0015B8  0E1E               	movlw	30
  3798   0015BA  6E93               	movwf	147,c	;volatile
  3799   0015BC                     
  3800                           ;matrix_keypad.c: 13:  RBPU = 0;
  3801   0015BC  9EF1               	bcf	4081,7,c	;volatile
  3802   0015BE                     
  3803                           ;matrix_keypad.c: 15:  PORTB = PORTB | 0xE0;
  3804   0015BE  5081               	movf	129,w,c	;volatile
  3805   0015C0  09E0               	iorlw	224
  3806   0015C2  6E81               	movwf	129,c	;volatile
  3807   0015C4  0012               	return		;funcret
  3808   0015C6                     __end_of_init_matrix_keypad:
  3809                           	callstack 0
  3810                           
  3811 ;; *************** function _init_i2c *****************
  3812 ;; Defined at:
  3813 ;;		line 14 in file "i2c.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;		None
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;		None
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  1    wreg      void 
  3820 ;; Registers used:
  3821 ;;		wreg, status,2
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3827 ;;      Params:         0       0       0       0       0       0       0
  3828 ;;      Locals:         0       0       0       0       0       0       0
  3829 ;;      Temps:          0       0       0       0       0       0       0
  3830 ;;      Totals:         0       0       0       0       0       0       0
  3831 ;;Total ram usage:        0 bytes
  3832 ;; Hardware stack levels used: 1
  3833 ;; This function calls:
  3834 ;;		Nothing
  3835 ;; This function is called by:
  3836 ;;		_init_config
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	text16
  3841   001592                     __ptext16:
  3842                           	callstack 0
  3843   001592                     _init_i2c:
  3844                           	callstack 29
  3845   001592                     
  3846                           ;i2c.c: 17:  TRISC3 = 1;
  3847   001592  8694               	bsf	3988,3,c	;volatile
  3848                           
  3849                           ;i2c.c: 18:  TRISC4 = 1;
  3850   001594  8894               	bsf	3988,4,c	;volatile
  3851   001596                     
  3852                           ;i2c.c: 20:  SSPCON1 = 0x28;
  3853   001596  0E28               	movlw	40
  3854   001598  6EC6               	movwf	198,c	;volatile
  3855                           
  3856                           ;i2c.c: 22:  SSPADD = 0x31;
  3857   00159A  0E31               	movlw	49
  3858   00159C  6EC8               	movwf	200,c	;volatile
  3859   00159E                     
  3860                           ;i2c.c: 24:  CKE = 0;
  3861   00159E  9CC7               	bcf	4039,6,c	;volatile
  3862   0015A0  0012               	return		;funcret
  3863   0015A2                     __end_of_init_i2c:
  3864                           	callstack 0
  3865                           
  3866 ;; *************** function _init_clcd *****************
  3867 ;; Defined at:
  3868 ;;		line 27 in file "clcd.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;		None
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;		None
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  1    wreg      void 
  3875 ;; Registers used:
  3876 ;;		wreg, status,2, status,0, cstack
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3882 ;;      Params:         0       0       0       0       0       0       0
  3883 ;;      Locals:         0       0       0       0       0       0       0
  3884 ;;      Temps:          1       0       0       0       0       0       0
  3885 ;;      Totals:         1       0       0       0       0       0       0
  3886 ;;Total ram usage:        1 bytes
  3887 ;; Hardware stack levels used: 1
  3888 ;; Hardware stack levels required when called: 1
  3889 ;; This function calls:
  3890 ;;		_clcd_write
  3891 ;; This function is called by:
  3892 ;;		_init_config
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           	psect	text17
  3897   001B24                     __ptext17:
  3898                           	callstack 0
  3899   001B24                     _init_clcd:
  3900                           	callstack 28
  3901   001B24                     
  3902                           ;clcd.c: 30:  TRISD = 0x00;
  3903   001B24  0E00               	movlw	0
  3904   001B26  6E95               	movwf	149,c	;volatile
  3905   001B28                     
  3906                           ;clcd.c: 32:  TRISC = TRISC & 0xF8;
  3907   001B28  5094               	movf	148,w,c	;volatile
  3908   001B2A  0BF8               	andlw	248
  3909   001B2C  6E94               	movwf	148,c	;volatile
  3910   001B2E                     
  3911                           ;clcd.c: 34:  RC0 = 0;
  3912   001B2E  9082               	bcf	3970,0,c	;volatile
  3913   001B30                     
  3914                           ;clcd.c: 38:     _delay((unsigned long)((30)*(20000000/4000.0)));
  3915   001B30  0EC3               	movlw	195
  3916   001B32  6E2A               	movwf	??_init_clcd^0,c
  3917   001B34  0ECD               	movlw	205
  3918   001B36                     u2277:
  3919   001B36  2EE8               	decfsz	wreg,f,c
  3920   001B38  D7FE               	bra	u2277
  3921   001B3A  2E2A               	decfsz	??_init_clcd^0,f,c
  3922   001B3C  D7FC               	bra	u2277
  3923   001B3E  F000               	nop	
  3924   001B40                     
  3925                           ;clcd.c: 41:     clcd_write(0x33, 0 );
  3926   001B40  0E00               	movlw	0
  3927   001B42  6E28               	movwf	clcd_write@control_bit^0,c
  3928   001B44  0E33               	movlw	51
  3929   001B46  EC9A  F00B         	call	_clcd_write
  3930   001B4A                     
  3931                           ;clcd.c: 42:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  3932   001B4A  0E1B               	movlw	27
  3933   001B4C  6E2A               	movwf	??_init_clcd^0,c
  3934   001B4E  0E9E               	movlw	158
  3935   001B50                     u2287:
  3936   001B50  2EE8               	decfsz	wreg,f,c
  3937   001B52  D7FE               	bra	u2287
  3938   001B54  2E2A               	decfsz	??_init_clcd^0,f,c
  3939   001B56  D7FC               	bra	u2287
  3940   001B58  D000               	nop2	
  3941   001B5A                     
  3942                           ;clcd.c: 43:     clcd_write(0x33, 0 );
  3943   001B5A  0E00               	movlw	0
  3944   001B5C  6E28               	movwf	clcd_write@control_bit^0,c
  3945   001B5E  0E33               	movlw	51
  3946   001B60  EC9A  F00B         	call	_clcd_write
  3947   001B64                     
  3948                           ;clcd.c: 44:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3949   001B64  0EA6               	movlw	166
  3950   001B66                     u2297:
  3951   001B66  2EE8               	decfsz	wreg,f,c
  3952   001B68  D7FE               	bra	u2297
  3953   001B6A  D000               	nop2	
  3954   001B6C                     
  3955                           ;clcd.c: 45:     clcd_write(0x33, 0 );
  3956   001B6C  0E00               	movlw	0
  3957   001B6E  6E28               	movwf	clcd_write@control_bit^0,c
  3958   001B70  0E33               	movlw	51
  3959   001B72  EC9A  F00B         	call	_clcd_write
  3960   001B76                     
  3961                           ;clcd.c: 46:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  3962   001B76  D000               	nop2		;2 cycle nop
  3963   001B78  D000               	nop2		;2 cycle nop
  3964   001B7A  F000               	nop	
  3965   001B7C                     
  3966                           ;clcd.c: 48:     clcd_write(0x02, 0);
  3967   001B7C  0E00               	movlw	0
  3968   001B7E  6E28               	movwf	clcd_write@control_bit^0,c
  3969   001B80  0E02               	movlw	2
  3970   001B82  EC9A  F00B         	call	_clcd_write
  3971   001B86                     
  3972                           ;clcd.c: 49:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3973   001B86  0EA6               	movlw	166
  3974   001B88                     u2307:
  3975   001B88  2EE8               	decfsz	wreg,f,c
  3976   001B8A  D7FE               	bra	u2307
  3977   001B8C  D000               	nop2	
  3978   001B8E                     
  3979                           ;clcd.c: 50:     clcd_write(0x38, 0);
  3980   001B8E  0E00               	movlw	0
  3981   001B90  6E28               	movwf	clcd_write@control_bit^0,c
  3982   001B92  0E38               	movlw	56
  3983   001B94  EC9A  F00B         	call	_clcd_write
  3984   001B98                     
  3985                           ;clcd.c: 51:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3986   001B98  0EA6               	movlw	166
  3987   001B9A                     u2317:
  3988   001B9A  2EE8               	decfsz	wreg,f,c
  3989   001B9C  D7FE               	bra	u2317
  3990   001B9E  D000               	nop2	
  3991   001BA0                     
  3992                           ;clcd.c: 52:     clcd_write(0x01, 0);
  3993   001BA0  0E00               	movlw	0
  3994   001BA2  6E28               	movwf	clcd_write@control_bit^0,c
  3995   001BA4  0E01               	movlw	1
  3996   001BA6  EC9A  F00B         	call	_clcd_write
  3997   001BAA                     
  3998                           ;clcd.c: 53:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  3999   001BAA  0E04               	movlw	4
  4000   001BAC  6E2A               	movwf	??_init_clcd^0,c
  4001   001BAE  0E3E               	movlw	62
  4002   001BB0                     u2327:
  4003   001BB0  2EE8               	decfsz	wreg,f,c
  4004   001BB2  D7FE               	bra	u2327
  4005   001BB4  2E2A               	decfsz	??_init_clcd^0,f,c
  4006   001BB6  D7FC               	bra	u2327
  4007   001BB8                     
  4008                           ;clcd.c: 54:     clcd_write(0x0C, 0);
  4009   001BB8  0E00               	movlw	0
  4010   001BBA  6E28               	movwf	clcd_write@control_bit^0,c
  4011   001BBC  0E0C               	movlw	12
  4012   001BBE  EC9A  F00B         	call	_clcd_write
  4013   001BC2                     
  4014                           ;clcd.c: 55:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4015   001BC2  0EA6               	movlw	166
  4016   001BC4                     u2337:
  4017   001BC4  2EE8               	decfsz	wreg,f,c
  4018   001BC6  D7FE               	bra	u2337
  4019   001BC8  D000               	nop2	
  4020   001BCA  0012               	return		;funcret
  4021   001BCC                     __end_of_init_clcd:
  4022                           	callstack 0
  4023                           
  4024 ;; *************** function _init_adc *****************
  4025 ;; Defined at:
  4026 ;;		line 4 in file "adc.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;		None
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;		None
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  1    wreg      void 
  4033 ;; Registers used:
  4034 ;;		wreg, status,2
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4040 ;;      Params:         0       0       0       0       0       0       0
  4041 ;;      Locals:         0       0       0       0       0       0       0
  4042 ;;      Temps:          0       0       0       0       0       0       0
  4043 ;;      Totals:         0       0       0       0       0       0       0
  4044 ;;Total ram usage:        0 bytes
  4045 ;; Hardware stack levels used: 1
  4046 ;; This function calls:
  4047 ;;		Nothing
  4048 ;; This function is called by:
  4049 ;;		_init_config
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           	psect	text18
  4054   0016D0                     __ptext18:
  4055                           	callstack 0
  4056   0016D0                     _init_adc:
  4057                           	callstack 29
  4058   0016D0                     
  4059                           ;adc.c: 6:     CHS3 = 0;
  4060   0016D0  9AC2               	bcf	4034,5,c	;volatile
  4061                           
  4062                           ;adc.c: 7:     CHS2 = 1;
  4063   0016D2  88C2               	bsf	4034,4,c	;volatile
  4064                           
  4065                           ;adc.c: 8:     CHS1 = 0;
  4066   0016D4  96C2               	bcf	4034,3,c	;volatile
  4067                           
  4068                           ;adc.c: 9:     CHS0 = 0;
  4069   0016D6  94C2               	bcf	4034,2,c	;volatile
  4070                           
  4071                           ;adc.c: 10:     ADON = 1;
  4072   0016D8  80C2               	bsf	4034,0,c	;volatile
  4073                           
  4074                           ;adc.c: 11:     PCFG3 = 1;
  4075   0016DA  86C1               	bsf	4033,3,c	;volatile
  4076                           
  4077                           ;adc.c: 12:     PCFG2 = 0;
  4078   0016DC  94C1               	bcf	4033,2,c	;volatile
  4079                           
  4080                           ;adc.c: 13:     PCFG1 = 1;
  4081   0016DE  82C1               	bsf	4033,1,c	;volatile
  4082                           
  4083                           ;adc.c: 14:     PCFG0 = 1;
  4084   0016E0  80C1               	bsf	4033,0,c	;volatile
  4085                           
  4086                           ;adc.c: 15:     VCFG1 = 0;
  4087   0016E2  9AC1               	bcf	4033,5,c	;volatile
  4088                           
  4089                           ;adc.c: 16:     VCFG0 = 0;
  4090   0016E4  98C1               	bcf	4033,4,c	;volatile
  4091                           
  4092                           ;adc.c: 17:     ADFM =0;
  4093   0016E6  9EC0               	bcf	4032,7,c	;volatile
  4094                           
  4095                           ;adc.c: 18:     ADCS2 =0;
  4096   0016E8  94C0               	bcf	4032,2,c	;volatile
  4097                           
  4098                           ;adc.c: 19:     ADCS1 = 1;
  4099   0016EA  82C0               	bsf	4032,1,c	;volatile
  4100                           
  4101                           ;adc.c: 20:     ADCS0 = 0;
  4102   0016EC  90C0               	bcf	4032,0,c	;volatile
  4103                           
  4104                           ;adc.c: 21:     ACQT2 = 1;
  4105   0016EE  8AC0               	bsf	4032,5,c	;volatile
  4106                           
  4107                           ;adc.c: 22:     ACQT1 = 0;
  4108   0016F0  98C0               	bcf	4032,4,c	;volatile
  4109                           
  4110                           ;adc.c: 23:     ACQT0 = 0;
  4111   0016F2  96C0               	bcf	4032,3,c	;volatile
  4112   0016F4                     
  4113                           ;adc.c: 24:     ADRESH = 0X00;
  4114   0016F4  0E00               	movlw	0
  4115   0016F6  6EC4               	movwf	196,c	;volatile
  4116                           
  4117                           ;adc.c: 25:     ADRESL = 0X00;
  4118   0016F8  0E00               	movlw	0
  4119   0016FA  6EC3               	movwf	195,c	;volatile
  4120   0016FC  0012               	return		;funcret
  4121   0016FE                     __end_of_init_adc:
  4122                           	callstack 0
  4123                           
  4124 ;; *************** function _init_DS1307 *****************
  4125 ;; Defined at:
  4126 ;;		line 21 in file "DS1307.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;		None
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;  dummy           1    3[COMRAM] unsigned char 
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  1    wreg      void 
  4133 ;; Registers used:
  4134 ;;		wreg, status,2, status,0, cstack
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4140 ;;      Params:         0       0       0       0       0       0       0
  4141 ;;      Locals:         1       0       0       0       0       0       0
  4142 ;;      Temps:          0       0       0       0       0       0       0
  4143 ;;      Totals:         1       0       0       0       0       0       0
  4144 ;;Total ram usage:        1 bytes
  4145 ;; Hardware stack levels used: 1
  4146 ;; Hardware stack levels required when called: 4
  4147 ;; This function calls:
  4148 ;;		_read_DS1307
  4149 ;;		_write_DS1307
  4150 ;; This function is called by:
  4151 ;;		_init_config
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           
  4155                           	psect	text19
  4156   0017EE                     __ptext19:
  4157                           	callstack 0
  4158   0017EE                     _init_DS1307:
  4159                           	callstack 25
  4160   0017EE                     
  4161                           ;DS1307.c: 23:  unsigned char dummy;;DS1307.c: 26:  dummy = read_DS1307(0x00);
  4162   0017EE  0E00               	movlw	0
  4163   0017F0  EC53  F00B         	call	_read_DS1307
  4164   0017F4  6E2B               	movwf	init_DS1307@dummy^0,c
  4165   0017F6                     
  4166                           ;DS1307.c: 28:  write_DS1307(0x00, dummy | 0x80);
  4167   0017F6  502B               	movf	init_DS1307@dummy^0,w,c
  4168   0017F8  0980               	iorlw	128
  4169   0017FA  6E29               	movwf	write_DS1307@data^0,c
  4170   0017FC  0E00               	movlw	0
  4171   0017FE  EC0D  F00B         	call	_write_DS1307
  4172   001802                     
  4173                           ;DS1307.c: 31:  dummy = read_DS1307(0x02);
  4174   001802  0E02               	movlw	2
  4175   001804  EC53  F00B         	call	_read_DS1307
  4176   001808  6E2B               	movwf	init_DS1307@dummy^0,c
  4177                           
  4178                           ;DS1307.c: 32:  write_DS1307(0x02, dummy | 0x40);
  4179   00180A  502B               	movf	init_DS1307@dummy^0,w,c
  4180   00180C  0940               	iorlw	64
  4181   00180E  6E29               	movwf	write_DS1307@data^0,c
  4182   001810  0E02               	movlw	2
  4183   001812  EC0D  F00B         	call	_write_DS1307
  4184   001816                     
  4185                           ;DS1307.c: 47:  write_DS1307(0x07, 0x93);
  4186   001816  0E93               	movlw	147
  4187   001818  6E29               	movwf	write_DS1307@data^0,c
  4188   00181A  0E07               	movlw	7
  4189   00181C  EC0D  F00B         	call	_write_DS1307
  4190   001820                     
  4191                           ;DS1307.c: 50:  dummy = read_DS1307(0x00);
  4192   001820  0E00               	movlw	0
  4193   001822  EC53  F00B         	call	_read_DS1307
  4194   001826  6E2B               	movwf	init_DS1307@dummy^0,c
  4195                           
  4196                           ;DS1307.c: 52:  write_DS1307(0x00, dummy & 0x7F);
  4197   001828  502B               	movf	init_DS1307@dummy^0,w,c
  4198   00182A  0B7F               	andlw	127
  4199   00182C  6E29               	movwf	write_DS1307@data^0,c
  4200   00182E  0E00               	movlw	0
  4201   001830  EC0D  F00B         	call	_write_DS1307
  4202   001834  0012               	return		;funcret
  4203   001836                     __end_of_init_DS1307:
  4204                           	callstack 0
  4205                           
  4206 ;; *************** function _write_DS1307 *****************
  4207 ;; Defined at:
  4208 ;;		line 56 in file "DS1307.c"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;  address         1    wreg     unsigned char 
  4211 ;;  data            1    1[COMRAM] unsigned char 
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;  address         1    2[COMRAM] unsigned char 
  4214 ;; Return value:  Size  Location     Type
  4215 ;;                  1    wreg      void 
  4216 ;; Registers used:
  4217 ;;		wreg, status,2, cstack
  4218 ;; Tracked objects:
  4219 ;;		On entry : 0/0
  4220 ;;		On exit  : 0/0
  4221 ;;		Unchanged: 0/0
  4222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4223 ;;      Params:         1       0       0       0       0       0       0
  4224 ;;      Locals:         1       0       0       0       0       0       0
  4225 ;;      Temps:          0       0       0       0       0       0       0
  4226 ;;      Totals:         2       0       0       0       0       0       0
  4227 ;;Total ram usage:        2 bytes
  4228 ;; Hardware stack levels used: 1
  4229 ;; Hardware stack levels required when called: 2
  4230 ;; This function calls:
  4231 ;;		_i2c_start
  4232 ;;		_i2c_stop
  4233 ;;		_i2c_write
  4234 ;; This function is called by:
  4235 ;;		_set_time
  4236 ;;		_init_DS1307
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239                           
  4240                           	psect	text20
  4241   00161A                     __ptext20:
  4242                           	callstack 0
  4243   00161A                     _write_DS1307:
  4244                           	callstack 27
  4245                           
  4246                           ;incstack = 0
  4247                           ;write_DS1307@address stored from wreg
  4248   00161A  6E2A               	movwf	write_DS1307@address^0,c
  4249   00161C                     
  4250                           ;DS1307.c: 56: void write_DS1307(unsigned char address, unsigned char data);DS1307.c: 57
      +                          : {;DS1307.c: 58:  i2c_start();
  4251   00161C  ECAF  F00A         	call	_i2c_start	;wreg free
  4252   001620                     
  4253                           ;DS1307.c: 59:  i2c_write(0xD0);
  4254   001620  0ED0               	movlw	208
  4255   001622  ECC3  F00A         	call	_i2c_write
  4256   001626                     
  4257                           ;DS1307.c: 60:  i2c_write(address);
  4258   001626  502A               	movf	write_DS1307@address^0,w,c
  4259   001628  ECC3  F00A         	call	_i2c_write
  4260   00162C                     
  4261                           ;DS1307.c: 61:  i2c_write(data);
  4262   00162C  5029               	movf	write_DS1307@data^0,w,c
  4263   00162E  ECC3  F00A         	call	_i2c_write
  4264   001632                     
  4265                           ;DS1307.c: 62:  i2c_stop();
  4266   001632  ECB3  F00A         	call	_i2c_stop	;wreg free
  4267   001636  0012               	return		;funcret
  4268   001638                     __end_of_write_DS1307:
  4269                           	callstack 0
  4270                           
  4271 ;; *************** function _get_time *****************
  4272 ;; Defined at:
  4273 ;;		line 81 in file "DS1307.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;		None
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;		None
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  1    wreg      void 
  4280 ;; Registers used:
  4281 ;;		wreg, status,2, status,0, cstack
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4287 ;;      Params:         0       0       0       0       0       0       0
  4288 ;;      Locals:         0       0       0       0       0       0       0
  4289 ;;      Temps:          0       0       0       0       0       0       0
  4290 ;;      Totals:         0       0       0       0       0       0       0
  4291 ;;Total ram usage:        0 bytes
  4292 ;; Hardware stack levels used: 1
  4293 ;; Hardware stack levels required when called: 4
  4294 ;; This function calls:
  4295 ;;		_read_DS1307
  4296 ;; This function is called by:
  4297 ;;		_main
  4298 ;; This function uses a non-reentrant model
  4299 ;;
  4300                           
  4301                           	psect	text21
  4302   001AA4                     __ptext21:
  4303                           	callstack 0
  4304   001AA4                     _get_time:
  4305                           	callstack 26
  4306   001AA4                     
  4307                           ;DS1307.c: 83:  clock_reg[0] = read_DS1307(0x02);
  4308   001AA4  0E02               	movlw	2
  4309   001AA6  EC53  F00B         	call	_read_DS1307
  4310   001AAA  6E01               	movwf	_clock_reg^0,c
  4311                           
  4312                           ;DS1307.c: 84:  clock_reg[1] = read_DS1307(0x01);
  4313   001AAC  0E01               	movlw	1
  4314   001AAE  EC53  F00B         	call	_read_DS1307
  4315   001AB2  6E02               	movwf	(_clock_reg+1)^0,c
  4316                           
  4317                           ;DS1307.c: 85:  clock_reg[2] = read_DS1307(0x00);
  4318   001AB4  0E00               	movlw	0
  4319   001AB6  EC53  F00B         	call	_read_DS1307
  4320   001ABA  6E03               	movwf	(_clock_reg+2)^0,c
  4321   001ABC                     
  4322                           ;DS1307.c: 87:  if (clock_reg[0] & 0x40)
  4323   001ABC  AC01               	btfss	_clock_reg^0,6,c
  4324   001ABE  EF63  F00D         	goto	u1661
  4325   001AC2  EF65  F00D         	goto	u1660
  4326   001AC6                     u1661:
  4327   001AC6  EF70  F00D         	goto	l2884
  4328   001ACA                     u1660:
  4329   001ACA                     
  4330                           ;DS1307.c: 88:  {;DS1307.c: 89:   time[0] = '0' + ((clock_reg[0] >> 4) & 0x01);
  4331   001ACA  3801               	swapf	_clock_reg^0,w,c
  4332   001ACC  0B0F               	andlw	15
  4333   001ACE  0B01               	andlw	1
  4334   001AD0  0F30               	addlw	48
  4335   001AD2  6E1F               	movwf	_time^0,c
  4336                           
  4337                           ;DS1307.c: 90:   time[1] = '0' + (clock_reg[0] & 0x0F);
  4338   001AD4  5001               	movf	_clock_reg^0,w,c
  4339   001AD6  0B0F               	andlw	15
  4340   001AD8  0F30               	addlw	48
  4341   001ADA  6E20               	movwf	(_time+1)^0,c
  4342                           
  4343                           ;DS1307.c: 91:  }
  4344   001ADC  EF79  F00D         	goto	l2886
  4345   001AE0                     l2884:
  4346                           
  4347                           ;DS1307.c: 93:  {;DS1307.c: 94:   time[0] = '0' + ((clock_reg[0] >> 4) & 0x03);
  4348   001AE0  3801               	swapf	_clock_reg^0,w,c
  4349   001AE2  0B0F               	andlw	15
  4350   001AE4  0B03               	andlw	3
  4351   001AE6  0F30               	addlw	48
  4352   001AE8  6E1F               	movwf	_time^0,c
  4353                           
  4354                           ;DS1307.c: 95:   time[1] = '0' + (clock_reg[0] & 0x0F);
  4355   001AEA  5001               	movf	_clock_reg^0,w,c
  4356   001AEC  0B0F               	andlw	15
  4357   001AEE  0F30               	addlw	48
  4358   001AF0  6E20               	movwf	(_time+1)^0,c
  4359   001AF2                     l2886:
  4360                           
  4361                           ;DS1307.c: 97:  time[2] = ':';
  4362   001AF2  0E3A               	movlw	58
  4363   001AF4  6E21               	movwf	(_time+2)^0,c
  4364   001AF6                     
  4365                           ;DS1307.c: 98:  time[3] = '0' + ((clock_reg[1] >> 4) & 0x0F);
  4366   001AF6  3802               	swapf	(_clock_reg+1)^0,w,c
  4367   001AF8  0B0F               	andlw	15
  4368   001AFA  0B0F               	andlw	15
  4369   001AFC  0F30               	addlw	48
  4370   001AFE  6E22               	movwf	(_time+3)^0,c
  4371   001B00                     
  4372                           ;DS1307.c: 99:  time[4] = '0' + (clock_reg[1] & 0x0F);
  4373   001B00  5002               	movf	(_clock_reg+1)^0,w,c
  4374   001B02  0B0F               	andlw	15
  4375   001B04  0F30               	addlw	48
  4376   001B06  6E23               	movwf	(_time+4)^0,c
  4377   001B08                     
  4378                           ;DS1307.c: 100:  time[5] = ':';
  4379   001B08  0E3A               	movlw	58
  4380   001B0A  6E24               	movwf	(_time+5)^0,c
  4381                           
  4382                           ;DS1307.c: 101:  time[6] = '0' + ((clock_reg[2] >> 4) & 0x0F);
  4383   001B0C  3803               	swapf	(_clock_reg+2)^0,w,c
  4384   001B0E  0B0F               	andlw	15
  4385   001B10  0B0F               	andlw	15
  4386   001B12  0F30               	addlw	48
  4387   001B14  6E25               	movwf	(_time+6)^0,c
  4388                           
  4389                           ;DS1307.c: 102:  time[7] = '0' + (clock_reg[2] & 0x0F);
  4390   001B16  5003               	movf	(_clock_reg+2)^0,w,c
  4391   001B18  0B0F               	andlw	15
  4392   001B1A  0F30               	addlw	48
  4393   001B1C  6E26               	movwf	(_time+7)^0,c
  4394   001B1E                     
  4395                           ;DS1307.c: 103:  time[8] = '\0';
  4396   001B1E  0E00               	movlw	0
  4397   001B20  6E27               	movwf	(_time+8)^0,c
  4398   001B22  0012               	return		;funcret
  4399   001B24                     __end_of_get_time:
  4400                           	callstack 0
  4401                           
  4402 ;; *************** function _read_DS1307 *****************
  4403 ;; Defined at:
  4404 ;;		line 65 in file "DS1307.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;  address         1    wreg     unsigned char 
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;  address         1    1[COMRAM] unsigned char 
  4409 ;;  data            1    2[COMRAM] unsigned char 
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  1    wreg      unsigned char 
  4412 ;; Registers used:
  4413 ;;		wreg, status,2, cstack
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 0/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4419 ;;      Params:         0       0       0       0       0       0       0
  4420 ;;      Locals:         2       0       0       0       0       0       0
  4421 ;;      Temps:          0       0       0       0       0       0       0
  4422 ;;      Totals:         2       0       0       0       0       0       0
  4423 ;;Total ram usage:        2 bytes
  4424 ;; Hardware stack levels used: 1
  4425 ;; Hardware stack levels required when called: 3
  4426 ;; This function calls:
  4427 ;;		_i2c_read
  4428 ;;		_i2c_rep_start
  4429 ;;		_i2c_start
  4430 ;;		_i2c_stop
  4431 ;;		_i2c_write
  4432 ;; This function is called by:
  4433 ;;		_init_DS1307
  4434 ;;		_get_time
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           	psect	text22
  4439   0016A6                     __ptext22:
  4440                           	callstack 0
  4441   0016A6                     _read_DS1307:
  4442                           	callstack 25
  4443                           
  4444                           ;incstack = 0
  4445                           ;read_DS1307@address stored from wreg
  4446   0016A6  6E29               	movwf	read_DS1307@address^0,c
  4447   0016A8                     
  4448                           ;DS1307.c: 65: unsigned char read_DS1307(unsigned char address);DS1307.c: 66: {;DS1307.c
      +                          : 67:  unsigned char data;;DS1307.c: 69:  i2c_start();
  4449   0016A8  ECAF  F00A         	call	_i2c_start	;wreg free
  4450   0016AC                     
  4451                           ;DS1307.c: 71:  i2c_write(0xD0);
  4452   0016AC  0ED0               	movlw	208
  4453   0016AE  ECC3  F00A         	call	_i2c_write
  4454   0016B2                     
  4455                           ;DS1307.c: 73:  i2c_write(address);
  4456   0016B2  5029               	movf	read_DS1307@address^0,w,c
  4457   0016B4  ECC3  F00A         	call	_i2c_write
  4458   0016B8                     
  4459                           ;DS1307.c: 74:  i2c_rep_start();
  4460   0016B8  ECAB  F00A         	call	_i2c_rep_start	;wreg free
  4461   0016BC                     
  4462                           ;DS1307.c: 75:  i2c_write(0xD1);
  4463   0016BC  0ED1               	movlw	209
  4464   0016BE  ECC3  F00A         	call	_i2c_write
  4465                           
  4466                           ;DS1307.c: 76:  data = i2c_read();
  4467   0016C2  ECBD  F00A         	call	_i2c_read	;wreg free
  4468   0016C6  6E2A               	movwf	read_DS1307@data^0,c
  4469   0016C8                     
  4470                           ;DS1307.c: 77:  i2c_stop();
  4471   0016C8  ECB3  F00A         	call	_i2c_stop	;wreg free
  4472                           
  4473                           ;DS1307.c: 79:  return data;
  4474   0016CC  502A               	movf	read_DS1307@data^0,w,c
  4475   0016CE  0012               	return		;funcret
  4476   0016D0                     __end_of_read_DS1307:
  4477                           	callstack 0
  4478                           
  4479 ;; *************** function _download_log *****************
  4480 ;; Defined at:
  4481 ;;		line 109 in file "dashboard.c"
  4482 ;; Parameters:    Size  Location     Type
  4483 ;;		None
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;  j               2   19[COMRAM] int 
  4486 ;;  i               2   17[COMRAM] int 
  4487 ;;  s               2   15[COMRAM] int 
  4488 ;; Return value:  Size  Location     Type
  4489 ;;                  1    wreg      void 
  4490 ;; Registers used:
  4491 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4492 ;; Tracked objects:
  4493 ;;		On entry : 0/0
  4494 ;;		On exit  : 0/0
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4497 ;;      Params:         0       0       0       0       0       0       0
  4498 ;;      Locals:         6       0       0       0       0       0       0
  4499 ;;      Temps:          2       0       0       0       0       0       0
  4500 ;;      Totals:         8       0       0       0       0       0       0
  4501 ;;Total ram usage:        8 bytes
  4502 ;; Hardware stack levels used: 1
  4503 ;; Hardware stack levels required when called: 5
  4504 ;; This function calls:
  4505 ;;		___wmul
  4506 ;;		_clcd_print
  4507 ;;		_clcd_write
  4508 ;;		_event_reader
  4509 ;;		_putch
  4510 ;;		_puts
  4511 ;; This function is called by:
  4512 ;;		_main
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           	psect	text23
  4517   002218                     __ptext23:
  4518                           	callstack 0
  4519   002218                     _download_log:
  4520                           	callstack 25
  4521   002218                     
  4522                           ;dashboard.c: 111:     event_reader();
  4523   002218  ECD3  F011         	call	_event_reader	;wreg free
  4524   00221C                     
  4525                           ;dashboard.c: 112:     if (event_count == 0) {
  4526   00221C  5014               	movf	_event_count^0,w,c
  4527   00221E  1015               	iorwf	(_event_count+1)^0,w,c
  4528   002220  A4D8               	btfss	status,2,c
  4529   002222  EF15  F011         	goto	u1961
  4530   002226  EF17  F011         	goto	u1960
  4531   00222A                     u1961:
  4532   00222A  EF42  F011         	goto	l3078
  4533   00222E                     u1960:
  4534   00222E                     
  4535                           ;dashboard.c: 113:         puts("NO LOGS TO DOWNLOAD\n\r");
  4536   00222E  0EDF               	movlw	low STR_15
  4537   002230  6E29               	movwf	puts@s^0,c
  4538   002232  0E2E               	movlw	high STR_15
  4539   002234  6E2A               	movwf	(puts@s+1)^0,c
  4540   002236  EC7F  F00B         	call	_puts	;wreg free
  4541   00223A                     
  4542                           ;dashboard.c: 114:         clcd_print("NO LOGS", (0x80 + (0)));
  4543   00223A  0ED7               	movlw	low STR_16
  4544   00223C  6E2A               	movwf	clcd_print@data^0,c
  4545   00223E  0E2F               	movlw	high STR_16
  4546   002240  6E2B               	movwf	(clcd_print@data+1)^0,c
  4547   002242  0E80               	movlw	128
  4548   002244  6E2C               	movwf	clcd_print@addr^0,c
  4549   002246  ECA7  F00C         	call	_clcd_print	;wreg free
  4550   00224A                     
  4551                           ;dashboard.c: 115:         clcd_print("TO DOWNLOAD", (0xC0 + (5)));
  4552   00224A  0EAE               	movlw	low STR_17
  4553   00224C  6E2A               	movwf	clcd_print@data^0,c
  4554   00224E  0E2F               	movlw	high STR_17
  4555   002250  6E2B               	movwf	(clcd_print@data+1)^0,c
  4556   002252  0EC5               	movlw	197
  4557   002254  6E2C               	movwf	clcd_print@addr^0,c
  4558   002256  ECA7  F00C         	call	_clcd_print	;wreg free
  4559   00225A                     
  4560                           ;dashboard.c: 116:         _delay((unsigned long)((1000)*(20000000/4000.0)));
  4561   00225A  0E1A               	movlw	26
  4562   00225C  6E36               	movwf	(??_download_log+1)^0,c
  4563   00225E  0E5E               	movlw	94
  4564   002260  6E35               	movwf	??_download_log^0,c
  4565   002262  0E6E               	movlw	110
  4566   002264                     u2347:
  4567   002264  2EE8               	decfsz	wreg,f,c
  4568   002266  D7FE               	bra	u2347
  4569   002268  2E35               	decfsz	??_download_log^0,f,c
  4570   00226A  D7FC               	bra	u2347
  4571   00226C  2E36               	decfsz	(??_download_log+1)^0,f,c
  4572   00226E  D7FA               	bra	u2347
  4573   002270  D000               	nop2	
  4574   002272                     
  4575                           ;dashboard.c: 117:         clcd_write(0x01, 0);
  4576   002272  0E00               	movlw	0
  4577   002274  6E28               	movwf	clcd_write@control_bit^0,c
  4578   002276  0E01               	movlw	1
  4579   002278  EC9A  F00B         	call	_clcd_write
  4580   00227C                     
  4581                           ;dashboard.c: 118:         state = e_main_menu;
  4582   00227C  0E01               	movlw	1
  4583   00227E  6E19               	movwf	_state^0,c
  4584   002280  EFD2  F011         	goto	l184
  4585   002284                     l3078:
  4586                           
  4587                           ;dashboard.c: 121:     puts("#   TIME   GR SP");
  4588   002284  0E67               	movlw	low STR_18
  4589   002286  6E29               	movwf	puts@s^0,c
  4590   002288  0E2F               	movlw	high STR_18
  4591   00228A  6E2A               	movwf	(puts@s+1)^0,c
  4592   00228C  EC7F  F00B         	call	_puts	;wreg free
  4593                           
  4594                           ;dashboard.c: 122:     puts("\n\n\r");
  4595   002290  0EDF               	movlw	low STR_19
  4596   002292  6E29               	movwf	puts@s^0,c
  4597   002294  0E2F               	movlw	high STR_19
  4598   002296  6E2A               	movwf	(puts@s+1)^0,c
  4599   002298  EC7F  F00B         	call	_puts	;wreg free
  4600   00229C                     
  4601                           ;dashboard.c: 125:     int s = 0;
  4602   00229C  0E00               	movlw	0
  4603   00229E  6E38               	movwf	(download_log@s+1)^0,c
  4604   0022A0  0E00               	movlw	0
  4605   0022A2  6E37               	movwf	download_log@s^0,c
  4606   0022A4                     
  4607                           ;dashboard.c: 128:     for (int i = 0; i < event_count; i++) {
  4608   0022A4  0E00               	movlw	0
  4609   0022A6  6E3A               	movwf	(download_log@i+1)^0,c
  4610   0022A8  0E00               	movlw	0
  4611   0022AA  6E39               	movwf	download_log@i^0,c
  4612   0022AC  EF9C  F011         	goto	l3106
  4613   0022B0                     l3084:
  4614                           
  4615                           ;dashboard.c: 129:         for (int j = 0; j < 16; j++) {
  4616   0022B0  0E00               	movlw	0
  4617   0022B2  6E3C               	movwf	(download_log@j+1)^0,c
  4618   0022B4  0E00               	movlw	0
  4619   0022B6  6E3B               	movwf	download_log@j^0,c
  4620   0022B8                     l3090:
  4621                           
  4622                           ;dashboard.c: 130:             if (j == 0) {
  4623   0022B8  503B               	movf	download_log@j^0,w,c
  4624   0022BA  103C               	iorwf	(download_log@j+1)^0,w,c
  4625   0022BC  A4D8               	btfss	status,2,c
  4626   0022BE  EF63  F011         	goto	u1971
  4627   0022C2  EF65  F011         	goto	u1970
  4628   0022C6                     u1971:
  4629   0022C6  EF6B  F011         	goto	l3096
  4630   0022CA                     u1970:
  4631   0022CA                     
  4632                           ;dashboard.c: 131:                 putch(s + '0');
  4633   0022CA  5037               	movf	download_log@s^0,w,c
  4634   0022CC  0F30               	addlw	48
  4635   0022CE  EC01  F00B         	call	_putch
  4636   0022D2                     
  4637                           ;dashboard.c: 132:                 s++;
  4638   0022D2  4A37               	infsnz	download_log@s^0,f,c
  4639   0022D4  2A38               	incf	(download_log@s+1)^0,f,c
  4640   0022D6                     l3096:
  4641                           
  4642                           ;dashboard.c: 134:             putch(events[i][j]);
  4643   0022D6  C039  F028         	movff	download_log@i,___wmul@multiplier
  4644   0022DA  C03A  F029         	movff	download_log@i+1,___wmul@multiplier+1
  4645   0022DE  0E00               	movlw	0
  4646   0022E0  6E2B               	movwf	(___wmul@multiplicand+1)^0,c
  4647   0022E2  0E0B               	movlw	11
  4648   0022E4  6E2A               	movwf	___wmul@multiplicand^0,c
  4649   0022E6  EC2B  F00B         	call	___wmul	;wreg free
  4650   0022EA  0E60               	movlw	low _events
  4651   0022EC  2428               	addwf	?___wmul^0,w,c
  4652   0022EE  6E35               	movwf	??_download_log^0,c
  4653   0022F0  0E00               	movlw	high _events
  4654   0022F2  2029               	addwfc	(?___wmul+1)^0,w,c
  4655   0022F4  6E36               	movwf	(??_download_log+1)^0,c
  4656   0022F6  503B               	movf	download_log@j^0,w,c
  4657   0022F8  2435               	addwf	??_download_log^0,w,c
  4658   0022FA  6ED9               	movwf	fsr2l,c
  4659   0022FC  503C               	movf	(download_log@j+1)^0,w,c
  4660   0022FE  2036               	addwfc	(??_download_log+1)^0,w,c
  4661   002300  6EDA               	movwf	fsr2h,c
  4662   002302  50DF               	movf	indf2,w,c
  4663   002304  EC01  F00B         	call	_putch
  4664   002308                     
  4665                           ;dashboard.c: 136:         }
  4666   002308  4A3B               	infsnz	download_log@j^0,f,c
  4667   00230A  2A3C               	incf	(download_log@j+1)^0,f,c
  4668   00230C  BE3C               	btfsc	(download_log@j+1)^0,7,c
  4669   00230E  EF92  F011         	goto	u1981
  4670   002312  503C               	movf	(download_log@j+1)^0,w,c
  4671   002314  E109               	bnz	u1980
  4672   002316  0E10               	movlw	16
  4673   002318  5C3B               	subwf	download_log@j^0,w,c
  4674   00231A  A0D8               	btfss	status,0,c
  4675   00231C  EF92  F011         	goto	u1981
  4676   002320  EF94  F011         	goto	u1980
  4677   002324                     u1981:
  4678   002324  EF5C  F011         	goto	l3090
  4679   002328                     u1980:
  4680   002328                     
  4681                           ;dashboard.c: 137:         puts("\n\r");
  4682   002328  0EE0               	movlw	low (STR_19+1)
  4683   00232A  6E29               	movwf	puts@s^0,c
  4684   00232C  0E2F               	movlw	high (STR_19+1)
  4685   00232E  6E2A               	movwf	(puts@s+1)^0,c
  4686   002330  EC7F  F00B         	call	_puts	;wreg free
  4687   002334                     
  4688                           ;dashboard.c: 138:     }
  4689   002334  4A39               	infsnz	download_log@i^0,f,c
  4690   002336  2A3A               	incf	(download_log@i+1)^0,f,c
  4691   002338                     l3106:
  4692   002338  5014               	movf	_event_count^0,w,c
  4693   00233A  5C39               	subwf	download_log@i^0,w,c
  4694   00233C  5015               	movf	(_event_count+1)^0,w,c
  4695   00233E  583A               	subwfb	(download_log@i+1)^0,w,c
  4696   002340  A0D8               	btfss	status,0,c
  4697   002342  EFA5  F011         	goto	u1991
  4698   002346  EFA7  F011         	goto	u1990
  4699   00234A                     u1991:
  4700   00234A  EF58  F011         	goto	l3084
  4701   00234E                     u1990:
  4702   00234E                     
  4703                           ;dashboard.c: 139:     if (event_count > 0) {
  4704   00234E  5014               	movf	_event_count^0,w,c
  4705   002350  1015               	iorwf	(_event_count+1)^0,w,c
  4706   002352  B4D8               	btfsc	status,2,c
  4707   002354  EFAE  F011         	goto	u2001
  4708   002358  EFB0  F011         	goto	u2000
  4709   00235C                     u2001:
  4710   00235C  EFD2  F011         	goto	l184
  4711   002360                     u2000:
  4712   002360                     
  4713                           ;dashboard.c: 140:         clcd_print("DOWNLOADING..", (0x80 + (0)));
  4714   002360  0E86               	movlw	low STR_21
  4715   002362  6E2A               	movwf	clcd_print@data^0,c
  4716   002364  0E2F               	movlw	high STR_21
  4717   002366  6E2B               	movwf	(clcd_print@data+1)^0,c
  4718   002368  0E80               	movlw	128
  4719   00236A  6E2C               	movwf	clcd_print@addr^0,c
  4720   00236C  ECA7  F00C         	call	_clcd_print	;wreg free
  4721                           
  4722                           ;dashboard.c: 141:         clcd_print("THROUGH UART", (0xC0 + (2)));
  4723   002370  0EA1               	movlw	low STR_22
  4724   002372  6E2A               	movwf	clcd_print@data^0,c
  4725   002374  0E2F               	movlw	high STR_22
  4726   002376  6E2B               	movwf	(clcd_print@data+1)^0,c
  4727   002378  0EC2               	movlw	194
  4728   00237A  6E2C               	movwf	clcd_print@addr^0,c
  4729   00237C  ECA7  F00C         	call	_clcd_print	;wreg free
  4730   002380                     
  4731                           ;dashboard.c: 142:         _delay((unsigned long)((2000)*(20000000/4000.0)));
  4732   002380  0E33               	movlw	51
  4733   002382  6E36               	movwf	(??_download_log+1)^0,c
  4734   002384  0EBB               	movlw	187
  4735   002386  6E35               	movwf	??_download_log^0,c
  4736   002388  0EE0               	movlw	224
  4737   00238A                     u2357:
  4738   00238A  2EE8               	decfsz	wreg,f,c
  4739   00238C  D7FE               	bra	u2357
  4740   00238E  2E35               	decfsz	??_download_log^0,f,c
  4741   002390  D7FC               	bra	u2357
  4742   002392  2E36               	decfsz	(??_download_log+1)^0,f,c
  4743   002394  D7FA               	bra	u2357
  4744   002396                     
  4745                           ;dashboard.c: 144:         state = e_main_menu;
  4746   002396  0E01               	movlw	1
  4747   002398  6E19               	movwf	_state^0,c
  4748   00239A                     
  4749                           ;dashboard.c: 145:         clcd_write(0x01, 0);
  4750   00239A  0E00               	movlw	0
  4751   00239C  6E28               	movwf	clcd_write@control_bit^0,c
  4752   00239E  0E01               	movlw	1
  4753   0023A0  EC9A  F00B         	call	_clcd_write
  4754   0023A4                     l184:
  4755   0023A4  0012               	return		;funcret
  4756   0023A6                     __end_of_download_log:
  4757                           	callstack 0
  4758                           
  4759 ;; *************** function _puts *****************
  4760 ;; Defined at:
  4761 ;;		line 69 in file "UART.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;  s               2    1[COMRAM] PTR const unsigned char 
  4764 ;;		 -> STR_20(3), STR_19(4), STR_18(17), STR_15(22), 
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;		None
  4767 ;; Return value:  Size  Location     Type
  4768 ;;                  2    1[COMRAM] int 
  4769 ;; Registers used:
  4770 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4776 ;;      Params:         2       0       0       0       0       0       0
  4777 ;;      Locals:         0       0       0       0       0       0       0
  4778 ;;      Temps:          0       0       0       0       0       0       0
  4779 ;;      Totals:         2       0       0       0       0       0       0
  4780 ;;Total ram usage:        2 bytes
  4781 ;; Hardware stack levels used: 1
  4782 ;; Hardware stack levels required when called: 1
  4783 ;; This function calls:
  4784 ;;		_putch
  4785 ;; This function is called by:
  4786 ;;		_download_log
  4787 ;; This function uses a non-reentrant model
  4788 ;;
  4789                           
  4790                           	psect	text24
  4791   0016FE                     __ptext24:
  4792                           	callstack 0
  4793   0016FE                     _puts:
  4794                           	callstack 28
  4795   0016FE                     
  4796                           ;UART.c: 69: int puts(const char *s);UART.c: 70: {;UART.c: 71:  while(*s)
  4797   0016FE  EF8B  F00B         	goto	l2784
  4798   001702                     l2780:
  4799                           
  4800                           ;UART.c: 72:  {;UART.c: 73:   putch(*s++);
  4801   001702  C029  FFF6         	movff	puts@s,tblptrl
  4802   001706  C02A  FFF7         	movff	puts@s+1,tblptrh
  4803   00170A                     	if	0	;tblptru may be non-zero
  4804   00170A                     	endif
  4805   00170A                     	if	0	;tblptru may be non-zero
  4806   00170A                     	endif
  4807   00170A  0008               	tblrd		*
  4808   00170C  50F5               	movf	tablat,w,c
  4809   00170E  EC01  F00B         	call	_putch
  4810   001712  4A29               	infsnz	puts@s^0,f,c
  4811   001714  2A2A               	incf	(puts@s+1)^0,f,c
  4812   001716                     l2784:
  4813                           
  4814                           ;UART.c: 71:  while(*s)
  4815   001716  C029  FFF6         	movff	puts@s,tblptrl
  4816   00171A  C02A  FFF7         	movff	puts@s+1,tblptrh
  4817   00171E                     	if	0	;tblptru may be non-zero
  4818   00171E                     	endif
  4819   00171E                     	if	0	;tblptru may be non-zero
  4820   00171E                     	endif
  4821   00171E  0008               	tblrd		*
  4822   001720  50F5               	movf	tablat,w,c
  4823   001722  0900               	iorlw	0
  4824   001724  A4D8               	btfss	status,2,c
  4825   001726  EF97  F00B         	goto	u1531
  4826   00172A  EF99  F00B         	goto	u1530
  4827   00172E                     u1531:
  4828   00172E  EF81  F00B         	goto	l2780
  4829   001732                     u1530:
  4830   001732  0012               	return		;funcret
  4831   001734                     __end_of_puts:
  4832                           	callstack 0
  4833                           
  4834 ;; *************** function _putch *****************
  4835 ;; Defined at:
  4836 ;;		line 57 in file "UART.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;  byte            1    wreg     unsigned char 
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;  byte            1    0[COMRAM] unsigned char 
  4841 ;; Return value:  Size  Location     Type
  4842 ;;                  1    wreg      void 
  4843 ;; Registers used:
  4844 ;;		wreg
  4845 ;; Tracked objects:
  4846 ;;		On entry : 0/0
  4847 ;;		On exit  : 0/0
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4850 ;;      Params:         0       0       0       0       0       0       0
  4851 ;;      Locals:         1       0       0       0       0       0       0
  4852 ;;      Temps:          0       0       0       0       0       0       0
  4853 ;;      Totals:         1       0       0       0       0       0       0
  4854 ;;Total ram usage:        1 bytes
  4855 ;; Hardware stack levels used: 1
  4856 ;; This function calls:
  4857 ;;		Nothing
  4858 ;; This function is called by:
  4859 ;;		_download_log
  4860 ;;		_puts
  4861 ;;		_getche
  4862 ;; This function uses a non-reentrant model
  4863 ;;
  4864                           
  4865                           	psect	text25
  4866   001602                     __ptext25:
  4867                           	callstack 0
  4868   001602                     _putch:
  4869                           	callstack 28
  4870                           
  4871                           ;incstack = 0
  4872                           ;putch@byte stored from wreg
  4873   001602  6E28               	movwf	putch@byte^0,c
  4874   001604                     l740:
  4875                           
  4876                           ;UART.c: 61:  while(!TXIF)
  4877   001604  A89E               	btfss	3998,4,c	;volatile
  4878   001606  EF07  F00B         	goto	u81
  4879   00160A  EF09  F00B         	goto	u80
  4880   00160E                     u81:
  4881   00160E  EF02  F00B         	goto	l740
  4882   001612                     u80:
  4883   001612                     
  4884                           ;UART.c: 65:  TXIF = 0;
  4885   001612  989E               	bcf	3998,4,c	;volatile
  4886   001614                     
  4887                           ;UART.c: 66:  TXREG = byte;
  4888   001614  C028  FFAD         	movff	putch@byte,4013	;volatile
  4889   001618  0012               	return		;funcret
  4890   00161A                     __end_of_putch:
  4891                           	callstack 0
  4892                           
  4893 ;; *************** function _event_reader *****************
  4894 ;; Defined at:
  4895 ;;		line 15 in file "event_reader.c"
  4896 ;; Parameters:    Size  Location     Type
  4897 ;;		None
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;  j               2   11[COMRAM] int 
  4900 ;;  i               2    9[COMRAM] int 
  4901 ;;  read_addr       1    8[COMRAM] unsigned char 
  4902 ;; Return value:  Size  Location     Type
  4903 ;;                  1    wreg      void 
  4904 ;; Registers used:
  4905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4911 ;;      Params:         0       0       0       0       0       0       0
  4912 ;;      Locals:         5       0       0       0       0       0       0
  4913 ;;      Temps:          2       0       0       0       0       0       0
  4914 ;;      Totals:         7       0       0       0       0       0       0
  4915 ;;Total ram usage:        7 bytes
  4916 ;; Hardware stack levels used: 1
  4917 ;; Hardware stack levels required when called: 4
  4918 ;; This function calls:
  4919 ;;		___wmul
  4920 ;;		_read_external_eeprom
  4921 ;; This function is called by:
  4922 ;;		_download_log
  4923 ;;		_view_log
  4924 ;; This function uses a non-reentrant model
  4925 ;;
  4926                           
  4927                           	psect	text26
  4928   0023A6                     __ptext26:
  4929                           	callstack 0
  4930   0023A6                     _event_reader:
  4931                           	callstack 25
  4932   0023A6                     
  4933                           ;event_reader.c: 17:         unsigned char read_addr = 0x00;
  4934   0023A6  0E00               	movlw	0
  4935   0023A8  6E30               	movwf	event_reader@read_addr^0,c
  4936                           
  4937                           ;event_reader.c: 21:         for (int i = 0; i < event_count; i++) {
  4938   0023AA  0E00               	movlw	0
  4939   0023AC  6E32               	movwf	(event_reader@i+1)^0,c
  4940   0023AE  0E00               	movlw	0
  4941   0023B0  6E31               	movwf	event_reader@i^0,c
  4942   0023B2  EF94  F012         	goto	l2776
  4943   0023B6                     l2742:
  4944                           
  4945                           ;event_reader.c: 22:             events[i][0] = ' ';
  4946   0023B6  C031  F028         	movff	event_reader@i,___wmul@multiplier
  4947   0023BA  C032  F029         	movff	event_reader@i+1,___wmul@multiplier+1
  4948   0023BE  0E00               	movlw	0
  4949   0023C0  6E2B               	movwf	(___wmul@multiplicand+1)^0,c
  4950   0023C2  0E0B               	movlw	11
  4951   0023C4  6E2A               	movwf	___wmul@multiplicand^0,c
  4952   0023C6  EC2B  F00B         	call	___wmul	;wreg free
  4953   0023CA  0E60               	movlw	low _events
  4954   0023CC  2428               	addwf	?___wmul^0,w,c
  4955   0023CE  6ED9               	movwf	fsr2l,c
  4956   0023D0  0E00               	movlw	high _events
  4957   0023D2  2029               	addwfc	(?___wmul+1)^0,w,c
  4958   0023D4  6EDA               	movwf	fsr2h,c
  4959   0023D6  0E20               	movlw	32
  4960   0023D8  6EDF               	movwf	indf2,c
  4961   0023DA                     
  4962                           ;event_reader.c: 23:             for (int j = 1; j < 16; j++) {
  4963   0023DA  0E00               	movlw	0
  4964   0023DC  6E34               	movwf	(event_reader@j+1)^0,c
  4965   0023DE  0E01               	movlw	1
  4966   0023E0  6E33               	movwf	event_reader@j^0,c
  4967   0023E2                     l2750:
  4968                           
  4969                           ;event_reader.c: 24:                 if (j == 1 || j == 10 || j == 13) {
  4970   0023E2  0433               	decf	event_reader@j^0,w,c
  4971   0023E4  1034               	iorwf	(event_reader@j+1)^0,w,c
  4972   0023E6  B4D8               	btfsc	status,2,c
  4973   0023E8  EFF8  F011         	goto	u1461
  4974   0023EC  EFFA  F011         	goto	u1460
  4975   0023F0                     u1461:
  4976   0023F0  EF0E  F012         	goto	l2756
  4977   0023F4                     u1460:
  4978   0023F4  0E0A               	movlw	10
  4979   0023F6  1833               	xorwf	event_reader@j^0,w,c
  4980   0023F8  1034               	iorwf	(event_reader@j+1)^0,w,c
  4981   0023FA  B4D8               	btfsc	status,2,c
  4982   0023FC  EF02  F012         	goto	u1471
  4983   002400  EF04  F012         	goto	u1470
  4984   002404                     u1471:
  4985   002404  EF0E  F012         	goto	l2756
  4986   002408                     u1470:
  4987   002408  0E0D               	movlw	13
  4988   00240A  1833               	xorwf	event_reader@j^0,w,c
  4989   00240C  1034               	iorwf	(event_reader@j+1)^0,w,c
  4990   00240E  A4D8               	btfss	status,2,c
  4991   002410  EF0C  F012         	goto	u1481
  4992   002414  EF0E  F012         	goto	u1480
  4993   002418                     u1481:
  4994   002418  EF28  F012         	goto	l2758
  4995   00241C                     u1480:
  4996   00241C                     l2756:
  4997                           
  4998                           ;event_reader.c: 25:                     events[i][j] = ' ';
  4999   00241C  C031  F028         	movff	event_reader@i,___wmul@multiplier
  5000   002420  C032  F029         	movff	event_reader@i+1,___wmul@multiplier+1
  5001   002424  0E00               	movlw	0
  5002   002426  6E2B               	movwf	(___wmul@multiplicand+1)^0,c
  5003   002428  0E0B               	movlw	11
  5004   00242A  6E2A               	movwf	___wmul@multiplicand^0,c
  5005   00242C  EC2B  F00B         	call	___wmul	;wreg free
  5006   002430  0E60               	movlw	low _events
  5007   002432  2428               	addwf	?___wmul^0,w,c
  5008   002434  6E2E               	movwf	??_event_reader^0,c
  5009   002436  0E00               	movlw	high _events
  5010   002438  2029               	addwfc	(?___wmul+1)^0,w,c
  5011   00243A  6E2F               	movwf	(??_event_reader+1)^0,c
  5012   00243C  5033               	movf	event_reader@j^0,w,c
  5013   00243E  242E               	addwf	??_event_reader^0,w,c
  5014   002440  6ED9               	movwf	fsr2l,c
  5015   002442  5034               	movf	(event_reader@j+1)^0,w,c
  5016   002444  202F               	addwfc	(??_event_reader+1)^0,w,c
  5017   002446  6EDA               	movwf	fsr2h,c
  5018   002448  0E20               	movlw	32
  5019   00244A  6EDF               	movwf	indf2,c
  5020                           
  5021                           ;event_reader.c: 27:                 } else if (j == 4 || j == 7) {
  5022   00244C  EF71  F012         	goto	l2768
  5023   002450                     l2758:
  5024   002450  0E04               	movlw	4
  5025   002452  1833               	xorwf	event_reader@j^0,w,c
  5026   002454  1034               	iorwf	(event_reader@j+1)^0,w,c
  5027   002456  B4D8               	btfsc	status,2,c
  5028   002458  EF30  F012         	goto	u1491
  5029   00245C  EF32  F012         	goto	u1490
  5030   002460                     u1491:
  5031   002460  EF3C  F012         	goto	l2762
  5032   002464                     u1490:
  5033   002464  0E07               	movlw	7
  5034   002466  1833               	xorwf	event_reader@j^0,w,c
  5035   002468  1034               	iorwf	(event_reader@j+1)^0,w,c
  5036   00246A  A4D8               	btfss	status,2,c
  5037   00246C  EF3A  F012         	goto	u1501
  5038   002470  EF3C  F012         	goto	u1500
  5039   002474                     u1501:
  5040   002474  EF56  F012         	goto	l2764
  5041   002478                     u1500:
  5042   002478                     l2762:
  5043                           
  5044                           ;event_reader.c: 29:                     events[i][j] = ':';
  5045   002478  C031  F028         	movff	event_reader@i,___wmul@multiplier
  5046   00247C  C032  F029         	movff	event_reader@i+1,___wmul@multiplier+1
  5047   002480  0E00               	movlw	0
  5048   002482  6E2B               	movwf	(___wmul@multiplicand+1)^0,c
  5049   002484  0E0B               	movlw	11
  5050   002486  6E2A               	movwf	___wmul@multiplicand^0,c
  5051   002488  EC2B  F00B         	call	___wmul	;wreg free
  5052   00248C  0E60               	movlw	low _events
  5053   00248E  2428               	addwf	?___wmul^0,w,c
  5054   002490  6E2E               	movwf	??_event_reader^0,c
  5055   002492  0E00               	movlw	high _events
  5056   002494  2029               	addwfc	(?___wmul+1)^0,w,c
  5057   002496  6E2F               	movwf	(??_event_reader+1)^0,c
  5058   002498  5033               	movf	event_reader@j^0,w,c
  5059   00249A  242E               	addwf	??_event_reader^0,w,c
  5060   00249C  6ED9               	movwf	fsr2l,c
  5061   00249E  5034               	movf	(event_reader@j+1)^0,w,c
  5062   0024A0  202F               	addwfc	(??_event_reader+1)^0,w,c
  5063   0024A2  6EDA               	movwf	fsr2h,c
  5064   0024A4  0E3A               	movlw	58
  5065   0024A6  6EDF               	movwf	indf2,c
  5066                           
  5067                           ;event_reader.c: 30:                 } else {
  5068   0024A8  EF71  F012         	goto	l2768
  5069   0024AC                     l2764:
  5070                           
  5071                           ;event_reader.c: 32:                     events[i][j] = read_external_eeprom(read_addr);
  5072   0024AC  C031  F028         	movff	event_reader@i,___wmul@multiplier
  5073   0024B0  C032  F029         	movff	event_reader@i+1,___wmul@multiplier+1
  5074   0024B4  0E00               	movlw	0
  5075   0024B6  6E2B               	movwf	(___wmul@multiplicand+1)^0,c
  5076   0024B8  0E0B               	movlw	11
  5077   0024BA  6E2A               	movwf	___wmul@multiplicand^0,c
  5078   0024BC  EC2B  F00B         	call	___wmul	;wreg free
  5079   0024C0  0E60               	movlw	low _events
  5080   0024C2  2428               	addwf	?___wmul^0,w,c
  5081   0024C4  6E2E               	movwf	??_event_reader^0,c
  5082   0024C6  0E00               	movlw	high _events
  5083   0024C8  2029               	addwfc	(?___wmul+1)^0,w,c
  5084   0024CA  6E2F               	movwf	(??_event_reader+1)^0,c
  5085   0024CC  5033               	movf	event_reader@j^0,w,c
  5086   0024CE  242E               	addwf	??_event_reader^0,w,c
  5087   0024D0  6ED9               	movwf	fsr2l,c
  5088   0024D2  5034               	movf	(event_reader@j+1)^0,w,c
  5089   0024D4  202F               	addwfc	(??_event_reader+1)^0,w,c
  5090   0024D6  6EDA               	movwf	fsr2h,c
  5091   0024D8  5030               	movf	event_reader@read_addr^0,w,c
  5092   0024DA  EC3E  F00B         	call	_read_external_eeprom
  5093   0024DE  6EDF               	movwf	indf2,c
  5094   0024E0                     
  5095                           ;event_reader.c: 33:                     read_addr++;
  5096   0024E0  2A30               	incf	event_reader@read_addr^0,f,c
  5097   0024E2                     l2768:
  5098                           
  5099                           ;event_reader.c: 35:             }
  5100   0024E2  4A33               	infsnz	event_reader@j^0,f,c
  5101   0024E4  2A34               	incf	(event_reader@j+1)^0,f,c
  5102   0024E6  BE34               	btfsc	(event_reader@j+1)^0,7,c
  5103   0024E8  EF7F  F012         	goto	u1511
  5104   0024EC  5034               	movf	(event_reader@j+1)^0,w,c
  5105   0024EE  E109               	bnz	u1510
  5106   0024F0  0E10               	movlw	16
  5107   0024F2  5C33               	subwf	event_reader@j^0,w,c
  5108   0024F4  A0D8               	btfss	status,0,c
  5109   0024F6  EF7F  F012         	goto	u1511
  5110   0024FA  EF81  F012         	goto	u1510
  5111   0024FE                     u1511:
  5112   0024FE  EFF1  F011         	goto	l2750
  5113   002502                     u1510:
  5114   002502                     
  5115                           ;event_reader.c: 36:             events[i][16] = '\0';
  5116   002502  C031  F028         	movff	event_reader@i,___wmul@multiplier
  5117   002506  C032  F029         	movff	event_reader@i+1,___wmul@multiplier+1
  5118   00250A  0E00               	movlw	0
  5119   00250C  6E2B               	movwf	(___wmul@multiplicand+1)^0,c
  5120   00250E  0E0B               	movlw	11
  5121   002510  6E2A               	movwf	___wmul@multiplicand^0,c
  5122   002512  EC2B  F00B         	call	___wmul	;wreg free
  5123   002516  0E70               	movlw	low (_events+16)
  5124   002518  2428               	addwf	?___wmul^0,w,c
  5125   00251A  6ED9               	movwf	fsr2l,c
  5126   00251C  0E00               	movlw	high (_events+16)
  5127   00251E  2029               	addwfc	(?___wmul+1)^0,w,c
  5128   002520  6EDA               	movwf	fsr2h,c
  5129   002522  6ADF               	clrf	indf2,c
  5130   002524                     
  5131                           ;event_reader.c: 38:         }
  5132   002524  4A31               	infsnz	event_reader@i^0,f,c
  5133   002526  2A32               	incf	(event_reader@i+1)^0,f,c
  5134   002528                     l2776:
  5135   002528  5014               	movf	_event_count^0,w,c
  5136   00252A  5C31               	subwf	event_reader@i^0,w,c
  5137   00252C  5015               	movf	(_event_count+1)^0,w,c
  5138   00252E  5832               	subwfb	(event_reader@i+1)^0,w,c
  5139   002530  A0D8               	btfss	status,0,c
  5140   002532  EF9D  F012         	goto	u1521
  5141   002536  EF9F  F012         	goto	u1520
  5142   00253A                     u1521:
  5143   00253A  EFDB  F011         	goto	l2742
  5144   00253E                     u1520:
  5145   00253E  0012               	return		;funcret
  5146   002540                     __end_of_event_reader:
  5147                           	callstack 0
  5148                           
  5149 ;; *************** function _read_external_eeprom *****************
  5150 ;; Defined at:
  5151 ;;		line 22 in file "external EEPROM.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;  address         1    wreg     unsigned char 
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;  address         1    1[COMRAM] unsigned char 
  5156 ;;  data            1    2[COMRAM] unsigned char 
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  1    wreg      unsigned char 
  5159 ;; Registers used:
  5160 ;;		wreg, status,2, cstack
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5166 ;;      Params:         0       0       0       0       0       0       0
  5167 ;;      Locals:         2       0       0       0       0       0       0
  5168 ;;      Temps:          0       0       0       0       0       0       0
  5169 ;;      Totals:         2       0       0       0       0       0       0
  5170 ;;Total ram usage:        2 bytes
  5171 ;; Hardware stack levels used: 1
  5172 ;; Hardware stack levels required when called: 3
  5173 ;; This function calls:
  5174 ;;		_i2c_read
  5175 ;;		_i2c_rep_start
  5176 ;;		_i2c_start
  5177 ;;		_i2c_stop
  5178 ;;		_i2c_write
  5179 ;; This function is called by:
  5180 ;;		_event_reader
  5181 ;; This function uses a non-reentrant model
  5182 ;;
  5183                           
  5184                           	psect	text27
  5185   00167C                     __ptext27:
  5186                           	callstack 0
  5187   00167C                     _read_external_eeprom:
  5188                           	callstack 25
  5189                           
  5190                           ;incstack = 0
  5191                           ;read_external_eeprom@address stored from wreg
  5192   00167C  6E29               	movwf	read_external_eeprom@address^0,c
  5193   00167E                     
  5194                           ;external EEPROM.c: 22: unsigned char read_external_eeprom(unsigned char address);extern
      +                          al EEPROM.c: 23: {;external EEPROM.c: 24:  unsigned char data;;external EEPROM.c: 26:  i
      +                          2c_start();
  5195   00167E  ECAF  F00A         	call	_i2c_start	;wreg free
  5196   001682                     
  5197                           ;external EEPROM.c: 28:  i2c_write(0xA0);
  5198   001682  0EA0               	movlw	160
  5199   001684  ECC3  F00A         	call	_i2c_write
  5200   001688                     
  5201                           ;external EEPROM.c: 30:  i2c_write(address);
  5202   001688  5029               	movf	read_external_eeprom@address^0,w,c
  5203   00168A  ECC3  F00A         	call	_i2c_write
  5204   00168E                     
  5205                           ;external EEPROM.c: 31:  i2c_rep_start();
  5206   00168E  ECAB  F00A         	call	_i2c_rep_start	;wreg free
  5207   001692                     
  5208                           ;external EEPROM.c: 32:  i2c_write(0xA1);
  5209   001692  0EA1               	movlw	161
  5210   001694  ECC3  F00A         	call	_i2c_write
  5211                           
  5212                           ;external EEPROM.c: 33:  data = i2c_read();
  5213   001698  ECBD  F00A         	call	_i2c_read	;wreg free
  5214   00169C  6E2A               	movwf	read_external_eeprom@data^0,c
  5215   00169E                     
  5216                           ;external EEPROM.c: 34:  i2c_stop();
  5217   00169E  ECB3  F00A         	call	_i2c_stop	;wreg free
  5218                           
  5219                           ;external EEPROM.c: 36:  return data;
  5220   0016A2  502A               	movf	read_external_eeprom@data^0,w,c
  5221   0016A4  0012               	return		;funcret
  5222   0016A6                     __end_of_read_external_eeprom:
  5223                           	callstack 0
  5224                           
  5225 ;; *************** function _i2c_write *****************
  5226 ;; Defined at:
  5227 ;;		line 60 in file "i2c.c"
  5228 ;; Parameters:    Size  Location     Type
  5229 ;;  data            1    wreg     unsigned char 
  5230 ;; Auto vars:     Size  Location     Type
  5231 ;;  data            1    0[COMRAM] unsigned char 
  5232 ;; Return value:  Size  Location     Type
  5233 ;;                  1    wreg      void 
  5234 ;; Registers used:
  5235 ;;		wreg, cstack
  5236 ;; Tracked objects:
  5237 ;;		On entry : 0/0
  5238 ;;		On exit  : 0/0
  5239 ;;		Unchanged: 0/0
  5240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5241 ;;      Params:         0       0       0       0       0       0       0
  5242 ;;      Locals:         1       0       0       0       0       0       0
  5243 ;;      Temps:          0       0       0       0       0       0       0
  5244 ;;      Totals:         1       0       0       0       0       0       0
  5245 ;;Total ram usage:        1 bytes
  5246 ;; Hardware stack levels used: 1
  5247 ;; Hardware stack levels required when called: 1
  5248 ;; This function calls:
  5249 ;;		_i2c_idle
  5250 ;; This function is called by:
  5251 ;;		_write_external_eeprom
  5252 ;;		_read_external_eeprom
  5253 ;;		_write_DS1307
  5254 ;;		_read_DS1307
  5255 ;; This function uses a non-reentrant model
  5256 ;;
  5257                           
  5258                           	psect	text28
  5259   001586                     __ptext28:
  5260                           	callstack 0
  5261   001586                     _i2c_write:
  5262                           	callstack 26
  5263                           
  5264                           ;incstack = 0
  5265                           ;i2c_write@data stored from wreg
  5266   001586  6E28               	movwf	i2c_write@data^0,c
  5267   001588                     
  5268                           ;i2c.c: 60: void i2c_write(unsigned char data);i2c.c: 61: {;i2c.c: 62:  SSPBUF = data;
  5269   001588  C028  FFC9         	movff	i2c_write@data,4041	;volatile
  5270   00158C                     
  5271                           ;i2c.c: 63:  i2c_idle();
  5272   00158C  ECD1  F00A         	call	_i2c_idle	;wreg free
  5273   001590  0012               	return		;funcret
  5274   001592                     __end_of_i2c_write:
  5275                           	callstack 0
  5276                           
  5277 ;; *************** function _i2c_stop *****************
  5278 ;; Defined at:
  5279 ;;		line 48 in file "i2c.c"
  5280 ;; Parameters:    Size  Location     Type
  5281 ;;		None
  5282 ;; Auto vars:     Size  Location     Type
  5283 ;;		None
  5284 ;; Return value:  Size  Location     Type
  5285 ;;                  1    wreg      void 
  5286 ;; Registers used:
  5287 ;;		cstack
  5288 ;; Tracked objects:
  5289 ;;		On entry : 0/0
  5290 ;;		On exit  : 0/0
  5291 ;;		Unchanged: 0/0
  5292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5293 ;;      Params:         0       0       0       0       0       0       0
  5294 ;;      Locals:         0       0       0       0       0       0       0
  5295 ;;      Temps:          0       0       0       0       0       0       0
  5296 ;;      Totals:         0       0       0       0       0       0       0
  5297 ;;Total ram usage:        0 bytes
  5298 ;; Hardware stack levels used: 1
  5299 ;; Hardware stack levels required when called: 1
  5300 ;; This function calls:
  5301 ;;		_i2c_idle
  5302 ;; This function is called by:
  5303 ;;		_write_external_eeprom
  5304 ;;		_read_external_eeprom
  5305 ;;		_write_DS1307
  5306 ;;		_read_DS1307
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310                           	psect	text29
  5311   001566                     __ptext29:
  5312                           	callstack 0
  5313   001566                     _i2c_stop:
  5314                           	callstack 26
  5315   001566                     
  5316                           ;i2c.c: 50:  PEN = 1;
  5317   001566  84C5               	bsf	4037,2,c	;volatile
  5318   001568                     
  5319                           ;i2c.c: 51:  i2c_idle();
  5320   001568  ECD1  F00A         	call	_i2c_idle	;wreg free
  5321   00156C  0012               	return		;funcret
  5322   00156E                     __end_of_i2c_stop:
  5323                           	callstack 0
  5324                           
  5325 ;; *************** function _i2c_start *****************
  5326 ;; Defined at:
  5327 ;;		line 42 in file "i2c.c"
  5328 ;; Parameters:    Size  Location     Type
  5329 ;;		None
  5330 ;; Auto vars:     Size  Location     Type
  5331 ;;		None
  5332 ;; Return value:  Size  Location     Type
  5333 ;;                  1    wreg      void 
  5334 ;; Registers used:
  5335 ;;		cstack
  5336 ;; Tracked objects:
  5337 ;;		On entry : 0/0
  5338 ;;		On exit  : 0/0
  5339 ;;		Unchanged: 0/0
  5340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5341 ;;      Params:         0       0       0       0       0       0       0
  5342 ;;      Locals:         0       0       0       0       0       0       0
  5343 ;;      Temps:          0       0       0       0       0       0       0
  5344 ;;      Totals:         0       0       0       0       0       0       0
  5345 ;;Total ram usage:        0 bytes
  5346 ;; Hardware stack levels used: 1
  5347 ;; Hardware stack levels required when called: 1
  5348 ;; This function calls:
  5349 ;;		_i2c_idle
  5350 ;; This function is called by:
  5351 ;;		_write_external_eeprom
  5352 ;;		_read_external_eeprom
  5353 ;;		_write_DS1307
  5354 ;;		_read_DS1307
  5355 ;; This function uses a non-reentrant model
  5356 ;;
  5357                           
  5358                           	psect	text30
  5359   00155E                     __ptext30:
  5360                           	callstack 0
  5361   00155E                     _i2c_start:
  5362                           	callstack 26
  5363   00155E                     
  5364                           ;i2c.c: 44:  SEN = 1;
  5365   00155E  80C5               	bsf	4037,0,c	;volatile
  5366   001560                     
  5367                           ;i2c.c: 45:  i2c_idle();
  5368   001560  ECD1  F00A         	call	_i2c_idle	;wreg free
  5369   001564  0012               	return		;funcret
  5370   001566                     __end_of_i2c_start:
  5371                           	callstack 0
  5372                           
  5373 ;; *************** function _i2c_rep_start *****************
  5374 ;; Defined at:
  5375 ;;		line 54 in file "i2c.c"
  5376 ;; Parameters:    Size  Location     Type
  5377 ;;		None
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;		None
  5380 ;; Return value:  Size  Location     Type
  5381 ;;                  1    wreg      void 
  5382 ;; Registers used:
  5383 ;;		cstack
  5384 ;; Tracked objects:
  5385 ;;		On entry : 0/0
  5386 ;;		On exit  : 0/0
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5389 ;;      Params:         0       0       0       0       0       0       0
  5390 ;;      Locals:         0       0       0       0       0       0       0
  5391 ;;      Temps:          0       0       0       0       0       0       0
  5392 ;;      Totals:         0       0       0       0       0       0       0
  5393 ;;Total ram usage:        0 bytes
  5394 ;; Hardware stack levels used: 1
  5395 ;; Hardware stack levels required when called: 1
  5396 ;; This function calls:
  5397 ;;		_i2c_idle
  5398 ;; This function is called by:
  5399 ;;		_read_external_eeprom
  5400 ;;		_read_DS1307
  5401 ;; This function uses a non-reentrant model
  5402 ;;
  5403                           
  5404                           	psect	text31
  5405   001556                     __ptext31:
  5406                           	callstack 0
  5407   001556                     _i2c_rep_start:
  5408                           	callstack 26
  5409   001556                     
  5410                           ;i2c.c: 56:  RSEN = 1;
  5411   001556  82C5               	bsf	4037,1,c	;volatile
  5412   001558                     
  5413                           ;i2c.c: 57:  i2c_idle();
  5414   001558  ECD1  F00A         	call	_i2c_idle	;wreg free
  5415   00155C  0012               	return		;funcret
  5416   00155E                     __end_of_i2c_rep_start:
  5417                           	callstack 0
  5418                           
  5419 ;; *************** function _i2c_read *****************
  5420 ;; Defined at:
  5421 ;;		line 78 in file "i2c.c"
  5422 ;; Parameters:    Size  Location     Type
  5423 ;;		None
  5424 ;; Auto vars:     Size  Location     Type
  5425 ;;		None
  5426 ;; Return value:  Size  Location     Type
  5427 ;;                  1    wreg      unsigned char 
  5428 ;; Registers used:
  5429 ;;		wreg, status,2, cstack
  5430 ;; Tracked objects:
  5431 ;;		On entry : 0/0
  5432 ;;		On exit  : 0/0
  5433 ;;		Unchanged: 0/0
  5434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5435 ;;      Params:         0       0       0       0       0       0       0
  5436 ;;      Locals:         0       0       0       0       0       0       0
  5437 ;;      Temps:          0       0       0       0       0       0       0
  5438 ;;      Totals:         0       0       0       0       0       0       0
  5439 ;;Total ram usage:        0 bytes
  5440 ;; Hardware stack levels used: 1
  5441 ;; Hardware stack levels required when called: 2
  5442 ;; This function calls:
  5443 ;;		_i2c_no_ack
  5444 ;;		_i2c_rx_mode
  5445 ;; This function is called by:
  5446 ;;		_read_external_eeprom
  5447 ;;		_read_DS1307
  5448 ;; This function uses a non-reentrant model
  5449 ;;
  5450                           
  5451                           	psect	text32
  5452   00157A                     __ptext32:
  5453                           	callstack 0
  5454   00157A                     _i2c_read:
  5455                           	callstack 25
  5456   00157A                     
  5457                           ;i2c.c: 80:  i2c_rx_mode();
  5458   00157A  ECA7  F00A         	call	_i2c_rx_mode	;wreg free
  5459                           
  5460                           ;i2c.c: 81:  i2c_no_ack();
  5461   00157E  ECA4  F00A         	call	_i2c_no_ack	;wreg free
  5462   001582                     
  5463                           ;i2c.c: 83:  return SSPBUF;
  5464   001582  50C9               	movf	201,w,c	;volatile
  5465   001584  0012               	return		;funcret
  5466   001586                     __end_of_i2c_read:
  5467                           	callstack 0
  5468                           
  5469 ;; *************** function _i2c_rx_mode *****************
  5470 ;; Defined at:
  5471 ;;		line 66 in file "i2c.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;		None
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;		None
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  1    wreg      void 
  5478 ;; Registers used:
  5479 ;;		cstack
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5485 ;;      Params:         0       0       0       0       0       0       0
  5486 ;;      Locals:         0       0       0       0       0       0       0
  5487 ;;      Temps:          0       0       0       0       0       0       0
  5488 ;;      Totals:         0       0       0       0       0       0       0
  5489 ;;Total ram usage:        0 bytes
  5490 ;; Hardware stack levels used: 1
  5491 ;; Hardware stack levels required when called: 1
  5492 ;; This function calls:
  5493 ;;		_i2c_idle
  5494 ;; This function is called by:
  5495 ;;		_i2c_read
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498                           
  5499                           	psect	text33
  5500   00154E                     __ptext33:
  5501                           	callstack 0
  5502   00154E                     _i2c_rx_mode:
  5503                           	callstack 25
  5504   00154E                     
  5505                           ;i2c.c: 68:  RCEN = 1;
  5506   00154E  86C5               	bsf	4037,3,c	;volatile
  5507   001550                     
  5508                           ;i2c.c: 69:  i2c_idle();
  5509   001550  ECD1  F00A         	call	_i2c_idle	;wreg free
  5510   001554  0012               	return		;funcret
  5511   001556                     __end_of_i2c_rx_mode:
  5512                           	callstack 0
  5513                           
  5514 ;; *************** function _i2c_idle *****************
  5515 ;; Defined at:
  5516 ;;		line 27 in file "i2c.c"
  5517 ;; Parameters:    Size  Location     Type
  5518 ;;		None
  5519 ;; Auto vars:     Size  Location     Type
  5520 ;;		None
  5521 ;; Return value:  Size  Location     Type
  5522 ;;                  1    wreg      void 
  5523 ;; Registers used:
  5524 ;;		None
  5525 ;; Tracked objects:
  5526 ;;		On entry : 0/0
  5527 ;;		On exit  : 0/0
  5528 ;;		Unchanged: 0/0
  5529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5530 ;;      Params:         0       0       0       0       0       0       0
  5531 ;;      Locals:         0       0       0       0       0       0       0
  5532 ;;      Temps:          0       0       0       0       0       0       0
  5533 ;;      Totals:         0       0       0       0       0       0       0
  5534 ;;Total ram usage:        0 bytes
  5535 ;; Hardware stack levels used: 1
  5536 ;; This function calls:
  5537 ;;		Nothing
  5538 ;; This function is called by:
  5539 ;;		_i2c_start
  5540 ;;		_i2c_stop
  5541 ;;		_i2c_rep_start
  5542 ;;		_i2c_write
  5543 ;;		_i2c_rx_mode
  5544 ;; This function uses a non-reentrant model
  5545 ;;
  5546                           
  5547                           	psect	text34
  5548   0015A2                     __ptext34:
  5549                           	callstack 0
  5550   0015A2                     _i2c_idle:
  5551                           	callstack 26
  5552   0015A2                     l555:
  5553   0015A2  A69E               	btfss	3998,3,c	;volatile
  5554   0015A4  EFD6  F00A         	goto	u1231
  5555   0015A8  EFD8  F00A         	goto	u1230
  5556   0015AC                     u1231:
  5557   0015AC  EFD1  F00A         	goto	l555
  5558   0015B0                     u1230:
  5559   0015B0                     
  5560                           ;i2c.c: 30:  SSPIF = 0;
  5561   0015B0  969E               	bcf	3998,3,c	;volatile
  5562   0015B2  0012               	return		;funcret
  5563   0015B4                     __end_of_i2c_idle:
  5564                           	callstack 0
  5565                           
  5566 ;; *************** function _i2c_no_ack *****************
  5567 ;; Defined at:
  5568 ;;		line 72 in file "i2c.c"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;		None
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;		None
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  1    wreg      void 
  5575 ;; Registers used:
  5576 ;;		None
  5577 ;; Tracked objects:
  5578 ;;		On entry : 0/0
  5579 ;;		On exit  : 0/0
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5582 ;;      Params:         0       0       0       0       0       0       0
  5583 ;;      Locals:         0       0       0       0       0       0       0
  5584 ;;      Temps:          0       0       0       0       0       0       0
  5585 ;;      Totals:         0       0       0       0       0       0       0
  5586 ;;Total ram usage:        0 bytes
  5587 ;; Hardware stack levels used: 1
  5588 ;; This function calls:
  5589 ;;		Nothing
  5590 ;; This function is called by:
  5591 ;;		_i2c_read
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           	psect	text35
  5596   001548                     __ptext35:
  5597                           	callstack 0
  5598   001548                     _i2c_no_ack:
  5599                           	callstack 26
  5600   001548                     
  5601                           ;i2c.c: 74:  ACKDT = 1;
  5602   001548  8AC5               	bsf	4037,5,c	;volatile
  5603                           
  5604                           ;i2c.c: 75:  ACKEN = 1;
  5605   00154A  88C5               	bsf	4037,4,c	;volatile
  5606   00154C  0012               	return		;funcret
  5607   00154E                     __end_of_i2c_no_ack:
  5608                           	callstack 0
  5609                           
  5610 ;; *************** function ___wmul *****************
  5611 ;; Defined at:
  5612 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  5613 ;; Parameters:    Size  Location     Type
  5614 ;;  multiplier      2    0[COMRAM] unsigned int 
  5615 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;  product         2    4[COMRAM] unsigned int 
  5618 ;; Return value:  Size  Location     Type
  5619 ;;                  2    0[COMRAM] unsigned int 
  5620 ;; Registers used:
  5621 ;;		wreg, status,2, status,0, prodl, prodh
  5622 ;; Tracked objects:
  5623 ;;		On entry : 0/0
  5624 ;;		On exit  : 0/0
  5625 ;;		Unchanged: 0/0
  5626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5627 ;;      Params:         4       0       0       0       0       0       0
  5628 ;;      Locals:         2       0       0       0       0       0       0
  5629 ;;      Temps:          0       0       0       0       0       0       0
  5630 ;;      Totals:         6       0       0       0       0       0       0
  5631 ;;Total ram usage:        6 bytes
  5632 ;; Hardware stack levels used: 1
  5633 ;; This function calls:
  5634 ;;		Nothing
  5635 ;; This function is called by:
  5636 ;;		_download_log
  5637 ;;		_event_reader
  5638 ;; This function uses a non-reentrant model
  5639 ;;
  5640                           
  5641                           	psect	text36
  5642   001656                     __ptext36:
  5643                           	callstack 0
  5644   001656                     ___wmul:
  5645                           	callstack 28
  5646   001656  5028               	movf	___wmul@multiplier^0,w,c
  5647   001658  022A               	mulwf	___wmul@multiplicand^0,c
  5648   00165A  CFF3 F02C          	movff	prodl,___wmul@product
  5649   00165E  CFF4 F02D          	movff	prodh,___wmul@product+1
  5650   001662  5028               	movf	___wmul@multiplier^0,w,c
  5651   001664  022B               	mulwf	(___wmul@multiplicand+1)^0,c
  5652   001666  50F3               	movf	243,w,c
  5653   001668  262D               	addwf	(___wmul@product+1)^0,f,c
  5654   00166A  5029               	movf	(___wmul@multiplier+1)^0,w,c
  5655   00166C  022A               	mulwf	___wmul@multiplicand^0,c
  5656   00166E  50F3               	movf	243,w,c
  5657   001670  262D               	addwf	(___wmul@product+1)^0,f,c
  5658   001672  C02C  F028         	movff	___wmul@product,?___wmul
  5659   001676  C02D  F029         	movff	___wmul@product+1,?___wmul+1
  5660   00167A  0012               	return		;funcret
  5661   00167C                     __end_of___wmul:
  5662                           	callstack 0
  5663                           
  5664 ;; *************** function _display_main_menu *****************
  5665 ;; Defined at:
  5666 ;;		line 60 in file "dashboard.c"
  5667 ;; Parameters:    Size  Location     Type
  5668 ;;		None
  5669 ;; Auto vars:     Size  Location     Type
  5670 ;;		None
  5671 ;; Return value:  Size  Location     Type
  5672 ;;                  1    wreg      void 
  5673 ;; Registers used:
  5674 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5675 ;; Tracked objects:
  5676 ;;		On entry : 0/0
  5677 ;;		On exit  : 0/0
  5678 ;;		Unchanged: 0/0
  5679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5680 ;;      Params:         0       0       0       0       0       0       0
  5681 ;;      Locals:         0       0       0       0       0       0       0
  5682 ;;      Temps:          0       0       0       0       0       0       0
  5683 ;;      Totals:         0       0       0       0       0       0       0
  5684 ;;Total ram usage:        0 bytes
  5685 ;; Hardware stack levels used: 1
  5686 ;; Hardware stack levels required when called: 2
  5687 ;; This function calls:
  5688 ;;		_clcd_print
  5689 ;;		_clcd_putch
  5690 ;;		_clcd_write
  5691 ;; This function is called by:
  5692 ;;		_main
  5693 ;; This function uses a non-reentrant model
  5694 ;;
  5695                           
  5696                           	psect	text37
  5697   002540                     __ptext37:
  5698                           	callstack 0
  5699   002540                     _display_main_menu:
  5700                           	callstack 28
  5701   002540                     
  5702                           ;dashboard.c: 63:     if (key == 2 && menu_index < 3) {
  5703   002540  0E02               	movlw	2
  5704   002542  181A               	xorwf	_key^0,w,c
  5705   002544  A4D8               	btfss	status,2,c
  5706   002546  EFA7  F012         	goto	u1771
  5707   00254A  EFA9  F012         	goto	u1770
  5708   00254E                     u1771:
  5709   00254E  EFD0  F012         	goto	l2958
  5710   002552                     u1770:
  5711   002552  BE07               	btfsc	(_menu_index+1)^0,7,c
  5712   002554  EFB7  F012         	goto	u1780
  5713   002558  5007               	movf	(_menu_index+1)^0,w,c
  5714   00255A  E107               	bnz	u1781
  5715   00255C  0E03               	movlw	3
  5716   00255E  5C06               	subwf	_menu_index^0,w,c
  5717   002560  B0D8               	btfsc	status,0,c
  5718   002562  EFB5  F012         	goto	u1781
  5719   002566  EFB7  F012         	goto	u1780
  5720   00256A                     u1781:
  5721   00256A  EFD0  F012         	goto	l2958
  5722   00256E                     u1780:
  5723   00256E                     
  5724                           ;dashboard.c: 64:         menu_index++;
  5725   00256E  4A06               	infsnz	_menu_index^0,f,c
  5726   002570  2A07               	incf	(_menu_index+1)^0,f,c
  5727   002572                     
  5728                           ;dashboard.c: 66:         if (select_index < 2) {
  5729   002572  BE50               	btfsc	(_select_index+1)^0,7,c
  5730   002574  EFC7  F012         	goto	u1790
  5731   002578  5050               	movf	(_select_index+1)^0,w,c
  5732   00257A  E107               	bnz	u1791
  5733   00257C  0E02               	movlw	2
  5734   00257E  5C4F               	subwf	_select_index^0,w,c
  5735   002580  B0D8               	btfsc	status,0,c
  5736   002582  EFC5  F012         	goto	u1791
  5737   002586  EFC7  F012         	goto	u1790
  5738   00258A                     u1791:
  5739   00258A  EFFE  F012         	goto	l2970
  5740   00258E                     u1790:
  5741   00258E                     
  5742                           ;dashboard.c: 68:             select_index++;
  5743   00258E  4A4F               	infsnz	_select_index^0,f,c
  5744   002590  2A50               	incf	(_select_index+1)^0,f,c
  5745   002592                     
  5746                           ;dashboard.c: 69:             clcd_write(0x01, 0);
  5747   002592  0E00               	movlw	0
  5748   002594  6E28               	movwf	clcd_write@control_bit^0,c
  5749   002596  0E01               	movlw	1
  5750   002598  EC9A  F00B         	call	_clcd_write
  5751   00259C  EFFE  F012         	goto	l2970
  5752   0025A0                     l2958:
  5753   0025A0  041A               	decf	_key^0,w,c
  5754   0025A2  A4D8               	btfss	status,2,c
  5755   0025A4  EFD6  F012         	goto	u1801
  5756   0025A8  EFD8  F012         	goto	u1800
  5757   0025AC                     u1801:
  5758   0025AC  EFFE  F012         	goto	l2970
  5759   0025B0                     u1800:
  5760   0025B0  BE07               	btfsc	(_menu_index+1)^0,7,c
  5761   0025B2  EFE3  F012         	goto	u1811
  5762   0025B6  5007               	movf	(_menu_index+1)^0,w,c
  5763   0025B8  E108               	bnz	u1810
  5764   0025BA  0406               	decf	_menu_index^0,w,c
  5765   0025BC  A0D8               	btfss	status,0,c
  5766   0025BE  EFE3  F012         	goto	u1811
  5767   0025C2  EFE5  F012         	goto	u1810
  5768   0025C6                     u1811:
  5769   0025C6  EFFE  F012         	goto	l2970
  5770   0025CA                     u1810:
  5771   0025CA                     
  5772                           ;dashboard.c: 72:         menu_index--;
  5773   0025CA  0606               	decf	_menu_index^0,f,c
  5774   0025CC  A0D8               	btfss	status,0,c
  5775   0025CE  0607               	decf	(_menu_index+1)^0,f,c
  5776   0025D0                     
  5777                           ;dashboard.c: 73:         if (select_index > 1) {
  5778   0025D0  BE50               	btfsc	(_select_index+1)^0,7,c
  5779   0025D2  EFF4  F012         	goto	u1821
  5780   0025D6  5050               	movf	(_select_index+1)^0,w,c
  5781   0025D8  E109               	bnz	u1820
  5782   0025DA  0E02               	movlw	2
  5783   0025DC  5C4F               	subwf	_select_index^0,w,c
  5784   0025DE  A0D8               	btfss	status,0,c
  5785   0025E0  EFF4  F012         	goto	u1821
  5786   0025E4  EFF6  F012         	goto	u1820
  5787   0025E8                     u1821:
  5788   0025E8  EFFE  F012         	goto	l2970
  5789   0025EC                     u1820:
  5790   0025EC                     
  5791                           ;dashboard.c: 74:             select_index--;
  5792   0025EC  064F               	decf	_select_index^0,f,c
  5793   0025EE  A0D8               	btfss	status,0,c
  5794   0025F0  0650               	decf	(_select_index+1)^0,f,c
  5795   0025F2                     
  5796                           ;dashboard.c: 75:             clcd_write(0x01, 0);
  5797   0025F2  0E00               	movlw	0
  5798   0025F4  6E28               	movwf	clcd_write@control_bit^0,c
  5799   0025F6  0E01               	movlw	1
  5800   0025F8  EC9A  F00B         	call	_clcd_write
  5801   0025FC                     l2970:
  5802                           
  5803                           ;dashboard.c: 78:     if (select_index == 1) {
  5804   0025FC  044F               	decf	_select_index^0,w,c
  5805   0025FE  1050               	iorwf	(_select_index+1)^0,w,c
  5806   002600  A4D8               	btfss	status,2,c
  5807   002602  EF05  F013         	goto	u1831
  5808   002606  EF07  F013         	goto	u1830
  5809   00260A                     u1831:
  5810   00260A  EF35  F013         	goto	l2978
  5811   00260E                     u1830:
  5812   00260E                     
  5813                           ;dashboard.c: 79:         clcd_putch('*', (0x80 + (0)));
  5814   00260E  0E80               	movlw	128
  5815   002610  6E35               	movwf	clcd_putch@addr^0,c
  5816   002612  0E2A               	movlw	42
  5817   002614  ECF5  F00A         	call	_clcd_putch
  5818                           
  5819                           ;dashboard.c: 80:         clcd_putch(' ', (0xC0 + (0)));
  5820   002618  0EC0               	movlw	192
  5821   00261A  6E35               	movwf	clcd_putch@addr^0,c
  5822   00261C  0E20               	movlw	32
  5823   00261E  ECF5  F00A         	call	_clcd_putch
  5824   002622                     
  5825                           ;dashboard.c: 81:         clcd_print(menu[menu_index], (0x80 + (3)));
  5826   002622  90D8               	bcf	status,0,c
  5827   002624  3406               	rlcf	_menu_index^0,w,c
  5828   002626  6ED9               	movwf	fsr2l,c
  5829   002628  3407               	rlcf	(_menu_index+1)^0,w,c
  5830   00262A  6EDA               	movwf	fsr2h,c
  5831   00262C  0E47               	movlw	low _menu
  5832   00262E  26D9               	addwf	fsr2l,f,c
  5833   002630  0E00               	movlw	high _menu
  5834   002632  22DA               	addwfc	fsr2h,f,c
  5835   002634  CFDE F02A          	movff	postinc2,clcd_print@data
  5836   002638  CFDD F02B          	movff	postdec2,clcd_print@data+1
  5837   00263C  0E83               	movlw	131
  5838   00263E  6E2C               	movwf	clcd_print@addr^0,c
  5839   002640  ECA7  F00C         	call	_clcd_print	;wreg free
  5840   002644                     
  5841                           ;dashboard.c: 82:         clcd_print(menu[menu_index + 1], (0xC0 + (3)));
  5842   002644  90D8               	bcf	status,0,c
  5843   002646  3406               	rlcf	_menu_index^0,w,c
  5844   002648  6ED9               	movwf	fsr2l,c
  5845   00264A  3407               	rlcf	(_menu_index+1)^0,w,c
  5846   00264C  6EDA               	movwf	fsr2h,c
  5847   00264E  0E49               	movlw	low (_menu+2)
  5848   002650  26D9               	addwf	fsr2l,f,c
  5849   002652  0E00               	movlw	high (_menu+2)
  5850   002654  22DA               	addwfc	fsr2h,f,c
  5851   002656  CFDE F02A          	movff	postinc2,clcd_print@data
  5852   00265A  CFDD F02B          	movff	postdec2,clcd_print@data+1
  5853   00265E  0EC3               	movlw	195
  5854   002660  6E2C               	movwf	clcd_print@addr^0,c
  5855   002662  ECA7  F00C         	call	_clcd_print	;wreg free
  5856                           
  5857                           ;dashboard.c: 83:     } else {
  5858   002666  EF61  F013         	goto	l2984
  5859   00266A                     l2978:
  5860                           
  5861                           ;dashboard.c: 85:         clcd_putch('*', (0xC0 + (0)));
  5862   00266A  0EC0               	movlw	192
  5863   00266C  6E35               	movwf	clcd_putch@addr^0,c
  5864   00266E  0E2A               	movlw	42
  5865   002670  ECF5  F00A         	call	_clcd_putch
  5866                           
  5867                           ;dashboard.c: 86:         clcd_putch(' ', (0x80 + (0)));
  5868   002674  0E80               	movlw	128
  5869   002676  6E35               	movwf	clcd_putch@addr^0,c
  5870   002678  0E20               	movlw	32
  5871   00267A  ECF5  F00A         	call	_clcd_putch
  5872   00267E                     
  5873                           ;dashboard.c: 88:         clcd_print(menu[menu_index - 1], (0x80 + (3)));
  5874   00267E  90D8               	bcf	status,0,c
  5875   002680  3406               	rlcf	_menu_index^0,w,c
  5876   002682  6ED9               	movwf	fsr2l,c
  5877   002684  3407               	rlcf	(_menu_index+1)^0,w,c
  5878   002686  6EDA               	movwf	fsr2h,c
  5879   002688  0E45               	movlw	low (_menu+65534)
  5880   00268A  26D9               	addwf	fsr2l,f,c
  5881   00268C  0E00               	movlw	high (_menu+65534)
  5882   00268E  22DA               	addwfc	fsr2h,f,c
  5883   002690  CFDE F02A          	movff	postinc2,clcd_print@data
  5884   002694  CFDD F02B          	movff	postdec2,clcd_print@data+1
  5885   002698  0E83               	movlw	131
  5886   00269A  6E2C               	movwf	clcd_print@addr^0,c
  5887   00269C  ECA7  F00C         	call	_clcd_print	;wreg free
  5888   0026A0                     
  5889                           ;dashboard.c: 89:         clcd_print(menu[menu_index ], (0xC0 + (3)));
  5890   0026A0  90D8               	bcf	status,0,c
  5891   0026A2  3406               	rlcf	_menu_index^0,w,c
  5892   0026A4  6ED9               	movwf	fsr2l,c
  5893   0026A6  3407               	rlcf	(_menu_index+1)^0,w,c
  5894   0026A8  6EDA               	movwf	fsr2h,c
  5895   0026AA  0E47               	movlw	low _menu
  5896   0026AC  26D9               	addwf	fsr2l,f,c
  5897   0026AE  0E00               	movlw	high _menu
  5898   0026B0  22DA               	addwfc	fsr2h,f,c
  5899   0026B2  CFDE F02A          	movff	postinc2,clcd_print@data
  5900   0026B6  CFDD F02B          	movff	postdec2,clcd_print@data+1
  5901   0026BA  0EC3               	movlw	195
  5902   0026BC  6E2C               	movwf	clcd_print@addr^0,c
  5903   0026BE  ECA7  F00C         	call	_clcd_print	;wreg free
  5904   0026C2                     l2984:
  5905                           
  5906                           ;dashboard.c: 91:     if (key == 11) {
  5907   0026C2  0E0B               	movlw	11
  5908   0026C4  181A               	xorwf	_key^0,w,c
  5909   0026C6  A4D8               	btfss	status,2,c
  5910   0026C8  EF68  F013         	goto	u1841
  5911   0026CC  EF6A  F013         	goto	u1840
  5912   0026D0                     u1841:
  5913   0026D0  EF9D  F013         	goto	l180
  5914   0026D4                     u1840:
  5915   0026D4                     
  5916                           ;dashboard.c: 92:         clcd_write(0x01, 0);
  5917   0026D4  0E00               	movlw	0
  5918   0026D6  6E28               	movwf	clcd_write@control_bit^0,c
  5919   0026D8  0E01               	movlw	1
  5920   0026DA  EC9A  F00B         	call	_clcd_write
  5921   0026DE                     
  5922                           ;dashboard.c: 93:         if (menu_index == 0) {
  5923   0026DE  5006               	movf	_menu_index^0,w,c
  5924   0026E0  1007               	iorwf	(_menu_index+1)^0,w,c
  5925   0026E2  A4D8               	btfss	status,2,c
  5926   0026E4  EF76  F013         	goto	u1851
  5927   0026E8  EF78  F013         	goto	u1850
  5928   0026EC                     u1851:
  5929   0026EC  EF7A  F013         	goto	l2992
  5930   0026F0                     u1850:
  5931   0026F0                     
  5932                           ;dashboard.c: 94:             state = e_view_log;
  5933   0026F0  0E02               	movlw	2
  5934   0026F2  6E19               	movwf	_state^0,c
  5935   0026F4                     l2992:
  5936                           
  5937                           ;dashboard.c: 96:         if (menu_index == 1) {
  5938   0026F4  0406               	decf	_menu_index^0,w,c
  5939   0026F6  1007               	iorwf	(_menu_index+1)^0,w,c
  5940   0026F8  A4D8               	btfss	status,2,c
  5941   0026FA  EF81  F013         	goto	u1861
  5942   0026FE  EF83  F013         	goto	u1860
  5943   002702                     u1861:
  5944   002702  EF85  F013         	goto	l2996
  5945   002706                     u1860:
  5946   002706                     
  5947                           ;dashboard.c: 97:             state = e_clear_log;
  5948   002706  0E05               	movlw	5
  5949   002708  6E19               	movwf	_state^0,c
  5950   00270A                     l2996:
  5951                           
  5952                           ;dashboard.c: 99:         if (menu_index == 2) {
  5953   00270A  0E02               	movlw	2
  5954   00270C  1806               	xorwf	_menu_index^0,w,c
  5955   00270E  1007               	iorwf	(_menu_index+1)^0,w,c
  5956   002710  A4D8               	btfss	status,2,c
  5957   002712  EF8D  F013         	goto	u1871
  5958   002716  EF8F  F013         	goto	u1870
  5959   00271A                     u1871:
  5960   00271A  EF91  F013         	goto	l3000
  5961   00271E                     u1870:
  5962   00271E                     
  5963                           ;dashboard.c: 100:             state = e_download_log;
  5964   00271E  0E04               	movlw	4
  5965   002720  6E19               	movwf	_state^0,c
  5966   002722                     l3000:
  5967                           
  5968                           ;dashboard.c: 102:         if (menu_index == 3) {
  5969   002722  0E03               	movlw	3
  5970   002724  1806               	xorwf	_menu_index^0,w,c
  5971   002726  1007               	iorwf	(_menu_index+1)^0,w,c
  5972   002728  A4D8               	btfss	status,2,c
  5973   00272A  EF99  F013         	goto	u1881
  5974   00272E  EF9B  F013         	goto	u1880
  5975   002732                     u1881:
  5976   002732  EF9D  F013         	goto	l180
  5977   002736                     u1880:
  5978   002736                     
  5979                           ;dashboard.c: 103:             state = e_set_time;
  5980   002736  0E03               	movlw	3
  5981   002738  6E19               	movwf	_state^0,c
  5982   00273A                     l180:
  5983   00273A  0012               	return		;funcret
  5984   00273C                     __end_of_display_main_menu:
  5985                           	callstack 0
  5986                           
  5987 ;; *************** function _clcd_putch *****************
  5988 ;; Defined at:
  5989 ;;		line 67 in file "clcd.c"
  5990 ;; Parameters:    Size  Location     Type
  5991 ;;  data            1    wreg     const unsigned char 
  5992 ;;  addr            1   13[COMRAM] unsigned char 
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;  data            1   14[COMRAM] const unsigned char 
  5995 ;; Return value:  Size  Location     Type
  5996 ;;                  1    wreg      void 
  5997 ;; Registers used:
  5998 ;;		wreg, status,2, cstack
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/0
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6004 ;;      Params:         1       0       0       0       0       0       0
  6005 ;;      Locals:         1       0       0       0       0       0       0
  6006 ;;      Temps:          0       0       0       0       0       0       0
  6007 ;;      Totals:         2       0       0       0       0       0       0
  6008 ;;Total ram usage:        2 bytes
  6009 ;; Hardware stack levels used: 1
  6010 ;; Hardware stack levels required when called: 1
  6011 ;; This function calls:
  6012 ;;		_clcd_write
  6013 ;; This function is called by:
  6014 ;;		_view_dashboard
  6015 ;;		_display_main_menu
  6016 ;;		_set_time
  6017 ;; This function uses a non-reentrant model
  6018 ;;
  6019                           
  6020                           	psect	text38
  6021   0015EA                     __ptext38:
  6022                           	callstack 0
  6023   0015EA                     _clcd_putch:
  6024                           	callstack 28
  6025                           
  6026                           ;incstack = 0
  6027                           ;clcd_putch@data stored from wreg
  6028   0015EA  6E36               	movwf	clcd_putch@data^0,c
  6029   0015EC                     
  6030                           ;clcd.c: 67: void clcd_putch(const unsigned char data, unsigned char addr);clcd.c: 68: {
      +                          ;clcd.c: 69:  clcd_write(addr, 0);
  6031   0015EC  0E00               	movlw	0
  6032   0015EE  6E28               	movwf	clcd_write@control_bit^0,c
  6033   0015F0  5035               	movf	clcd_putch@addr^0,w,c
  6034   0015F2  EC9A  F00B         	call	_clcd_write
  6035                           
  6036                           ;clcd.c: 70:  clcd_write(data, 1);
  6037   0015F6  0E01               	movlw	1
  6038   0015F8  6E28               	movwf	clcd_write@control_bit^0,c
  6039   0015FA  5036               	movf	clcd_putch@data^0,w,c
  6040   0015FC  EC9A  F00B         	call	_clcd_write
  6041   001600  0012               	return		;funcret
  6042   001602                     __end_of_clcd_putch:
  6043                           	callstack 0
  6044                           
  6045 ;; *************** function _clear_log *****************
  6046 ;; Defined at:
  6047 ;;		line 12 in file "clear_log.c"
  6048 ;; Parameters:    Size  Location     Type
  6049 ;;		None
  6050 ;; Auto vars:     Size  Location     Type
  6051 ;;		None
  6052 ;; Return value:  Size  Location     Type
  6053 ;;                  1    wreg      void 
  6054 ;; Registers used:
  6055 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6056 ;; Tracked objects:
  6057 ;;		On entry : 0/0
  6058 ;;		On exit  : 0/0
  6059 ;;		Unchanged: 0/0
  6060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6061 ;;      Params:         0       0       0       0       0       0       0
  6062 ;;      Locals:         0       0       0       0       0       0       0
  6063 ;;      Temps:          2       0       0       0       0       0       0
  6064 ;;      Totals:         2       0       0       0       0       0       0
  6065 ;;Total ram usage:        2 bytes
  6066 ;; Hardware stack levels used: 1
  6067 ;; Hardware stack levels required when called: 2
  6068 ;; This function calls:
  6069 ;;		_clcd_print
  6070 ;;		_clcd_write
  6071 ;; This function is called by:
  6072 ;;		_main
  6073 ;; This function uses a non-reentrant model
  6074 ;;
  6075                           
  6076                           	psect	text39
  6077   001836                     __ptext39:
  6078                           	callstack 0
  6079   001836                     _clear_log:
  6080                           	callstack 28
  6081   001836                     
  6082                           ;clear_log.c: 14:     event_count=0;
  6083   001836  0E00               	movlw	0
  6084   001838  6E15               	movwf	(_event_count+1)^0,c
  6085   00183A  0E00               	movlw	0
  6086   00183C  6E14               	movwf	_event_count^0,c
  6087                           
  6088                           ;clear_log.c: 15:     write_addr = 0X00;
  6089   00183E  0E00               	movlw	0
  6090   001840  6E1B               	movwf	_write_addr^0,c
  6091   001842                     
  6092                           ;clear_log.c: 16:     clcd_print("Logs Cleared",(0x80 + (1)));
  6093   001842  0E94               	movlw	low STR_30
  6094   001844  6E2A               	movwf	clcd_print@data^0,c
  6095   001846  0E2F               	movlw	high STR_30
  6096   001848  6E2B               	movwf	(clcd_print@data+1)^0,c
  6097   00184A  0E81               	movlw	129
  6098   00184C  6E2C               	movwf	clcd_print@addr^0,c
  6099   00184E  ECA7  F00C         	call	_clcd_print	;wreg free
  6100   001852                     
  6101                           ;clear_log.c: 17:     clcd_print("event_count=0",(0xC0 + (1)));
  6102   001852  0E78               	movlw	low STR_31
  6103   001854  6E2A               	movwf	clcd_print@data^0,c
  6104   001856  0E2F               	movlw	high STR_31
  6105   001858  6E2B               	movwf	(clcd_print@data+1)^0,c
  6106   00185A  0EC1               	movlw	193
  6107   00185C  6E2C               	movwf	clcd_print@addr^0,c
  6108   00185E  ECA7  F00C         	call	_clcd_print	;wreg free
  6109   001862                     
  6110                           ;clear_log.c: 18:     _delay((unsigned long)((2000)*(20000000/4000.0)));
  6111   001862  0E33               	movlw	51
  6112   001864  6E2E               	movwf	(??_clear_log+1)^0,c
  6113   001866  0EBB               	movlw	187
  6114   001868  6E2D               	movwf	??_clear_log^0,c
  6115   00186A  0EE0               	movlw	224
  6116   00186C                     u2367:
  6117   00186C  2EE8               	decfsz	wreg,f,c
  6118   00186E  D7FE               	bra	u2367
  6119   001870  2E2D               	decfsz	??_clear_log^0,f,c
  6120   001872  D7FC               	bra	u2367
  6121   001874  2E2E               	decfsz	(??_clear_log+1)^0,f,c
  6122   001876  D7FA               	bra	u2367
  6123   001878                     
  6124                           ;clear_log.c: 19:     state = e_main_menu;
  6125   001878  0E01               	movlw	1
  6126   00187A  6E19               	movwf	_state^0,c
  6127   00187C                     
  6128                           ;clear_log.c: 20:     clcd_write(0x01, 0);
  6129   00187C  0E00               	movlw	0
  6130   00187E  6E28               	movwf	clcd_write@control_bit^0,c
  6131   001880  0E01               	movlw	1
  6132   001882  EC9A  F00B         	call	_clcd_write
  6133   001886  0012               	return		;funcret
  6134   001888                     __end_of_clear_log:
  6135                           	callstack 0
  6136                           
  6137 ;; *************** function _clcd_print *****************
  6138 ;; Defined at:
  6139 ;;		line 58 in file "clcd.c"
  6140 ;; Parameters:    Size  Location     Type
  6141 ;;  data            2    2[COMRAM] PTR const unsigned char 
  6142 ;;		 -> STR_31(14), STR_30(13), STR_29(18), STR_28(11), 
  6143 ;;		 -> STR_27(9), STR_26(3), STR_25(3), STR_24(3), 
  6144 ;;		 -> STR_23(9), STR_22(13), STR_21(14), events(110), 
  6145 ;;		 -> STR_17(12), STR_16(8), STR_14(17), time(9), 
  6146 ;;		 -> STR_13(18), STR_12(22), STR_11(19), STR_10(20), 
  6147 ;;		 -> STR_9(3), STR_8(3), STR_7(3), STR_6(3), 
  6148 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(3), 
  6149 ;;		 -> STR_1(3), 
  6150 ;;  addr            1    4[COMRAM] unsigned char 
  6151 ;; Auto vars:     Size  Location     Type
  6152 ;;		None
  6153 ;; Return value:  Size  Location     Type
  6154 ;;                  1    wreg      void 
  6155 ;; Registers used:
  6156 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6157 ;; Tracked objects:
  6158 ;;		On entry : 0/0
  6159 ;;		On exit  : 0/0
  6160 ;;		Unchanged: 0/0
  6161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6162 ;;      Params:         3       0       0       0       0       0       0
  6163 ;;      Locals:         0       0       0       0       0       0       0
  6164 ;;      Temps:          0       0       0       0       0       0       0
  6165 ;;      Totals:         3       0       0       0       0       0       0
  6166 ;;Total ram usage:        3 bytes
  6167 ;; Hardware stack levels used: 1
  6168 ;; Hardware stack levels required when called: 1
  6169 ;; This function calls:
  6170 ;;		_clcd_write
  6171 ;; This function is called by:
  6172 ;;		_view_dashboard
  6173 ;;		_display_main_menu
  6174 ;;		_download_log
  6175 ;;		_set_time
  6176 ;;		_display_time
  6177 ;;		_view_log
  6178 ;;		_clear_log
  6179 ;; This function uses a non-reentrant model
  6180 ;;
  6181                           
  6182                           	psect	text40
  6183   00194E                     __ptext40:
  6184                           	callstack 0
  6185   00194E                     _clcd_print:
  6186                           	callstack 28
  6187   00194E                     
  6188                           ;clcd.c: 58: void clcd_print(const unsigned char *data, unsigned char addr);clcd.c: 59: 
      +                          {;clcd.c: 60:  clcd_write(addr, 0);
  6189   00194E  0E00               	movlw	0
  6190   001950  6E28               	movwf	clcd_write@control_bit^0,c
  6191   001952  502C               	movf	clcd_print@addr^0,w,c
  6192   001954  EC9A  F00B         	call	_clcd_write
  6193                           
  6194                           ;clcd.c: 61:  while (*data != '\0')
  6195   001958  EFC4  F00C         	goto	l2550
  6196   00195C                     l2546:
  6197                           
  6198                           ;clcd.c: 62:  {;clcd.c: 63:   clcd_write(*data++, 1);
  6199   00195C  0E01               	movlw	1
  6200   00195E  6E28               	movwf	clcd_write@control_bit^0,c
  6201   001960  C02A  FFF6         	movff	clcd_print@data,tblptrl
  6202   001964  C02B  FFF7         	movff	clcd_print@data+1,tblptrh
  6203   001968  6AF8               	clrf	tblptru,c
  6204   00196A  0E05               	movlw	(high __ramtop+-1)
  6205   00196C  64F7               	cpfsgt	tblptrh,c
  6206   00196E  D003               	bra	u1277
  6207   001970  0008               	tblrd		*
  6208   001972  50F5               	movf	tablat,w,c
  6209   001974  D005               	bra	u1270
  6210   001976                     u1277:
  6211   001976  CFF6 FFE9          	movff	tblptrl,fsr0l
  6212   00197A  CFF7 FFEA          	movff	tblptrh,fsr0h
  6213   00197E  50EF               	movf	indf0,w,c
  6214   001980                     u1270:
  6215   001980  EC9A  F00B         	call	_clcd_write
  6216   001984  4A2A               	infsnz	clcd_print@data^0,f,c
  6217   001986  2A2B               	incf	(clcd_print@data+1)^0,f,c
  6218   001988                     l2550:
  6219                           
  6220                           ;clcd.c: 61:  while (*data != '\0')
  6221   001988  C02A  FFF6         	movff	clcd_print@data,tblptrl
  6222   00198C  C02B  FFF7         	movff	clcd_print@data+1,tblptrh
  6223   001990  6AF8               	clrf	tblptru,c
  6224   001992  0E05               	movlw	(high __ramtop+-1)
  6225   001994  64F7               	cpfsgt	tblptrh,c
  6226   001996  D003               	bra	u1287
  6227   001998  0008               	tblrd		*
  6228   00199A  50F5               	movf	tablat,w,c
  6229   00199C  D005               	bra	u1280
  6230   00199E                     u1287:
  6231   00199E  CFF6 FFE9          	movff	tblptrl,fsr0l
  6232   0019A2  CFF7 FFEA          	movff	tblptrh,fsr0h
  6233   0019A6  50EF               	movf	indf0,w,c
  6234   0019A8                     u1280:
  6235   0019A8  0900               	iorlw	0
  6236   0019AA  A4D8               	btfss	status,2,c
  6237   0019AC  EFDA  F00C         	goto	u1291
  6238   0019B0  EFDC  F00C         	goto	u1290
  6239   0019B4                     u1291:
  6240   0019B4  EFAE  F00C         	goto	l2546
  6241   0019B8                     u1290:
  6242   0019B8  0012               	return		;funcret
  6243   0019BA                     __end_of_clcd_print:
  6244                           	callstack 0
  6245                           
  6246 ;; *************** function _clcd_write *****************
  6247 ;; Defined at:
  6248 ;;		line 4 in file "clcd.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;  byte            1    wreg     unsigned char 
  6251 ;;  control_bit     1    0[COMRAM] unsigned char 
  6252 ;; Auto vars:     Size  Location     Type
  6253 ;;  byte            1    1[COMRAM] unsigned char 
  6254 ;; Return value:  Size  Location     Type
  6255 ;;                  1    wreg      void 
  6256 ;; Registers used:
  6257 ;;		wreg
  6258 ;; Tracked objects:
  6259 ;;		On entry : 0/0
  6260 ;;		On exit  : 0/0
  6261 ;;		Unchanged: 0/0
  6262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6263 ;;      Params:         1       0       0       0       0       0       0
  6264 ;;      Locals:         1       0       0       0       0       0       0
  6265 ;;      Temps:          0       0       0       0       0       0       0
  6266 ;;      Totals:         2       0       0       0       0       0       0
  6267 ;;Total ram usage:        2 bytes
  6268 ;; Hardware stack levels used: 1
  6269 ;; This function calls:
  6270 ;;		Nothing
  6271 ;; This function is called by:
  6272 ;;		_main
  6273 ;;		_display_main_menu
  6274 ;;		_download_log
  6275 ;;		_set_time
  6276 ;;		_init_clcd
  6277 ;;		_clcd_print
  6278 ;;		_clcd_putch
  6279 ;;		_view_log
  6280 ;;		_clear_log
  6281 ;; This function uses a non-reentrant model
  6282 ;;
  6283                           
  6284                           	psect	text41
  6285   001734                     __ptext41:
  6286                           	callstack 0
  6287   001734                     _clcd_write:
  6288                           	callstack 29
  6289                           
  6290                           ;incstack = 0
  6291                           ;clcd_write@byte stored from wreg
  6292   001734  6E29               	movwf	clcd_write@byte^0,c
  6293   001736                     
  6294                           ;clcd.c: 4: void clcd_write(unsigned char byte, unsigned char control_bit);clcd.c: 5: {;
      +                          clcd.c: 6:  RC1 = control_bit;
  6295   001736  B028               	btfsc	clcd_write@control_bit^0,0,c
  6296   001738  EFA0  F00B         	goto	u1241
  6297   00173C  EFA3  F00B         	goto	u1240
  6298   001740                     u1241:
  6299   001740  8282               	bsf	3970,1,c	;volatile
  6300   001742  EFA4  F00B         	goto	u1255
  6301   001746                     u1240:
  6302   001746  9282               	bcf	3970,1,c	;volatile
  6303   001748                     u1255:
  6304   001748                     
  6305                           ;clcd.c: 7:  PORTD = byte;
  6306   001748  C029  FF83         	movff	clcd_write@byte,3971	;volatile
  6307   00174C                     
  6308                           ;clcd.c: 10:  RC2 = 1;
  6309   00174C  8482               	bsf	3970,2,c	;volatile
  6310   00174E                     
  6311                           ;clcd.c: 11:  RC2 = 0;
  6312   00174E  9482               	bcf	3970,2,c	;volatile
  6313   001750                     
  6314                           ;clcd.c: 13:  TRISD7 = 0xFF;
  6315   001750  8E95               	bsf	3989,7,c	;volatile
  6316   001752                     
  6317                           ;clcd.c: 14:  RC0 = 1;
  6318   001752  8082               	bsf	3970,0,c	;volatile
  6319   001754                     
  6320                           ;clcd.c: 15:  RC1 = 0;
  6321   001754  9282               	bcf	3970,1,c	;volatile
  6322   001756                     l2516:
  6323                           
  6324                           ;clcd.c: 18:  {;clcd.c: 19:   RC2 = 1;
  6325   001756  8482               	bsf	3970,2,c	;volatile
  6326   001758                     
  6327                           ;clcd.c: 20:   RC2 = 0;
  6328   001758  9482               	bcf	3970,2,c	;volatile
  6329   00175A                     
  6330                           ;clcd.c: 21:  } while (RD7);
  6331   00175A  BE83               	btfsc	3971,7,c	;volatile
  6332   00175C  EFB2  F00B         	goto	u1261
  6333   001760  EFB4  F00B         	goto	u1260
  6334   001764                     u1261:
  6335   001764  EFAB  F00B         	goto	l2516
  6336   001768                     u1260:
  6337   001768                     
  6338                           ;clcd.c: 23:  RC0 = 0;
  6339   001768  9082               	bcf	3970,0,c	;volatile
  6340                           
  6341                           ;clcd.c: 24:  TRISD7 = 0x00;
  6342   00176A  9E95               	bcf	3989,7,c	;volatile
  6343   00176C  0012               	return		;funcret
  6344   00176E                     __end_of_clcd_write:
  6345                           	callstack 0
  6346                           
  6347                           	psect	rparam
  6348   000000                     
  6349                           	psect	idloc
  6350                           
  6351                           ;Config register IDLOC0 @ 0x200000
  6352                           ;	unspecified, using default values
  6353   200000                     	org	2097152
  6354   200000  FF                 	db	255
  6355                           
  6356                           ;Config register IDLOC1 @ 0x200001
  6357                           ;	unspecified, using default values
  6358   200001                     	org	2097153
  6359   200001  FF                 	db	255
  6360                           
  6361                           ;Config register IDLOC2 @ 0x200002
  6362                           ;	unspecified, using default values
  6363   200002                     	org	2097154
  6364   200002  FF                 	db	255
  6365                           
  6366                           ;Config register IDLOC3 @ 0x200003
  6367                           ;	unspecified, using default values
  6368   200003                     	org	2097155
  6369   200003  FF                 	db	255
  6370                           
  6371                           ;Config register IDLOC4 @ 0x200004
  6372                           ;	unspecified, using default values
  6373   200004                     	org	2097156
  6374   200004  FF                 	db	255
  6375                           
  6376                           ;Config register IDLOC5 @ 0x200005
  6377                           ;	unspecified, using default values
  6378   200005                     	org	2097157
  6379   200005  FF                 	db	255
  6380                           
  6381                           ;Config register IDLOC6 @ 0x200006
  6382                           ;	unspecified, using default values
  6383   200006                     	org	2097158
  6384   200006  FF                 	db	255
  6385                           
  6386                           ;Config register IDLOC7 @ 0x200007
  6387                           ;	unspecified, using default values
  6388   200007                     	org	2097159
  6389   200007  FF                 	db	255
  6390                           
  6391                           	psect	config
  6392                           
  6393                           ; Padding undefined space
  6394   300000                     	org	3145728
  6395   300000  FF                 	db	255
  6396                           
  6397                           ;Config register CONFIG1H @ 0x300001
  6398                           ;	unspecified, using default values
  6399                           ;	Oscillator Selection bits
  6400                           ;	OSC = 0x7, unprogrammed default
  6401                           ;	Fail-Safe Clock Monitor Enable bit
  6402                           ;	FCMEN = 0x0, unprogrammed default
  6403                           ;	Internal/External Oscillator Switchover bit
  6404                           ;	IESO = 0x0, unprogrammed default
  6405   300001                     	org	3145729
  6406   300001  07                 	db	7
  6407                           
  6408                           ;Config register CONFIG2L @ 0x300002
  6409                           ;	unspecified, using default values
  6410                           ;	Power-up Timer Enable bit
  6411                           ;	PWRT = 0x1, unprogrammed default
  6412                           ;	Brown-out Reset Enable bits
  6413                           ;	BOREN = 0x3, unprogrammed default
  6414                           ;	Brown-out Reset Voltage bits
  6415                           ;	BORV = 0x3, unprogrammed default
  6416   300002                     	org	3145730
  6417   300002  1F                 	db	31
  6418                           
  6419                           ;Config register CONFIG2H @ 0x300003
  6420                           ;	unspecified, using default values
  6421                           ;	Watchdog Timer Enable bit
  6422                           ;	WDT = 0x1, unprogrammed default
  6423                           ;	Watchdog Timer Postscale Select bits
  6424                           ;	WDTPS = 0xF, unprogrammed default
  6425   300003                     	org	3145731
  6426   300003  1F                 	db	31
  6427                           
  6428                           ; Padding undefined space
  6429   300004                     	org	3145732
  6430   300004  FF                 	db	255
  6431                           
  6432                           ;Config register CONFIG3H @ 0x300005
  6433                           ;	unspecified, using default values
  6434                           ;	PORTB A/D Enable bit
  6435                           ;	PBADEN = 0x1, unprogrammed default
  6436                           ;	Low-Power Timer 1 Oscillator Enable bit
  6437                           ;	LPT1OSC = 0x0, unprogrammed default
  6438                           ;	MCLR Pin Enable bit
  6439                           ;	MCLRE = 0x1, unprogrammed default
  6440   300005                     	org	3145733
  6441   300005  82                 	db	130
  6442                           
  6443                           ;Config register CONFIG4L @ 0x300006
  6444                           ;	unspecified, using default values
  6445                           ;	Stack Full/Underflow Reset Enable bit
  6446                           ;	STVREN = 0x1, unprogrammed default
  6447                           ;	Single-Supply ICSP Enable bit
  6448                           ;	LVP = 0x1, unprogrammed default
  6449                           ;	Boot Block Size Select bit
  6450                           ;	BBSIZ = 0x0, unprogrammed default
  6451                           ;	Extended Instruction Set Enable bit
  6452                           ;	XINST = 0x0, unprogrammed default
  6453                           ;	Background Debugger Enable bit
  6454                           ;	DEBUG = 0x1, unprogrammed default
  6455   300006                     	org	3145734
  6456   300006  85                 	db	133
  6457                           
  6458                           ; Padding undefined space
  6459   300007                     	org	3145735
  6460   300007  FF                 	db	255
  6461                           
  6462                           ;Config register CONFIG5L @ 0x300008
  6463                           ;	unspecified, using default values
  6464                           ;	Code Protection bit
  6465                           ;	CP0 = 0x1, unprogrammed default
  6466                           ;	Code Protection bit
  6467                           ;	CP1 = 0x1, unprogrammed default
  6468                           ;	Code Protection bit
  6469                           ;	CP2 = 0x1, unprogrammed default
  6470                           ;	Code Protection bit
  6471                           ;	CP3 = 0x1, unprogrammed default
  6472   300008                     	org	3145736
  6473   300008  0F                 	db	15
  6474                           
  6475                           ;Config register CONFIG5H @ 0x300009
  6476                           ;	unspecified, using default values
  6477                           ;	Boot Block Code Protection bit
  6478                           ;	CPB = 0x1, unprogrammed default
  6479                           ;	Data EEPROM Code Protection bit
  6480                           ;	CPD = 0x1, unprogrammed default
  6481   300009                     	org	3145737
  6482   300009  C0                 	db	192
  6483                           
  6484                           ;Config register CONFIG6L @ 0x30000A
  6485                           ;	unspecified, using default values
  6486                           ;	Write Protection bit
  6487                           ;	WRT0 = 0x1, unprogrammed default
  6488                           ;	Write Protection bit
  6489                           ;	WRT1 = 0x1, unprogrammed default
  6490                           ;	Write Protection bit
  6491                           ;	WRT2 = 0x1, unprogrammed default
  6492                           ;	Write Protection bit
  6493                           ;	WRT3 = 0x1, unprogrammed default
  6494   30000A                     	org	3145738
  6495   30000A  0F                 	db	15
  6496                           
  6497                           ;Config register CONFIG6H @ 0x30000B
  6498                           ;	unspecified, using default values
  6499                           ;	Configuration Register Write Protection bit
  6500                           ;	WRTC = 0x1, unprogrammed default
  6501                           ;	Boot Block Write Protection bit
  6502                           ;	WRTB = 0x1, unprogrammed default
  6503                           ;	Data EEPROM Write Protection bit
  6504                           ;	WRTD = 0x1, unprogrammed default
  6505   30000B                     	org	3145739
  6506   30000B  E0                 	db	224
  6507                           
  6508                           ;Config register CONFIG7L @ 0x30000C
  6509                           ;	unspecified, using default values
  6510                           ;	Table Read Protection bit
  6511                           ;	EBTR0 = 0x1, unprogrammed default
  6512                           ;	Table Read Protection bit
  6513                           ;	EBTR1 = 0x1, unprogrammed default
  6514                           ;	Table Read Protection bit
  6515                           ;	EBTR2 = 0x1, unprogrammed default
  6516                           ;	Table Read Protection bit
  6517                           ;	EBTR3 = 0x1, unprogrammed default
  6518   30000C                     	org	3145740
  6519   30000C  0F                 	db	15
  6520                           
  6521                           ;Config register CONFIG7H @ 0x30000D
  6522                           ;	unspecified, using default values
  6523                           ;	Boot Block Table Read Protection bit
  6524                           ;	EBTRB = 0x1, unprogrammed default
  6525   30000D                     	org	3145741
  6526   30000D  40                 	db	64
  6527                           tosu	equ	0xFFF
  6528                           tosh	equ	0xFFE
  6529                           tosl	equ	0xFFD
  6530                           stkptr	equ	0xFFC
  6531                           pclatu	equ	0xFFB
  6532                           pclath	equ	0xFFA
  6533                           pcl	equ	0xFF9
  6534                           tblptru	equ	0xFF8
  6535                           tblptrh	equ	0xFF7
  6536                           tblptrl	equ	0xFF6
  6537                           tablat	equ	0xFF5
  6538                           prodh	equ	0xFF4
  6539                           prodl	equ	0xFF3
  6540                           indf0	equ	0xFEF
  6541                           postinc0	equ	0xFEE
  6542                           postdec0	equ	0xFED
  6543                           preinc0	equ	0xFEC
  6544                           plusw0	equ	0xFEB
  6545                           fsr0h	equ	0xFEA
  6546                           fsr0l	equ	0xFE9
  6547                           wreg	equ	0xFE8
  6548                           indf1	equ	0xFE7
  6549                           postinc1	equ	0xFE6
  6550                           postdec1	equ	0xFE5
  6551                           preinc1	equ	0xFE4
  6552                           plusw1	equ	0xFE3
  6553                           fsr1h	equ	0xFE2
  6554                           fsr1l	equ	0xFE1
  6555                           bsr	equ	0xFE0
  6556                           indf2	equ	0xFDF
  6557                           postinc2	equ	0xFDE
  6558                           postdec2	equ	0xFDD
  6559                           preinc2	equ	0xFDC
  6560                           plusw2	equ	0xFDB
  6561                           fsr2h	equ	0xFDA
  6562                           fsr2l	equ	0xFD9
  6563                           status	equ	0xFD8

Data Sizes:
    Strings     287
    Constant    0
    Data        29
    BSS         149
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     31      81
    BANK0           160      0     128
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    puts@s	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_20(CODE[3]), STR_19(CODE[4]), STR_18(CODE[17]), STR_15(CODE[22]), 

    event_store@gear	PTR unsigned char  size(2) Largest target is 3
		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 
		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    event_store@time	PTR unsigned char  size(2) Largest target is 9
		 -> time(COMRAM[9]), 

    clcd_print@data	PTR const unsigned char  size(2) Largest target is 110
		 -> STR_31(CODE[14]), STR_30(CODE[13]), STR_29(CODE[18]), STR_28(CODE[11]), 
		 -> STR_27(CODE[9]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[9]), STR_22(CODE[13]), STR_21(CODE[14]), events(BANK0[110]), 
		 -> STR_17(CODE[12]), STR_16(CODE[8]), STR_14(CODE[17]), time(COMRAM[9]), 
		 -> STR_13(CODE[18]), STR_12(CODE[22]), STR_11(CODE[19]), STR_10(CODE[20]), 
		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 
		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    menu	PTR unsigned char [4] size(2) Largest target is 22
		 -> STR_13(CODE[18]), STR_12(CODE[22]), STR_11(CODE[19]), STR_10(CODE[20]), 

    gear	PTR unsigned char [9] size(2) Largest target is 3
		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 
		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 


Critical Paths under _main in COMRAM

    _view_log->_event_reader
    _view_dashboard->_event_store
    _event_store->_write_external_eeprom
    _write_external_eeprom->___lwdiv
    ___lwdiv->_read_adc
    _display_time->_clcd_print
    _set_time->_clcd_putch
    _init_config->_init_DS1307
    _init_clcd->_clcd_write
    _init_DS1307->_read_DS1307
    _init_DS1307->_write_DS1307
    _write_DS1307->_i2c_write
    _get_time->_read_DS1307
    _read_DS1307->_i2c_write
    _download_log->_event_reader
    _puts->_putch
    _event_reader->___wmul
    _read_external_eeprom->_i2c_write
    _display_main_menu->_clcd_putch
    _clcd_putch->___lwdiv
    _clear_log->_clcd_print
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   81756
                                             29 COMRAM     2     2      0
                         _clcd_write
                          _clear_log
                  _display_main_menu
                       _download_log
                           _get_time
                        _init_config
                      _read_switches
                           _set_time
                     _view_dashboard
                           _view_log
 ---------------------------------------------------------------------------------
 (1) _view_log                                             4     4      0    9769
                                             13 COMRAM     4     4      0
                         _clcd_print
                         _clcd_write
                       _event_reader
 ---------------------------------------------------------------------------------
 (1) _view_dashboard                                       0     0      0   18681
                            ___lwdiv
                            ___lwmod
                         _clcd_print
                         _clcd_putch
                       _display_time
                        _event_store
                           _read_adc
 ---------------------------------------------------------------------------------
 (2) _read_adc                                             6     4      2       0
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _event_store                                         12     6      6    2470
                                             17 COMRAM    12     6      6
                            ___lwdiv
                            ___lwmod
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (3) _write_external_eeprom                                4     3      1     393
                                             13 COMRAM     4     3      1
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     463
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              6 COMRAM     7     3      4
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (2) _display_time                                         0     0      0    5355
                         _clcd_print
 ---------------------------------------------------------------------------------
 (1) _set_time                                             5     5      0   16782
                                             15 COMRAM     5     5      0
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                       _write_DS1307
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    2120
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    2124
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _read_switches                                        1     1      0      30
                                              0 COMRAM     1     1      0
                           _scan_key
 ---------------------------------------------------------------------------------
 (2) _scan_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    2830
                        _init_DS1307
                           _init_adc
                          _init_clcd
                           _init_i2c
                 _init_matrix_keypad
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            1     1      0    2096
                                              2 COMRAM     1     1      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_DS1307                                          1     1      0     734
                                              3 COMRAM     1     1      0
                        _read_DS1307
                       _write_DS1307
 ---------------------------------------------------------------------------------
 (2) _write_DS1307                                         2     1      1     598
                                              1 COMRAM     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _get_time                                             0     0      0      67
                        _read_DS1307
 ---------------------------------------------------------------------------------
 (3) _read_DS1307                                          2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _download_log                                         8     8      0   12179
                                             13 COMRAM     8     8      0
                             ___wmul
                         _clcd_print
                         _clcd_write
                       _event_reader
                              _putch
                               _puts
 ---------------------------------------------------------------------------------
 (2) _puts                                                 2     0      2     364
                                              1 COMRAM     2     0      2
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _event_reader                                         7     7      0    2318
                                              6 COMRAM     7     7      0
                             ___wmul
               _read_external_eeprom
 ---------------------------------------------------------------------------------
 (3) _read_external_eeprom                                 2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (4) _i2c_write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_rep_start                                        0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_read                                             0     0      0       0
                         _i2c_no_ack
                        _i2c_rx_mode
 ---------------------------------------------------------------------------------
 (5) _i2c_rx_mode                                          0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (5) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c_no_ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1871
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _display_main_menu                                    0     0      0   11871
                         _clcd_print
                         _clcd_putch
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1    4420
                                             13 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clear_log                                            2     2      0    7451
                                              5 COMRAM     2     2      0
                         _clcd_print
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3    5355
                                              2 COMRAM     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_write                                           2     1      1    2096
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_write
   _clear_log
     _clcd_print
       _clcd_write
     _clcd_write
   _display_main_menu
     _clcd_print
     _clcd_putch
       ___awdiv (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         _read_adc (ARG)
       ___lwmod (ARG)
       _clcd_write (ARG)
     _clcd_write
   _download_log
     ___wmul
     _clcd_print
     _clcd_write
     _event_reader
       ___wmul
       _read_external_eeprom
         _i2c_read
           _i2c_no_ack
           _i2c_rx_mode
             _i2c_idle
         _i2c_rep_start
           _i2c_idle
         _i2c_start
           _i2c_idle
         _i2c_stop
           _i2c_idle
         _i2c_write
           _i2c_idle
     _putch
     _puts
       _putch
   _get_time
     _read_DS1307
       _i2c_read
       _i2c_rep_start
       _i2c_start
       _i2c_stop
       _i2c_write
   _init_config
     _init_DS1307
       _read_DS1307
       _write_DS1307
         _i2c_start
         _i2c_stop
         _i2c_write
     _init_adc
     _init_clcd
       _clcd_write
     _init_i2c
     _init_matrix_keypad
   _read_switches
     _scan_key
   _set_time
     ___awdiv
     ___awmod
     _clcd_print
     _clcd_putch
     _clcd_write
     _write_DS1307
   _view_dashboard
     ___lwdiv
     ___lwmod
     _clcd_print
     _clcd_putch
     _display_time
       _clcd_print
     _event_store
       ___lwdiv
       ___lwmod
       _write_external_eeprom
         ___lwdiv (ARG)
         ___lwmod (ARG)
         _i2c_start (ARG)
         _i2c_stop (ARG)
         _i2c_write (ARG)
     _read_adc
   _view_log
     _clcd_print
     _clcd_write
     _event_reader

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      25        0.0%
BITBIGSFRll        281      0       0      23        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      80       5       80.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1F      51       1       85.3%
BITBIGSFRhhhlhh     27      0       0      17        0.0%
BITBIGSFRlh          F      0       0      22        0.0%
BITBIGSFRhhhh        E      0       0      16        0.0%
BITBIGSFRhhlhl       C      0       0      20        0.0%
BITBIGSFRhhlhhl      8      0       0      19        0.0%
BITBIGSFRhhll        8      0       0      21        0.0%
BITBIGSFRhhlhhh      7      0       0      18        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D1      24        0.0%
DATA                 0      0      D1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Jan 06 23:01:12 2025

        _write_external_eeprom 176E                 clcd_print@addr 002C                 clcd_print@data 002A  
                           l63 1654                             l68 1E4C                             _GO 7E11  
                           u80 1612                             u81 160E                   ___awdiv@sign 002D  
          ___wmul@multiplicand 002A             _init_matrix_keypad 15B4                            l221 2EDC  
                          l302 1AA2                            l152 2854                            l243 1768  
                          l244 176C                            l180 273A                            l253 19B8  
                          l165 294E                            l247 1BCA                            l256 1600  
                          l432 16A4                            l184 23A4                            l280 1DB0  
                          l272 1D5A                            l281 1DEC                            l273 1E46  
                          l290 1E44                            l282 1DC4                            l274 1D96  
                          l291 1E30                            l275 1D6E                            l284 1DD8  
                          l269 15C4                            l277 1D82                            l429 17AC  
                          l198 29DA                            l382 17B0                            l287 1E08  
                          l552 15A0                            l289 1E1C                            l625 20A0  
                          l385 17EC                            l490 1B22                            l482 1636  
                          l555 15A2                            l571 155C                            l379 16FC  
                          l580 154C                            l740 1604                            l557 15B0  
                          l565 1564                            l805 253E                            l485 16CE  
                          l493 15D6                            l629 20C6                            l558 15B2  
                          l574 1590                            l742 1612                            l583 1584  
                          l743 1618                            l479 1834                            l568 156C  
                          l577 1554                            l842 1886                            l674 2216  
                          l845 167A                            l749 1732                            _CKE 7E3E  
                          _RC0 7C10                            _RC1 7C11                            _RC2 7C12  
                          _RD7 7C1F                            u400 1DE6                            u401 1DE2  
                          u410 1E02                            u330 1D54                            u411 1DFE  
                          u331 1D50                            u420 1E16                            u340 1D68  
                          u421 1E12                            u341 1D64                            u430 1E2A  
                          u350 1D7C                            u431 1E26                            u351 1D78  
                          u440 1E3E                            u360 1D90                            u600 1A66  
                          _PEN 7E2A                            u441 1E3A                            u361 1D8C  
                          u601 1A62                            u370 1DAA                            u610 1A80  
                          u371 1DA6                            u611 1A7C                            u380 1DBE  
                          u620 1A98                            u381 1DBA                            u621 1A94  
                          u390 1DD2                            u391 1DCE                            u580 1A40  
                          _SEN 7E28                            u581 1A3C                            u590 1A56  
                          u591 1A52                            _RX9 7D5E                            _TX9 7D66  
                ?_display_time 0028                            _Jay 0010                            _key 001A  
               clcd_putch@addr 0035                 clcd_putch@data 0036                   ___awmod@sign 002D  
                          prod 0FF3                            wreg 0FE8            ?_init_matrix_keypad 0028  
              ?_view_dashboard 0028                           l2020 1A66                           l2012 1A30  
                         l2014 1A40                           l2030 1A88                           l3000 2722  
                         l2032 1A98                           l2016 1A46                           l3002 2736  
                         l2018 1A56                           l2026 1A70                           l3010 20E0  
                         l3100 230C                           l2028 1A80                           l2036 1AA0  
                         l1076 1D3E                           l3020 2134                           l3012 20F2  
                         l3004 20C8                           l3110 2360                           l3102 2328  
                         l3022 213E                           l3014 20FC                           l3030 214E  
                         l3006 20D8                           l1343 1A2C                           l3120 1836  
                         l3112 2380                           l3104 2334                           l3200 2BD6  
                         l1336 1A24                           l3040 21C4                           l3032 215E  
                         l3024 2142                           l3016 210C                           l3008 20DC  
                         l1089 1C7A                           l1353 194C                           l3130 187C  
                         l3122 1842                           l3114 2396                           l3106 2338  
                         l3210 2C20                           l3202 2BE6                           l1346 1944  
                         l3050 2200                           l3042 21CA                           l3034 2174  
                         l3026 2146                           l3018 211C                           l3124 1852  
                         l1524 1548                           l2500 1550                           l3116 239A  
                         l3108 234E                           l3060 2218                           l3220 2CA2  
                         l3212 2C3E                           l3204 2BEE                           l3140 2996  
                         l3052 2204                           l3044 21DC                           l3036 218C  
                         l3300 1EC6                           l2510 1750                           l2502 1736  
                         l3126 1862                           l3070 225A                           l3062 221C  
                         l3230 2D10                           l3222 2CA4                           l3214 2C5C  
                         l3206 2BF8                           l3150 29D2                           l3142 299E  
                         l3134 2950                           l3054 220E                           l3046 21EC  
                         l3038 219C                           l3310 1EFC                           l3302 1ED4  
                         l2520 175A                           l2512 1752                           l2504 1748  
                         l3128 1878                           l3080 229C                           l3072 2272  
                         l3064 222E                           l2600 16C8                           l3240 2D52  
                         l3232 2D26                           l3224 2CB4                           l3208 2C02  
                         l3216 2C7E                           l3160 2A16                           l3152 29E2  
                         l3144 29A6                           l3136 2960                           l3056 2212  
                         l3048 21EE                           l3312 1F00                           l3304 1ED8  
                         l2514 1754                           l2506 174C                           l2522 155E  
                         l2530 1566                           l3090 22B8                           l3082 22A4  
                         l3074 227C                           l3066 223A                           l1722 1592  
                         l3250 2DDC                           l3242 2D70                           l3234 2D36  
                         l3226 2CB8                           l3218 2C92                           l3170 2A98  
                         l3162 2A1A                           l3154 29F4                           l3146 29B8  
                         l3138 2972                           l2610 19BA                           l3314 1F12  
                         l3306 1EEA                           l3322 1F2C                           l2516 1756  
                         l2508 174E                           l2604 1656                           l2540 1582  
                         l2524 1560                           l2532 1568                           l3092 22CA  
                         l3084 22B0                           l3068 224A                           l1724 1596  
                         l3260 2EA0                           l3252 2DE4                           l3244 2D8E  
                         l3236 2D3E                           l3228 2CD0                           l3180 2AF0  
                         l3172 2AA0                           l3164 2A32                           l3156 2A04  
                         l3148 29BC                           l2620 19F2                           l2612 19C2  
                         l3332 1F40                           l3316 1F16                           l3308 1EF4  
                         l2518 1758                           l2550 1988                           l2702 15EC  
                         l2606 1672                           l2534 1556                           l2526 1588  
                         l3094 22D2                           l3078 2284                           l1726 159E  
                         l1830 1D40                           l3270 2ECC                           l3262 2EAA  
                         l3254 2DEE                           l3246 2DAC                           l3238 2D48  
                         l3190 2B54                           l3182 2B0E                           l3174 2AAA  
                         l3166 2A72                           l3158 2A06                           l2630 1A1E  
                         l2622 19F8                           l2614 19D4                           l2710 1F8A  
                         l3318 1F24                           l2544 194E                           l2536 1558  
                         l2528 158C                           l1576 1604                           l3096 22D6  
                         l2560 1632                           l2552 161C                           l1680 15B4  
                         l1832 1D54                           l2800 1CB4                           l3272 2ED4  
                         l3264 2EB4                           l3256 2DF2                           l3192 2B64  
                         l3248 2DCA                           l3176 2AB4                           l3168 2A88  
                         l3184 2B30                           l2624 1A0E                           l2616 19DC  
                         l2640 191A                           l2632 18EA                           l2720 2008  
                         l2712 1FA6                           l2704 1F7A                           l3280 1E60  
                         l2546 195C                           l2538 157A                           l1578 1614  
                         l3098 2308                           l2554 1620                           l2650 1B28  
                         l1682 15BC                           l1850 1D90                           l2810 1CEC  
                         l2802 1CBC                           l3266 2EBE                           l3258 2E04  
                         l3194 2B68                           l3186 2B42                           l3178 2AD2  
                         l2626 1A16                           l2618 19E4                           l2642 1930  
                         l2634 18FC                           l2570 1786                           l2562 1770  
                         l2730 207C                           l2722 2028                           l2714 1FBA  
                         l3290 1E9A                           l3282 1E72                           l2548 1984  
                         l2580 1688                           l2740 23A6                           l2556 1626  
                         l1676 16D0                           l2660 1B5A                           l2652 1B2E  
                         l1684 15BE                           l1860 1DBE                           l1844 1D7C  
                         l2820 1D18                           l2812 1CF2                           l2804 1CCE  
                         l3268 2EC2                           l3196 2B80                           l3188 2B52  
                         l2628 1A18                           l2644 1938                           l2636 1904  
                         l2572 178A                           l2564 1774                           l2724 2030  
                         l2732 20A0                           l2716 1FD2                           l2900 2760  
                         l3292 1E9E                           l3284 1E76                           l3276 1E48  
                         l2582 168E                           l2750 23E2                           l2742 23B6  
                         l2590 16A8                           l2558 162C                           l1678 16F4  
                         l2670 1B86                           l2662 1B64                           l2654 1B30  
                         l1854 1DAA                           l1838 1D68                           l2814 1D08  
                         l2806 1CD6                           l2822 1D1E                           l2830 1BCC  
                         l3198 2BC0                           l2646 193E                           l2638 190C  
                         l2574 1792                           l2566 177A                           l2726 2044  
                         l2734 20A2                           l2718 1FEC                           l2910 27E6  
                         l2902 2776                           l3294 1EAC                           l3286 1E84  
                         l3278 1E5C                           l2496 15A2                           l2584 1692  
                         l2576 167E                           l2760 2464                           l2752 23F4  
                         l2744 23DA                           l2592 16AC                           l2680 1BB8  
                         l2672 1B8E                           l2664 1B6C                           l2656 1B40  
                         l2648 1B24                           l1872 1DE6                           l2824 1D2E  
                         l2816 1D10                           l2808 1CDE                           l2840 1BF8  
                         l2832 1BD0                           l2568 1780                           l2736 20A6  
                         l2728 2068                           l2912 27FC                           l2920 2858  
                         l2904 27B6                           l3296 1EB0                           l3288 1E88  
                         l2498 154E                           l2586 169E                           l2578 1682  
                         l2770 24E6                           l2762 2478                           l2754 2408  
                         l2594 16B2                           l2690 1816                           l2682 1BC2  
                         l2674 1B98                           l2666 1B76                           l2658 1B4A  
                         l1882 1E16                           l1866 1DD2                           l2826 1D36  
                         l2818 1D12                           l2850 1C30                           l2842 1C00  
                         l2834 1BDE                           l2738 20C2                           l2930 289E  
                         l2922 286A                           l2914 2800                           l2906 27C6  
                         l3298 1EC2                           l2772 2502                           l2764 24AC  
                         l2756 241C                           l2780 1702                           l2596 16B8  
                         l2692 1820                           l2684 17EE                           l2676 1BA0  
                         l2668 1B7C                           l1876 1E02                           l2860 1C6A  
                         l2852 1C46                           l2844 1C12                           l2836 1BE6  
                         l2940 2900                           l2932 28D0                           l2916 2832  
                         l2908 27DA                           l2950 256E                           l2774 2524  
                         l2766 24E0                           l2758 2450                           l2782 1712  
                         l2598 16BC                           l2686 17F6                           l2678 1BAA  
                         l2870 1640                           l1894 1E3E                           l2790 1C8E  
                         l2862 1C72                           l2854 1C4E                           l2846 1C1A  
                         l2838 1BEA                           l2694 15C6                           l2926 2882  
                         l2918 2848                           l2942 291C                           l2960 25B0  
                         l2952 2572                           l2768 24E2                           l2776 2528  
                         l2784 1716                           l2880 1ABC                           l2688 1802  
                         l2872 1648                           l1888 1E2A                           l2792 1C96  
                         l2856 1C54                           l2848 1C22                           l2696 17AE  
                         l2944 292C                           l2928 2898                           l2936 28E6  
                         l2962 25CA                           l2954 258E                           l2970 25FC  
                         l2946 2540                           l2778 16FE                           l2890 1B00  
                         l2882 1ACA                           l2874 164C                           l2866 1638  
                         l1898 1E44                           l2794 1C9A                           l2786 1C7C  
                         l2858 1C5A                           l2698 17BE                           l2938 28F8  
                         l2980 267E                           l2972 260E                           l2964 25D0  
                         l2956 2592                           l2948 2552                           l2892 1B08  
                         l2884 1AE0                           l2876 1650                           l2868 163C  
                         l2796 1CA8                           l2788 1C80                           l2990 26F0  
                         l2982 26A0                           l2974 2622                           l2966 25EC  
                         l2958 25A0                           l2894 1B1E                           l2886 1AF2  
                         l2878 1AA4                           l2798 1CB0                           l2992 26F4  
                         l2984 26C2                           l2976 2644                           l2968 25F2  
                         l2888 1AF6                           l2896 273C                           l2994 2706  
                         l2986 26D4                           l2978 266A                           l2898 2740  
                         l2996 270A                           l2988 26DE                           l2998 271E  
                         _ADFM 7E07                           _ADON 7E10                           _CHS0 7E12  
                         _CHS1 7E13                           _CHS2 7E14                           _CHS3 7E15  
                         STR_1 2FF8                           STR_2 2FF5                           STR_3 2FE6  
                         STR_4 2FE9                           STR_5 2FEC                           STR_6 2FEF  
                         STR_7 2FF2                           STR_8 2FFB                           STR_9 2FE3  
                         _BRGH 7D62                           _CREN 7D5C                           u2000 2360  
                         u2001 235C                           u2010 2972                           u2011 296E  
                         u2100 2B52                           u2020 29B8                           u1300 17AC  
                         u2101 2B4E                           u2021 29B4                           u1301 17A8  
                         u1230 15B0                           u2110 2B64                           u2030 29D2  
                         u1310 19D4                           u1231 15AC                           u2111 2B60  
                         u2031 29CE                           u1311 19D0                           u1240 1746  
                         u2200 2E04                           u2120 2B80                           u2040 29F4  
                         u1320 19F2                           u1400 1FBA                           u1241 1740  
                         u2201 2E00                           u2121 2B7C                           u2041 29F0  
                         u1321 19EE                           u1401 1FB6                           u2130 2BD6  
                         u2050 2A04                           u1330 1A0E                           u1410 1FCE  
                         u2210 1E72                           u2131 2BD2                           u2051 2A00  
                         u1331 1A0A                           u1411 1FCA                           u2211 1E6E  
                         u1260 1768                           u1500 2478                           u2140 2C92  
                         u2060 2A16                           u1340 18FC                           u1420 2008  
                         u2220 1E9A                           u1261 1764                           u1501 2474  
                         u2141 2C8E                           u2061 2A12                           u1341 18F8  
                         u1421 2004                           u2221 1E96                           u1270 1980  
                         u1510 2502                           u2150 2CA2                           u2070 2A32  
                         u1350 191A                           u1430 2044                           u2230 1EC2  
                         u1255 1748                           u1511 24FE                           u2151 2C9E  
                         u2071 2A2E                           u1351 1916                           u1431 2040  
                         u2231 1EBE                           u1280 19A8                           u1520 253E  
                         u1600 1BDE                           u2160 2CB4                           u2080 2A88  
                         u1360 1930                           u1440 207C                           u2240 1EEA  
                         u1521 253A                           u1601 1BDA                           u2161 2CB0  
                         u2081 2A84                           u1361 192C                           u1441 2078  
                         u2241 1EE6                           u1290 19B8                           u1530 1732  
                         u1610 1BF8                           u2170 2CD0                           u2090 2B42  
                         u1450 20C2                           u1370 17BE                           u2250 1F12  
                         u1291 19B4                           u1531 172E                           u2307 1B88  
                         u1611 1BF4                           u2171 2CCC                           u2091 2B3E  
                         u1451 20BE                           u1371 17BA                           u2251 1F0E  
                         u1460 23F4                           u1540 1C8E                           u1620 1C12  
                         u2180 2D26                           u1700 27FC                           u1277 1976  
                         u1461 23F0                           u2317 1B9A                           u1541 1C8A  
                         u1621 1C0E                           u2181 2D22                           u1701 27F8  
                         u1470 2408                           u1550 1CA8                           u1630 1C30  
                         u2190 2DDC                           u1390 1FA6                           u1710 2848  
                         u1287 199E                           u1471 2404                           u2327 1BB0  
                         u1551 1CA4                           u1631 1C2C                           u2191 2DD8  
                         u1391 1FA2                           u1711 2844                           u1800 25B0  
                         u1480 241C                           u1560 1CCE                           u1640 1C46  
                         u1720 286A                           u1801 25AC                           u1481 2418  
                         u2337 1BC4                           u1561 1CCA                           u1641 1C42  
                         u1385 17C6                           u1721 2866                           u1810 25CA  
                         u1490 2464                           u1570 1CEC                           u1650 1C6A  
                         u1730 287E                           u1811 25C6                           u1491 2460  
                         u2347 2264                           u1571 1CE8                           u1651 1C66  
                         u1731 287A                           u2267 2126                           u1820 25EC  
                         u1660 1ACA                           u1580 1D08                           u1740 2898  
                         u1900 20F2                           u1821 25E8                           u2357 238A  
                         u1661 1AC6                           u2277 1B36                           u1581 1D04  
                         u1741 2894                           u1901 20EE                           u1830 260E  
                         u1590 1D2E                           u1750 28E2                           u1670 2776  
                         u1910 219C                           u2367 186C                           u1831 260A  
                         u2287 1B50                           u1591 1D2A                           u1751 28DE  
                         u1671 2772                           u1911 2198                           u1840 26D4  
                         u1760 28F8                           u1680 27C6                           u1920 21C4  
                         u1841 26D0                           u2297 1B66                           u1761 28F4  
                         u1681 27C2                           u1921 21C0                           u1850 26F0  
                         u1770 2552                           u1690 27DA                           u1930 21DC  
        ?_read_external_eeprom 0028                           u1851 26EC                           u1771 254E  
                         u1691 27D6                           u1931 21D8                           u1860 2706  
                         u1780 256E                           u1940 21EC                           u1861 2702  
                         u1781 256A                           u1941 21E8                           u1870 271E  
                         u1790 258E                           u1950 2200                           u1871 271A  
                         u1791 258A                           u1951 21FC                           u1880 2736  
                         u1960 222E                           u1881 2732                           u1961 222A  
                         u1970 22CA                           u1890 20D8                           u1971 22C6  
                         u1891 20D4                           u1980 2328                           u1981 2324  
                         u1990 234E                           u1991 234A                           _RCEN 7E2B  
                         _RCIF 7CF5                           _RBPU 7F8F                           _SPEN 7D5F  
                         _RSEN 7E29                           _TXEN 7D65                           _TXIF 7CF4  
                         _SYNC 7D64                           _gear 00CE                           _flag 000C  
                 ?_init_DS1307 0028                           _main 1E48                           _menu 0047  
                         _hour 001D                           _time 001F                           fsr0h 0FEA  
                         indf0 0FEF                           fsr2h 0FDA                           fsr0l 0FE9  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         _puts 16FE                           prodh 0FF4                           prodl 0FF3  
                         start 0000                   ?_read_DS1307 0028           ??_init_matrix_keypad 0028  
                 ___param_bank 0000                 clcd_write@byte 0029                  _i2c_rep_start 1556  
                ??_i2c_rx_mode 0028                   ?_event_store 0039                          _ADCS0 7E00  
                        _ADCS1 7E01                          _ADCS2 7E02                          ?_main 0028  
                        _ACKEN 7E2C                          _ACKDT 7E2D                 ??_display_time 002D  
                        _ACQT0 7E03                          _ACQT1 7E04                          _ACQT2 7E05  
              __end_of___awdiv 1D40                          STR_10 2F0B                          STR_11 2F1F  
                        STR_20 2FE0                          STR_12 2EF5                          STR_21 2F86  
                        STR_13 2F44                          STR_22 2FA1                          STR_30 2F94  
                        STR_14 2F56                          STR_23 2FCE                          STR_31 2F78  
                        STR_15 2EDF                          STR_24 2F1C                          STR_16 2FD7  
                        _BRG16 7DC3                          STR_25 2F1C                          STR_17 2FAE  
                        STR_26 2F1C                          STR_18 2F67                          STR_19 2FDF  
                        STR_27 2FC5                          STR_28 2FBA                __end_of___awmod 1C7C  
                        STR_29 2F32                          ?_puts 0029                ___awdiv@divisor 002A  
                        _PCFG0 7E08                          _PCFG1 7E09                          _PCFG2 7E0A  
                        _PCFG3 7E0B                __end_of___lwdiv 1A2E                __end_of___lwmod 194E  
                 ?_init_config 0028                ___awdiv@counter 002C                          _VCFG0 7E0C  
                        _VCFG1 7E0D                          _RCREG 0FAE                          _SENDB 7D63  
                        _SPBRG 0FAF                          _PORTB 0F81                          _PORTD 0F83  
                        _TRISB 0F93                          _TRISC 0F94                          _TRISD 0F95  
                        _SSPIF 7CF3                          _TXREG 0FAD      write_external_eeprom@data 0035  
                        _field 0012                   view_log@flag 0017                          _speed 000A  
                        _state 0019                          _putch 1602                          tablat 0FF5  
                        puts@s 0029                          status 0FD8                     _i2c_no_ack 1548  
              __initialization 1888                 ?_i2c_rep_start 0028         ?_write_external_eeprom 0035  
                 __end_of_main 1F7A                   __end_of_puts 1734               __end_of_i2c_idle 15B4  
             __end_of_i2c_read 1586               __end_of_i2c_stop 156E                  ?_download_log 0028  
                       ??_main 0045                         ??_puts 002B                  __activetblptr 0002  
          __end_of_i2c_rx_mode 1556                   _write_DS1307 161A                  ?_event_reader 0028  
             write_DS1307@data 0029                         _ADCON1 0FC1               read_switches@key 0018  
       ??_read_external_eeprom 0029                         _ADRESH 0FC4                         _ADRESL 0FC3  
             ___awdiv@dividend 0028             read_DS1307@address 0029                         ?_putch 0028  
                       _SSPADD 0FC8                         _TRISC3 7CA3                         _TRISC4 7CA4  
                       _TRISD7 7CAF                         _SSPBUF 0FC9               __end_of_get_time 1B24  
                       ___wmul 1656                      ??___awdiv 002C                      ??___awmod 002C  
                       _change 000E                      ??___lwdiv 0032                      ??___lwmod 002C  
             __end_of_init_i2c 15A2               __end_of_init_adc 16FE                         _events 0060  
             __end_of_read_adc 17EE                         clear_0 18CE                         clear_1 18DA  
               ??_download_log 0035               ___awdiv@quotient 002E                         _minute 001E  
                       _second 001C                ___awmod@divisor 002A                         isa$std 0001  
             __end_of_scan_key 1E48                  view_log@count 0016                ___awmod@counter 002C  
               ??_event_reader 002E                   __pdataCOMRAM 0047               __end_of_set_time 2EDE  
                 __mediumconst 2EDE                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8               __end_of_view_log 2218                event_store@gear 003B  
              event_store@time 0039                     __accesstop 0060        __end_of__initialization 18E0  
         __end_of_display_time 15D8                  ___rparam_used 0001                ??_i2c_rep_start 0028  
                  ?_i2c_no_ack 0028                 __pcstackCOMRAM 0028                   __pidataBANK0 15D8  
                  _i2c_rx_mode 154E                  __end_of_putch 161A              __end_of_i2c_start 1566  
            __end_of_i2c_write 1592               ??_view_dashboard 0045                        ??_putch 0028  
                   __pbssBANK0 0060         write_external_eeprom@i 0036                      ?_i2c_idle 0028  
                    ?_i2c_read 0028                      ?_i2c_stop 0028                     _clcd_print 194E  
                   _clcd_putch 15EA                     _clcd_write 1734            write_DS1307@address 002A  
 write_external_eeprom@address 0038                     _gear_index 0008                        ?___wmul 0028  
            read_switches@once 0051                        _ACKSTAT 7E2E                        _SSPCON1 0FC6  
                    ?_get_time 0028                  _read_switches 1A2E                     ??_i2c_idle 0028  
                   ??_i2c_read 0028                     ??_i2c_stop 0028                      ?_init_i2c 0028  
         __end_of_download_log 23A6                      ?_init_adc 0028                      ?_read_adc 0028  
            __end_of_clear_log 1888                      ?_scan_key 0028        ??_write_external_eeprom 0036  
         __end_of_event_reader 2540                        __Hparam 0000                        __Lparam 0000  
                    ?_set_time 0028                   event_store@i 0043                   event_store@j 0041  
                      ___awdiv 1C7C                        ___awmod 1BCC                      ?_view_log 0028  
                      ___lwdiv 19BA                        ___lwmod 18EA                        __pcinit 1888  
                      __ramtop 0600                        __ptext0 1E48                        __ptext1 20C8  
                      __ptext2 273C                        __ptext3 17AE                        __ptext4 1F7A  
                      __ptext5 176E                        __ptext6 18EA                        __ptext7 19BA  
                      __ptext8 15C6                        __ptext9 2950                     _menu_index 0006  
            __end_of_init_clcd 1BCC               ___awmod@dividend 0028                 ?_read_switches 0028  
                   ??_get_time 002B           end_of_initialization 18E0                    set_time@min 003A  
                  set_time@sec 003B                     ??_init_i2c 0028                     ??_init_adc 0028  
                __Lmediumconst 2EDE                     ??_read_adc 002A                     ??_scan_key 0028  
                  ?_clcd_print 002A                    ?_clcd_putch 0035                    ?_clcd_write 0028  
                   ??_set_time 0037                        postdec1 0FE5                        postdec2 0FDD  
                      postinc0 0FEE                        postinc2 0FDE                     ??_view_log 0035  
                    _PORTBbits 0F81                   _display_time 15C6                  i2c_write@data 0028  
             event_store@speed 003D               init_DS1307@dummy 002B                read_DS1307@data 002A  
     read_external_eeprom@data 002A                   ??_i2c_no_ack 0028                   ?_i2c_rx_mode 0028  
               __end_of___wmul 167C                     _write_addr 001B                  __pidataCOMRAM 156F  
          start_initialization 1888                ??_read_switches 0028                      _i2c_start 155E  
                    _i2c_write 1586             __end_of_i2c_no_ack 154E                  ??_init_DS1307 002B  
                ??_read_DS1307 0029          __end_of_i2c_rep_start 155E                       ??___wmul 002C  
                  __pdataBANK0 00CE                  ??_event_store 003F                   _download_log 2218  
  read_switches@detection_type 0028                  ??_init_config 002C                   _event_reader 23A6  
                  __pbssCOMRAM 0001                     ?_i2c_start 0028                     ?_i2c_write 0028  
             ___lwdiv@dividend 002E  __end_of_write_external_eeprom 17AE                      _clear_log 1836  
          __end_of_init_DS1307 1836                  __pmediumconst 2EDE                       ?___awdiv 0028  
                     ?___awmod 0028                       ?___lwdiv 002E                      _clock_reg 0001  
                     ?___lwmod 0028            __end_of_read_DS1307 16D0                  ?_write_DS1307 0029  
          __end_of_event_store 20C8              _display_main_menu 2540               ___lwdiv@quotient 0032  
                    _init_clcd 1B24            __end_of_init_config 1656             ?_display_main_menu 0028  
               ___wmul@product 002C    read_external_eeprom@address 0029                     set_time@hr 0039  
                 ??_clcd_print 002D                   ??_clcd_putch 0036     __end_of_init_matrix_keypad 15C6  
                 ??_clcd_write 0029            ??_display_main_menu 0037                     ?_clear_log 0028  
                download_log@i 0039                  download_log@j 003B                  download_log@s 0037  
        clcd_write@control_bit 0028                 ??_write_DS1307 002A              ___wmul@multiplier 0028  
    __end_of_display_main_menu 273C                    ??_i2c_start 0028             __end_of_clcd_print 19BA  
                  ??_i2c_write 0028             __end_of_clcd_putch 1602             __end_of_clcd_write 176E  
                   ?_init_clcd 0028                      copy_data0 189C                      copy_data1 18BC  
                     _i2c_idle 15A2                       _i2c_read 157A                       _i2c_stop 1566  
                event_reader@i 0031                  event_reader@j 0033                    _init_DS1307 17EE  
                  _read_DS1307 16A6                       __Hrparam 0000                       __Lrparam 0000  
 __end_of_read_external_eeprom 16A6                    _event_count 0014                   _select_index 004F  
                  _event_store 1F7A                    _init_config 1638                ___lwdiv@divisor 0030  
              ___lwdiv@counter 0034                       __ptext10 1BCC                       __ptext11 1C7C  
                     __ptext20 161A                       __ptext12 1A2E                       __ptext21 1AA4  
                     __ptext13 1D40                       __ptext30 155E                       __ptext22 16A6  
                     __ptext14 1638                       __ptext31 1556                       __ptext23 2218  
                     __ptext15 15B4                       __ptext40 194E                       __ptext32 157A  
                     __ptext24 16FE                       __ptext16 1592                       __ptext41 1734  
                     __ptext33 154E                       __ptext25 1602                       __ptext17 1B24  
                     __ptext34 15A2                       __ptext26 23A6                       __ptext18 16D0  
                     __ptext35 1548                       __ptext27 167C                       __ptext19 17EE  
                     __ptext36 1656                       __ptext28 1586                       __ptext37 2540  
                     __ptext29 1566                       __ptext38 15EA                       __ptext39 1836  
                     _get_time 1AA4                       _init_i2c 1592                       _init_adc 16D0  
                     _read_adc 17AE                       _scan_key 1D40                    ??_clear_log 002D  
                     _set_time 2950                       isa$xinst 0000                       _view_log 20C8  
                    putch@byte 0028                   set_time@wait 0004                    ??_init_clcd 002A  
        __end_of_read_switches 1AA4                 _view_dashboard 273C               ___lwmod@dividend 0028  
         __end_of_write_DS1307 1638          event_reader@read_addr 0030                ___lwmod@divisor 002A  
              ___lwmod@counter 002C         __end_of_view_dashboard 2950           _read_external_eeprom 167C  
